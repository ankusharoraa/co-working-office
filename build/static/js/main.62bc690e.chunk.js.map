{"version":3,"sources":["components/Header.js","components/Footer.js","components/Workspaces.js","components/LandingPage.js","components/history.js","shared/WorkspaceInfo.js","components/SecuredRoute.js","components/WorkspaceDetails.js","components/PersonalInfo.js","components/ConfirmPerson.js","components/LeaseTimePeriod.js","components/PaymentComponent.js","components/Congrats.js","components/Feedback.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","togglePopup","setState","popState","state","toggleModal","isModelOpen","toggleNav","isNavOpen","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","key","className","expand","onClick","href","src","height","width","style","borderRadius","alt","isOpen","this","navbar","outline","toggle","onSubmit","htmlFor","type","id","name","innerRef","input","check","row","placement","target","toggleButton","fontSize","color","onMouseOver","onMouseLeave","onChange","e","handInputChange","marginLeft","Component","React","memo","year","Date","getFullYear","RenderWorkspace","workObj","zipCode","cityName","textDecoration","to","top","image","price","distance","description","useState","slider","setSlider","newFilter","Work","filterWork","filter","setFilter","i","workspaceinfo","length","push","location","animated","striped","fontFamily","textAlign","setDate","people","for","class","aria-hidden","min","max","defaultValue","step","val","document","getElementById","innerHTML","work","parseInt","console","log","map","newFil","marginBottom","marginTop","Landing","networkError","handleSubmit","validate","yyyy","errors","touched","test","verifyYear","split","setYear","textWrapper","textContent","replace","paraWrapper","anime","timeline","loop","add","targets","opacity","easing","duration","delay","el","today","dd","String","getDate","padStart","mm","getMonth","isDisabled","isVerified","Object","keys","some","x","placeholder","valid","invalid","onBlur","handleBlur","disabled","decrease","increase","overflow","sitekey","theme","onErrored","toggleWorkspace","history","WORKSPACEINFO","category","exposureAmount","featured","details","facilities","workImages","altText","caption","authentication","isLoggedIn","onAuthentication","getLoginStatus","SecuredRoute","component","rest","render","pathname","setPopState","togglePopUp","selectedWorkspace","workspace","fac","showDetails","showFac","items","body","getSelectedWorkspaceId","businessName","personEmail","personZipCode","touchedPersonEmail","businessNameTouched","personZipCodeTouched","personLocation","Validate","personEmailTouched","display","onFileChange","cursor","fontWeight","personName","personAddress","personPhone","personCity","personState","stopPropagation","AskInsurance","updateLeaseDuration","updateClickCount","insurancePart","scrollIntoView","monthly","sixMonths","twelveMonths","yesValue","noValue","oneMonth","sixMonth","twelveMonth","innerText","removeAttribute","borderColor","background","webkitTransition","transition","boxShadow","useEffect","selectedLeaseDuration","window","onpopstate","jumbo","workspacePrice","workspaceFac","updateRadioState","selectedWorkspaceId","halfYearlyPrice","AnnualPrice","setPremiumAmount","loaderStatus","setLoaderStatus","loading","pattern","inputMode","yesSelected","selectedRadioValueYes","selectedLeasePrice","setTimeout","left","download","emptySymbol","fullSymbol","fractions","handleValue","reload","MainComponent","a","fullName","sepratedName","firstName","lastName","personFirstName","personLastName","dateEntered","getYear","substring","setSelectedYear","zipCodeUs","handleFetch","formatZip","slice","url","axios","get","res","city","data","locState","undefined","officeCity","officeState","field","evt","selectedFile","files","reader","FileReader","match","imageChkSum","addEventListener","_handleReaderLoaded","readAsBinaryString","guideWireApi","headers","reqBody","selectedOfficeAddress1","selectedOfficeAddress2","setExposureAmount","post","proxyurl","JSON","stringify","output","response","premium","premiumWithUsd","separate","premiumAmount","error","scanCard","selectedFileState","imageChkSumState","taskId","httpOptions","btoa","trackPromise","GetresultUrls","xmlToJson","xml","obj","nodeType","attributes","j","attribute","item","nodeName","nodeValue","textNodes","call","childNodes","node","hasChildNodes","reduce","text","old","hitCount","resultUrls","getRes","jsonResponse","url2","httpOptions2","paramsNew","params","status","fetch","xmlString","XmlNode","DOMParser","parseFromString","setDataforXmlResponse","xmltojsonResponse","businessCard","newArr","checkZip","isNaN","splice","locationZip","toString","deletePersonDetails","findId","filteredWorkSpace","workspaceName","separateAddress","address1","trim","address2","radioValue","orignalValue","previousValue","clickCount","selectedRadioValue","totalAmount","selectedRadioValueNo","PersonInformation","updatePersonDetails","WorkspaceWithId","workspaceId","Workspaces","ConfirmPersonDetails","LeaseWorkspaceTimeDuration","PaymentComp","CongratsComp","FeedbackCompSecured","Feedback","agree","result","getCheckSumValue","crcVal","CRC32","bstr","lpad","s","len","chr","L","C","Array","join","promiseTracker","usePromiseTracker","exact","path","App","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.62bc690e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label, Popover, PopoverHeader\r\n} from 'reactstrap';\r\n\r\n\r\nexport default class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModelOpen: false,\r\n            popState: false,\r\n        }\r\n    }\r\n    togglePopup = () => {\r\n        this.setState({\r\n            popState: !this.state.popState\r\n        })\r\n    }\r\n    toggleModal = () => {\r\n        this.setState({ isModelOpen: !this.state.isModelOpen })\r\n    }\r\n    toggleNav = () => {\r\n        this.setState({ isNavOpen: !this.state.isNavOpen })\r\n    }\r\n    handleLogin = (event) => {\r\n        this.toggleModal();\r\n        alert(`\r\n        Username : ${this.username.value} \r\n        Password : ${this.password.value} \r\n        Remember : ${this.remember.checked}\r\n        `);\r\n\r\n        event.preventDefault();\r\n\r\n\r\n    }\r\n    // componentDidMount = () => {\r\n    //     this.setState({\r\n    //         popState: true\r\n    //     })\r\n\r\n    //     setTimeout(async () => {\r\n    //         return (\r\n    //             <Popover target=\"switch123\">\r\n    //                 {  this.setState({\r\n    //                     popState: false\r\n    //                 })}\r\n    //             </Popover>\r\n\r\n    //         )\r\n    //     }, 3000)\r\n\r\n\r\n    // }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar key={'navbarKey'} className=\"navbar-light bg-light p-0\" expand=\"sm\">\r\n                    <div className=\"container-fluid\">\r\n                        <NavbarToggler onClick={() => this.toggleNav()} />\r\n                        <NavbarBrand className=\"mr-auto ml-sm-0\" href=\"/\">\r\n                            <img src=\"/assets/images/logo.jpg\" height=\"50\" width=\"100\" style={{ borderRadius: \"80px\" }} alt=\"logo\" />\r\n                            <span className=\"navbar-brand mb-0 lead ml-sm-2 ml-2\">Co-Office Space\r\n                                </span>\r\n\r\n                        </NavbarBrand>\r\n\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n\r\n                            <Nav className=\"ml-auto\" navbar>\r\n\r\n                                <NavItem>\r\n                                    <div className='col-sm-12'>\r\n                                        <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span>Login</Button>\r\n                                    </div>\r\n                                </NavItem>\r\n\r\n\r\n\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <div>\r\n                    <Modal isOpen={this.state.isModelOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader>\r\n                            Login\r\n                    </ModalHeader>\r\n                        <ModalBody>\r\n\r\n                            <Form onSubmit={this.handleLogin}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"username\">Username</Label>\r\n                                    <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                        innerRef={(input) => this.username = input} />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"password\">Password</Label>\r\n                                    <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                        innerRef={(input) => this.password = input} />\r\n                                </FormGroup>\r\n                                <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"checkbox\" name=\"remember\"\r\n                                            innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                                </FormGroup>\r\n                                <FormGroup row className = 'mt-3'>\r\n                                    <Popover placement=\"bottom\" isOpen={this.state.popState} toggle={this.togglePopup} target=\"switch123\">\r\n                                        <PopoverHeader className=\"bg-dark text-white\">Please use this switch button to change the server.</PopoverHeader>\r\n                                    </Popover>\r\n                                            <div className='col-sm-1'> {this.props.toggleButton === false ?\r\n                                                <b style={{ fontSize: '16px', color: 'black' }} onMouseOver={this.togglePopup} onMouseLeave={this.togglePopup}>OPIN</b> :\r\n                                                <b className='lead' style={{ fontSize: '16px' }} onMouseOver={this.togglePopup} onMouseLeave={this.togglePopup}>OPIN</b>}\r\n                                            </div>\r\n                                            <div className='col-sm-1'>\r\n                                                <label id='switch123' className=\"switch\">\r\n                                                    <input type=\"checkbox\" name='toggleButton' onChange={(e) => this.props.handInputChange(e)} />\r\n                                                    <span className=\"slider round\"></span>\r\n                                                </label>\r\n                                            </div>\r\n                                            <div className='col-sm-1'>\r\n                                                {this.props.toggleButton ?\r\n                                                    <b style={{ fontSize: '16px', color: 'black', marginLeft : '15px' }} onMouseOver={this.togglePopup} onMouseLeave={this.togglePopup}>Mulesoft</b> :\r\n                                                    <b className='lead' style={{ fontSize: '16px', marginLeft : '15px' }} onMouseOver={this.togglePopup} onMouseLeave={this.togglePopup}>Mulesoft</b>}\r\n                                            </div>\r\n                                </FormGroup>\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                            </Form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nfunction Footer(props){\r\n    let date = new Date();\r\n    let year = date.getFullYear()\r\n\r\nreturn(\r\n    <div className = \"footer\">\r\n        <p>© Capgemini <img src = \"/assets/images/cgLogo.png\" alt = \"Cg logo\" style = {{height : '20px', width : '20px'}}></img> {year}. All rights reserved.</p>\r\n    </div>\r\n)\r\n}\r\nexport default React.memo(Footer)","import React, { useState } from 'react'\r\nimport { Progress, CardImg, Card, CardTitle, CardBody, CardText, CardHeader } from 'reactstrap';\r\nimport '../App.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction RenderWorkspace({ workObj, zipCode, cityName }) {\r\n\r\n    return (\r\n        <Card>\r\n            <Link style={{ textDecoration: 'none' }} to={`/workspaces/${workObj.id}`} >\r\n                <CardHeader>\r\n                    <CardTitle>{workObj.name}</CardTitle>\r\n                </CardHeader>\r\n                <CardImg top height=\"375px\" src={workObj.image} alt={workObj.name} />\r\n\r\n\r\n                <CardBody>\r\n                    <CardTitle>from ${workObj.price}/mo</CardTitle>\r\n                    {/* <CardSubtitle>{workObj.distance} {workObj.description} {zipCode}</CardSubtitle> */}\r\n                    <CardText>\r\n                        <small className=\"text-muted\">{workObj.distance} {workObj.description} {zipCode}({cityName})</small>\r\n                    </CardText>\r\n                </CardBody>\r\n            </Link>\r\n        </Card>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nconst Workspace = (props) => {\r\n    // const Work = props.workspaceinfo.map((workObj) => {\r\n    //     return (\r\n    //         <div className=\"col-sm-5 mt-3 mb-2 col-12\" key={workObj.id}>\r\n    //             <RenderWorkspace workObj={workObj} zipCode={props.zipCode} cityName = {props.location} />\r\n    //         </div>\r\n    //     )\r\n    // })\r\n    let [slider, setSlider] = useState(false)\r\n    let newFilter = []\r\n\r\n    let Work = []\r\n    let filterWork = []\r\n    let [filter, setFilter] = useState([])\r\n    for (let i = 0; i < props.workspaceinfo.length; i++) {\r\n        if (props.workspaceinfo[i].zipCode === props.zipCode) {\r\n            filterWork[i] = props.workspaceinfo[i]\r\n            Work.push(\r\n                <div className=\"col-sm-5 mt-3 mb-2 col-12\">\r\n                    <RenderWorkspace workObj={props.workspaceinfo[i]} zipCode={props.zipCode} cityName={props.location} />\r\n                </div>\r\n            )\r\n        }\r\n        if ((props.zipCode !== '10007' && props.zipCode !== '94111' && props.zipCode !== '60603')) {\r\n            if (props.workspaceinfo[i].zipCode === '') {\r\n\r\n                filterWork[i] = props.workspaceinfo[i]\r\n                Work.push(\r\n                    <div className=\"col-sm-5 mt-3 mb-2 col-12\">\r\n                        <RenderWorkspace workObj={props.workspaceinfo[i]} zipCode={props.zipCode} cityName={props.location} />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    let outputValue = () => {\r\n        setSlider(true);\r\n        let val = document.getElementById(\"price\").value;\r\n        document.getElementById(\"ageOutputId\").innerHTML = '$' + val;\r\n\r\n        newFilter = filterWork.filter(work => parseInt(work.price) <= parseInt(val))\r\n        console.log(newFilter)\r\n        setFilter(newFilter.map((newFil) =>\r\n            <div className=\"col-sm-5 mt-3 mb-2 col-12\">\r\n                <RenderWorkspace workObj={newFil} zipCode={props.zipCode} cityName={props.location} />\r\n            </div>\r\n        ))\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"text-center\"></div>\r\n                        <Progress animated={true} striped color=\"primary\" value=\"12\">12%</Progress>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <p className=\"lead\" style={{ fontFamily: \"'Courgette', cursive\", textAlign: \"center\", color: \"#007bff\" }}>Choose a preferred workspace</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-2 d-flex justify-content-center\">\r\n                    <div className=\"col-sm-5 offset-sm-1 col-12\">\r\n                        <p>Showing avalable properties for Date:- <strong>{props.setDate}</strong> and for <strong>{props.people}</strong> peoples</p>\r\n                    </div>\r\n                    <div className=\"col-sm-4 offset-sm-2 col-12\">\r\n                        <label for=\"price\"><strong>Price Range (<i class=\"fa fa-usd\" aria-hidden=\"true\"></i>) :-</strong></label>\r\n                        <output className=\"ml-sm-3 mr-sm-1\">$800</output>\r\n                        <input type=\"range\" id=\"price\" name=\"price\" min=\"800\" max=\"5000\" defaultValue=\"800\" step=\"5\" onChange={outputValue} />\r\n                        <output className=\"ml-1\" name=\"ageOutputName\" id=\"ageOutputId\">$5000</output>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row d-flex justify-content-center\">\r\n\r\n\r\n                    {slider ? filter : Work}\r\n                    <div className=\"col-sm-12 col-12\">\r\n                        {(filter.length === 0 && slider) ? <p style={{ marginBottom: '25%', marginTop: '20%' }} className=\"lead text-center\">There are no properties in this price range, please change the slider range to get the properties</p> : <></>}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default React.memo(Workspace); ","import React, { Component } from 'react'\r\nimport {\r\n    Button, Form, FormGroup, Input, FormFeedback, Card, CardBody, CardTitle\r\n} from 'reactstrap';\r\nimport anime from 'animejs/lib/anime.es.js';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\n\r\nexport default class Landing extends Component {\r\n\r\n    networkError = () => {\r\n        console.log(\"Network Error:\");\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        // console.log(\"Current state is \" + JSON.stringify(this.state));\r\n        // alert(\"Current state is \" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    validate = (zipCode, setDate, people, location,yyyy) => {\r\n\r\n        const errors = {\r\n            zipCode: '',\r\n            setDate: '',\r\n            people: '',\r\n            location: ''\r\n\r\n        }\r\n        // if (this.props.touched.zipCode && zipCode.length <= 3) {\r\n        //     errors.zipCode = \"Zip Code length should be more than 3\"\r\n        // }\r\n        // else if (this.props.touched.zipCode && zipCode.length > 6) {\r\n        //     errors.zipCode = \"Zip Code length should be less than 6\"\r\n        // }\r\n        const reg = /^([0-9]{5})(?:[-\\s]*([0-9]{4}))?$/;\r\n        if (this.props.touched.zipCode && !reg.test(zipCode)) {\r\n            errors.zipCode = \"Please enter the zip code in the US zip code format\"\r\n        }\r\n        else if (zipCode === '') {\r\n            errors.zipCode = \"Please enter the zip code\"\r\n        }\r\n\r\n        if (setDate === '') {\r\n            errors.setDate = \"Please select the setDate\"\r\n        }\r\n        else if(setDate){\r\n            let verifyYear = setDate.split('-');\r\n            if(verifyYear[0]<yyyy || verifyYear[0]>(yyyy+1)){\r\n                errors.setDate = \"Please check the year entered, it must be the present or next year.\"\r\n            }\r\n        }\r\n\r\n        if (people === '0' || people === 0 || people === '') {\r\n\r\n            errors.people = \"There must be atleast 1 person to find workspace\"\r\n\r\n        }\r\n        if (people > '50' || people > 50) {\r\n\r\n            errors.people = \"Maximum number of people can be 50 only\"\r\n\r\n        }\r\n        if (location === '') {\r\n            errors.location = 'Enter the zipCode to get the location'\r\n        }\r\n        if (zipCode.length >= 5 && location === '') {\r\n            errors.location = 'Incorrect ZipCode or This ZipCode does not exists in our database'\r\n        }\r\n        return errors;\r\n    }\r\n\r\n     setYear = (year)=>{\r\n        this.props.setYear(year);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let textWrapper = document.getElementById('title');\r\n        textWrapper.innerHTML = textWrapper.textContent.replace(/\\S/g, \"<span class='letter'>$&</span>\");\r\n\r\n        // let mobWrapper = document.getElementById('titleMob');\r\n        // mobWrapper.innerHTML = mobWrapper.textContent.replace(/\\S/g, \"<span class='letter'>$&</span>\");\r\n\r\n\r\n        // setTimeout(() => {\r\n        //     anime.timeline({ loop: true })\r\n        //         .add({\r\n        //             targets: '.ml16 .letter',\r\n        //             translateY: [-100, 0],\r\n        //             easing: \"easeOutExpo\",\r\n        //             duration: 1400,\r\n        //             delay: (el, i) => 30 * i\r\n        //         }).add({\r\n        //             targets: '.ml16',\r\n        //             opacity: 0,\r\n        //             duration: 1000,\r\n        //             easing: \"easeOutExpo\",\r\n        //             delay: 10000\r\n        //         });\r\n        // }, 24000);\r\n\r\n        // anime.timeline({ loop: true })\r\n        //     .add({\r\n        //         targets: '.ml16Mob .letter',\r\n        //         translateY: [-100, 0],\r\n        //         easing: \"easeOutExpo\",\r\n        //         duration: 1400,\r\n        //         delay: (el, i) => 30 * i\r\n        //     }).add({\r\n        //         targets: '.ml16Mob',\r\n        //         opacity: 0,\r\n        //         duration: 1000,\r\n        //         easing: \"easeOutExpo\",\r\n        //         delay: 10000\r\n        //     });\r\n\r\n\r\n        let paraWrapper = document.getElementById('para');\r\n        paraWrapper.innerHTML = paraWrapper.textContent.replace(/\\S/g, \"<span class='letter'>$&</span>\");\r\n\r\n        anime.timeline({ loop: true })\r\n            .add({\r\n                targets: '.ml3 .letter',\r\n                opacity: [0, 1],\r\n                easing: \"easeInOutQuad\",\r\n                duration: 1500,\r\n                delay: (el, i) => 150 * (i + 1)\r\n            }).add({\r\n                targets: '.ml3',\r\n                opacity: 0,\r\n                duration: 1000,\r\n                easing: \"easeOutExpo\",\r\n                delay: 20000000000\r\n            });\r\n    }\r\n    render() {\r\n        \r\n    \r\n        let today = new Date();\r\n        let dd = String(today.getDate()).padStart(2, '0');\r\n        let mm = String(today.getMonth() + 1).padStart(2, '0');;; //January is 0!\r\n        let yyyy = today.getFullYear();\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n        const errors = this.validate(this.props.zipCode, this.props.setDate, this.props.people, this.props.location,yyyy);\r\n        let isDisabled\r\n        if (this.props.isVerified === false) {\r\n            isDisabled = true;\r\n\r\n        }\r\n        else {\r\n            isDisabled = Object.keys(errors).some(x => errors[x]);\r\n        }\r\n        return (\r\n            <>\r\n\r\n                <div className=\"container-fluid main p-0\">\r\n                    <div className=\"row row-content mx-0\">\r\n                        <div className=\"col-sm-6 wrappertxt d-none d-sm-block\">\r\n                            <h1 className=\"ml16\" id=\"title\">Co-Working Office Space</h1>\r\n                            <p className=\"ml3\" id=\"para\">With all the buzz around coworking spaces, we decided to provide you with a primer. We cover the coworking basics as well as implications for the traditional office and facility managers.</p>\r\n                        </div>\r\n                        <div className = \"col-12 d-sm-none d-block\">\r\n                        <h2 id=\"titleMob\" className=\"ml16Mob col-12 ml-2 d-sm-none\">Co-Working Space</h2>\r\n                        </div>\r\n                        <div className=\"col-sm-4 offset-sm-1 py-5 mt-4 mr-5 wrapper col-12\">\r\n                            <Card>\r\n\r\n                                <CardBody>\r\n                                    <CardTitle>Where do you want to find workspace?</CardTitle>\r\n                                    <Form onSubmit={this.handleSubmit} key={'landing'}>\r\n                                        <FormGroup row>\r\n\r\n                                            <div className=\"col-sm-5 mt-2\">\r\n                                                <Input type=\"text\" name=\"zipCode\"\r\n                                                    placeholder=\"Zip Code\" value={this.props.zipCode}\r\n                                                    valid={errors.zipCode === ''}\r\n                                                    invalid={errors.zipCode !== ''}\r\n                                                    onBlur={this.props.handleBlur('zipCode')}\r\n                                                    onChange={this.props.handInputChange} />\r\n\r\n                                                <FormFeedback>{errors.zipCode}</FormFeedback>\r\n                                            </div>\r\n                                            <div className=\"col-sm-7 mt-2\">\r\n                                                <Input name=\"location\"\r\n                                                    placeholder=\"Enter 5 or 9-digit Zip Code\"\r\n                                                    valid={errors.location === ''}\r\n                                                    invalid={errors.location !== ''}\r\n                                                    disabled={true}\r\n                                                    value={this.props.location} />\r\n                                                <FormFeedback>{errors.location}</FormFeedback>\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        <CardTitle>When do you want to move in?</CardTitle>\r\n                                        <FormGroup row>\r\n\r\n                                            <div className=\"col-sm-9 col-12 mt-2\">\r\n                                                <Input type=\"date\" id=\"setDate\" name=\"setDate\" min={today} max=\"2021-12-31\"\r\n                                                    value={this.props.setDate}\r\n                                                    valid={errors.setDate === ''}\r\n                                                    invalid={errors.setDate !== ''}\r\n                                                    onBlur={this.props.handleBlur('setDate')}\r\n                                                    onChange={this.props.handInputChange} />\r\n                                                <FormFeedback>{errors.setDate}</FormFeedback>\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        <CardTitle>How many people do you want to accommodate?</CardTitle>\r\n                                        <div className=\"form-inline  d-sm-block d-none\">\r\n                                            <FormGroup row>\r\n                                                <div className=\"col-sm-12 mt-2\">\r\n\r\n                                                    <button style={{ height: '40px', width: '40px', borderRadius: '50px' }} className=\"btn btn-primary\" onClick={this.props.decrease}><i className=\"fa fa-minus\" aria-hidden=\"true\"></i></button>\r\n\r\n\r\n                                                    <Input name=\"people\" id=\"people\" style={{ width: '70px', textAlign: 'center' }}\r\n                                                        className=\"ml-1 mr-1\" type=\"number\"\r\n                                                        value={this.props.people}\r\n                                                        valid={errors.people === ''}\r\n                                                        invalid={errors.people !== ''}\r\n                                                        onChange={this.props.handInputChange}\r\n                                                        onBlur={this.props.handleBlur('people')}\r\n                                                    />\r\n\r\n                                                    <Button style={{ height: '40px', width: '40px', borderRadius: '50px' }} className=\"btn btn-dark\" onClick={this.props.increase}><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></Button>\r\n                                                    <FormFeedback>{errors.people}</FormFeedback>\r\n                                                </div>\r\n\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"row form-inline col-12 mt-2 d-sm-none\">\r\n\r\n                                            <button style={{ height: '40px', width: '40px', borderRadius: '50px' }} className=\"btn btn-danger\" onClick={this.props.decrease}><i className=\"fa fa-minus\" aria-hidden=\"true\"></i></button>\r\n\r\n\r\n                                            <Input name=\"people\" id=\"peopleMob\" style={{ width: '50px', textAlign: 'center' }}\r\n                                                className=\"ml-1 mr-1\" type=\"number\"\r\n                                                value={this.props.people}\r\n                                                valid={errors.people === ''}\r\n                                                invalid={errors.people !== ''}\r\n                                                onChange={this.props.handInputChange}\r\n                                                onBlur={this.props.handleBlur('people')}\r\n                                            />\r\n\r\n                                            <Button style={{ height: '40px', width: '40px', borderRadius: '50px' }} className=\"btn btn-primary\" onClick={this.props.increase}><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></Button>\r\n                                            <FormFeedback>{errors.people}</FormFeedback>\r\n                                        </div>\r\n                                        <FormGroup row>\r\n                                            <div className=\"col-sm-12 col-12 mt-3\">\r\n                                                <ReCAPTCHA style = {{overflow : 'hidden'}}\r\n                                                    sitekey=\"6Lf4QrIZAAAAADu8cXAyrlUNdTlQ4wasosFATzmY\"\r\n                                                    theme=\"dark\"\r\n                                                    onChange={this.props.onChange}\r\n                                                    onErrored={this.networkError}\r\n                                                />\r\n                                            </div>\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup row>\r\n                                            <div className=\"col-sm-12 col-12\">\r\n                                                <Button className=\"btn btn-block\" disabled={isDisabled} type=\"submit\" onClick={this.props.toggleWorkspace} color=\"btn btn-primary\">\r\n                                                    Find Workspace <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></Button>\r\n\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                {/* <div className=\"container mainMob d-block d-sm-none p-0\">\r\n                    <div className=\"row mx-0\">\r\n                        <div className=\"col-12\">\r\n                            <h2 id=\"titleMob\" className=\"ml16Mob ml-2\">Co-Working Space</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mx-0\">\r\n                        <div className=\"col-11 wrapperMob\">\r\n                            <h4>Where do you want to find workspace?</h4>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup row>\r\n                                    \r\n                                    <div className=\"col-12 mt-2\">\r\n                                        <Input type=\"text\" name=\"zipCode\"\r\n                                            placeholder=\"Zip Code\" value={this.props.zipCode}\r\n                                            valid={errors.zipCode === ''}\r\n                                            invalid={errors.zipCode !== ''}\r\n                                            onBlur={this.props.handleBlur('zipCode')}\r\n                                            onChange={this.props.handInputChange} />\r\n                                        <FormFeedback>{errors.zipCode}</FormFeedback>\r\n                                    </div>\r\n                                    <div className=\"col-12 mt-2\">\r\n                                        <Input name=\"location\"\r\n                                            placeholder=\"Enter 5 or 9-digit Zip Code\"\r\n                                            valid={errors.location === ''}\r\n                                            invalid={errors.location !== ''}\r\n                                            disabled={true}\r\n                                            value={this.props.location} />\r\n                                        <FormFeedback>{errors.location}</FormFeedback>\r\n                                    </div>\r\n                                </FormGroup>\r\n                                <h4>When do you want to move in?</h4>\r\n                                <FormGroup row>\r\n                                    \r\n                                    <div className=\"col-12 mt-2\">\r\n                                        <Input type=\"date\" name=\"setDate\" min={today}\r\n                                            placeholder=\"Date\" value={this.props.setDate}\r\n                                            valid={errors.setDate === ''}\r\n                                            invalid={errors.setDate !== ''}\r\n                                            onBlur={this.props.handleBlur('setDate')}\r\n                                            onChange={this.props.handInputChange} />\r\n                                        <FormFeedback>{errors.setDate}</FormFeedback>\r\n                                    </div>\r\n                                </FormGroup>\r\n                                <h4>How many people do you want to accommodate?</h4>\r\n\r\n                                <div className=\"row form-inline col-12 mt-2\">\r\n\r\n                                    <button style={{ height: '40px', width: '40px', borderRadius: '50px' }} className=\"btn btn-danger\" onClick={this.props.decrease}><i className=\"fa fa-minus\" aria-hidden=\"true\"></i></button>\r\n\r\n\r\n                                    <Input name=\"people\" id=\"peopleMob\" style={{ width: '50px', textAlign: 'center' }}\r\n                                        className=\"ml-1 mr-1\" type=\"number\"\r\n                                        value={this.props.people}\r\n                                        valid={errors.people === ''}\r\n                                        invalid={errors.people !== ''}\r\n                                        onChange={this.props.handInputChange}\r\n                                        onBlur={this.props.handleBlur('people')}\r\n                                    />\r\n\r\n                                    <Button style={{ height: '40px', width: '40px', borderRadius: '50px' }} className=\"btn btn-primary\" onClick={this.props.increase}><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></Button>\r\n                                    <FormFeedback>{errors.people}</FormFeedback>\r\n                                </div>\r\n                                <FormGroup row>\r\n                                    <div className=\"col-12 mt-3\">\r\n                                        <ReCAPTCHA\r\n                                            sitekey=\"6Lf4QrIZAAAAADu8cXAyrlUNdTlQ4wasosFATzmY\"\r\n                                            theme=\"dark\"\r\n                                            onChange={this.props.onChange}\r\n                                            onErrored={this.networkError}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <div className=\" col-12\">\r\n                                        <Button className=\"btn btn-block\" disabled={isDisabled} type=\"submit\" onClick={this.props.toggleWorkspace} color=\"btn btn-primary\">\r\n                                            Find Workspace <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></Button>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"push\"></div>\r\n                </div> */}\r\n            </>\r\n        )\r\n    }\r\n}","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","export const WORKSPACEINFO =\r\n    [\r\n        {\r\n            id: 0,\r\n            name: '92, Broad St',\r\n            zipCode: '',\r\n            image: '/assets/images/92Broad.jpg',\r\n            category: 'Basic',\r\n            exposureAmount: '10000',\r\n            price: '1020',\r\n            featured: true,\r\n            distance: 0.5,\r\n            description: 'miles away from',\r\n            details: [\r\n                '15-person capacity',\r\n                '2 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/92Broad.jpg',\r\n                altText: '',\r\n                caption: '92 Broad St'\r\n            },\r\n            {\r\n                src: '/assets/images/92Broad2.jpg',\r\n                altText: '',\r\n                caption: '92 Broad St'\r\n            },\r\n            {\r\n                src: '/assets/images/92Broad3.jpg',\r\n                altText: '',\r\n                caption: '92, Broad St'\r\n            }]\r\n        },\r\n        {\r\n            id: 1,\r\n            name: '332, Broadway',\r\n            zipCode: '',\r\n            image: '/assets/images/332Broadway.jpg',\r\n            category: 'Prime',\r\n            exposureAmount: '15000',\r\n            price: '1030',\r\n            featured: false,\r\n            distance: 1,\r\n            description: 'miles away from',\r\n            details: [\r\n                '20-person capacity',\r\n                '2 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/332Broadway.jpg',\r\n                altText: '',\r\n                caption: '332 Broadway'\r\n            },\r\n            {\r\n                src: '/assets/images/332Broadway2.jpg',\r\n                altText: '',\r\n                caption: '332 Broadway'\r\n            },\r\n            {\r\n                src: '/assets/images/332Broadway3.jpg',\r\n                altText: '',\r\n                caption: '332 Broadway'\r\n            }]\r\n        },\r\n        {\r\n            id: 2,\r\n            name: '54, Montague St',\r\n            zipCode: '',\r\n            image: '/assets/images/54Montague.jpg',\r\n            category: 'Basic',\r\n            exposureAmount: '20000',\r\n            price: '1050',\r\n            featured: false,\r\n            distance: 3,\r\n            description: 'miles away from',\r\n            details: [\r\n                '12-person capacity',\r\n                '1 floor fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/54Montague.jpg',\r\n                altText: '',\r\n                caption: '54 Montague St'\r\n            },\r\n            {\r\n                src: '/assets/images/54Montague2.jpg',\r\n                altText: '',\r\n                caption: '54 Montague St'\r\n            },\r\n            {\r\n                src: '/assets/images/54Montague3.jpg',\r\n                altText: '',\r\n                caption: '54 Montague St'\r\n            }]\r\n        },\r\n        {\r\n            id: 3,\r\n            name: '145, Liberty Plaza',\r\n            zipCode: '',\r\n            image: '/assets/images/LibertyPlaza.jpg',\r\n            category: 'Prime',\r\n            exposureAmount: '25000',\r\n            price: '1100',\r\n            featured: false,\r\n            distance: 5,\r\n            description: 'miles away from',\r\n            details: [\r\n                '50-person capacity',\r\n                '3 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/LibertyPlaza.jpg',\r\n                altText: '',\r\n                caption: 'Liberty Plaza'\r\n            },\r\n            {\r\n                src: '/assets/images/LibertyPlaza2.jpg',\r\n                altText: '',\r\n                caption: 'Liberty Plaza'\r\n            },\r\n            {\r\n                src: '/assets/images/LibertyPlaza3.jpg',\r\n                altText: '',\r\n                caption: 'Liberty Plaza'\r\n            }]\r\n        },\r\n        {\r\n            id: 4,\r\n            name: '502, Greenwich St',\r\n            zipCode: '10007',\r\n            image: '/assets/images/LibertyPlaza.jpg',\r\n            category: 'Prime',\r\n            exposureAmount: '30000',\r\n            price: '1800',\r\n            featured: false,\r\n            distance: 5,\r\n            description: 'miles away from',\r\n            details: [\r\n                '25-person capacity',\r\n                '1 floor fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/LibertyPlaza.jpg',\r\n                altText: '',\r\n                caption: '502, Greenwich St'\r\n            },\r\n            {\r\n                src: '/assets/images/LibertyPlaza2.jpg',\r\n                altText: '',\r\n                caption: '502, Greenwich St'\r\n            },\r\n            {\r\n                src: '/assets/images/LibertyPlaza3.jpg',\r\n                altText: '',\r\n                caption: '502, Greenwich St'\r\n            }]\r\n        },\r\n        {\r\n            id: 5,\r\n            name: '10, Chambers St',\r\n            zipCode: '10007',\r\n            image: '/assets/images/54Montague.jpg',\r\n            category: 'Basic',\r\n            exposureAmount: '35000',\r\n            price: '2050',\r\n            featured: false,\r\n            distance: 3,\r\n            description: 'miles away from',\r\n            details: [\r\n                '12-person capacity',\r\n                '1 floor fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/54Montague.jpg',\r\n                altText: '',\r\n                caption: '10, Chambers St'\r\n            },\r\n            {\r\n                src: '/assets/images/54Montague2.jpg',\r\n                altText: '',\r\n                caption: '10, Chambers St'\r\n            },\r\n            {\r\n                src: '/assets/images/54Montague3.jpg',\r\n                altText: '',\r\n                caption: '10, Chambers St'\r\n            }]\r\n        },\r\n        {\r\n            id: 6,\r\n            name: '332, Broadway',\r\n            zipCode: '10007',\r\n            image: '/assets/images/332Broadway.jpg',\r\n            category: 'Prime',\r\n            exposureAmount: '40000',\r\n            price: '2200',\r\n            featured: false,\r\n            distance: 1,\r\n            description: 'miles away from',\r\n            details: [\r\n                '50-person capacity',\r\n                '2 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/332Broadway.jpg',\r\n                altText: '',\r\n                caption: '332, Broadway'\r\n            },\r\n            {\r\n                src: '/assets/images/332Broadway2.jpg',\r\n                altText: '',\r\n                caption: '332, Broadway'\r\n            },\r\n            {\r\n                src: '/assets/images/332Broadway3.jpg',\r\n                altText: '',\r\n                caption: '332, Broadway'\r\n            }]\r\n        },\r\n        {\r\n            id: 7,\r\n            name: '79, Church St',\r\n            zipCode: '10007',\r\n            image: '/assets/images/92Broad.jpg',\r\n            category: 'Basic',\r\n            exposureAmount: '35000',\r\n            price: '2000',\r\n            featured: true,\r\n            distance: 0.5,\r\n            description: 'miles away from',\r\n            details: [\r\n                '35-person capacity',\r\n                '2 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/92Broad.jpg',\r\n                altText: '',\r\n                caption: '79, Church St'\r\n            },\r\n            {\r\n                src: '/assets/images/92Broad2.jpg',\r\n                altText: '',\r\n                caption: '79, Church St'\r\n            },\r\n            {\r\n                src: '/assets/images/92Broad3.jpg',\r\n                altText: '',\r\n                caption: '79, Church St'\r\n            }]\r\n        },\r\n        {\r\n            id: 8,\r\n            name: '253, Sacramento St',\r\n            zipCode: '94111',\r\n            image: '/assets/images/92Broad.jpg',\r\n            category: 'Basic',\r\n            exposureAmount: '40000',\r\n            price: '2150',\r\n            featured: true,\r\n            distance: 0.5,\r\n            description: 'miles away from',\r\n            details: [\r\n                '50-person capacity',\r\n                '4 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/92Broad.jpg',\r\n                altText: '',\r\n                caption: '253, Sacramento St'\r\n            },\r\n            {\r\n                src: '/assets/images/92Broad2.jpg',\r\n                altText: '',\r\n                caption: '253, Sacramento St'\r\n            },\r\n            {\r\n                src: '/assets/images/92Broad3.jpg',\r\n                altText: '',\r\n                caption: '253, Sacramento St'\r\n            }]\r\n        },\r\n        {\r\n            id: 9,\r\n            name: '1600, Montgomery St',\r\n            zipCode: '94111',\r\n            image: '/assets/images/332Broadway.jpg',\r\n            category: 'Prime',\r\n            exposureAmount: '25000',\r\n            price: '1600',\r\n            featured: false,\r\n            distance: 1,\r\n            description: 'miles away from',\r\n            details: [\r\n                '18-person capacity',\r\n                '2 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/332Broadway.jpg',\r\n                altText: '',\r\n                caption: '1600, Montgomery St'\r\n            },\r\n            {\r\n                src: '/assets/images/332Broadway2.jpg',\r\n                altText: '',\r\n                caption: '1600, Montgomery St'\r\n            },\r\n            {\r\n                src: '/assets/images/332Broadway3.jpg',\r\n                altText: '',\r\n                caption: '1600, Montgomery St'\r\n            }]\r\n        },\r\n        {\r\n            id: 10,\r\n            name: '12345, Battery St',\r\n            zipCode: '94111',\r\n            image: '/assets/images/54Montague.jpg',\r\n            category: 'Basic',\r\n            exposureAmount: '20000',\r\n            price: '1500',\r\n            featured: false,\r\n            distance: 3,\r\n            description: 'miles away from',\r\n            details: [\r\n                '35-person capacity',\r\n                '2 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/54Montague.jpg',\r\n                altText: '',\r\n                caption: '12345, Battery St'\r\n            },\r\n            {\r\n                src: '/assets/images/54Montague2.jpg',\r\n                altText: '',\r\n                caption: '12345, Battery St'\r\n            },\r\n            {\r\n                src: '/assets/images/54Montague3.jpg',\r\n                altText: '',\r\n                caption: '12345, Battery St'\r\n            }]\r\n        },\r\n        {\r\n            id: 11,\r\n            name: '630, Sacramento St',\r\n            zipCode: '94111',\r\n            image: '/assets/images/LibertyPlaza.jpg',\r\n            category: 'Prime',\r\n            exposureAmount: '30000',\r\n            price: '2000',\r\n            featured: false,\r\n            distance: 5,\r\n            description: 'miles away from',\r\n            details: [\r\n                '12-person capacity',\r\n                '1 floor fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/LibertyPlaza.jpg',\r\n                altText: '',\r\n                caption: '630, Sacramento St'\r\n            },\r\n            {\r\n                src: '/assets/images/LibertyPlaza2.jpg',\r\n                altText: '',\r\n                caption: '630, Sacramento St'\r\n            },\r\n            {\r\n                src: '/assets/images/LibertyPlaza3.jpg',\r\n                altText: '',\r\n                caption: '630, Sacramento St'\r\n            }]\r\n        },\r\n        {\r\n            id: 12,\r\n            name: '75, Monroe St',\r\n            zipCode: '60603',\r\n            image: '/assets/images/LibertyPlaza.jpg',\r\n            category: 'Prime',\r\n            exposureAmount: '15000',\r\n            price: '1100',\r\n            featured: false,\r\n            distance: 5,\r\n            description: 'miles away from',\r\n            details: [\r\n                '12-person capacity',\r\n                '1 floor fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/LibertyPlaza.jpg',\r\n                altText: '',\r\n                caption: '75, Monroe St'\r\n            },\r\n            {\r\n                src: '/assets/images/LibertyPlaza2.jpg',\r\n                altText: '',\r\n                caption: '75, Monroe St'\r\n            },\r\n            {\r\n                src: '/assets/images/LibertyPlaza3.jpg',\r\n                altText: '',\r\n                caption: '75, Monroe St'\r\n            }]\r\n        },\r\n        {\r\n            id: 13,\r\n            name: '190, Adams St #700',\r\n            zipCode: '60603',\r\n            image: '/assets/images/54Montague.jpg',\r\n            category: 'Basic',\r\n            exposureAmount: '10000',\r\n            price: '1000',\r\n            featured: false,\r\n            distance: 3,\r\n            description: 'miles away from',\r\n            details: [\r\n                '30-person capacity',\r\n                '3 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/54Montague.jpg',\r\n                altText: '',\r\n                caption: '190, Adams St #700'\r\n            },\r\n            {\r\n                src: '/assets/images/54Montague2.jpg',\r\n                altText: '',\r\n                caption: '190, Adams St #700'\r\n            },\r\n            {\r\n                src: '/assets/images/54Montague3.jpg',\r\n                altText: '',\r\n                caption: '190, Adams St #700'\r\n            }]\r\n        },\r\n        {\r\n            id: 14,\r\n            name: '25, La Salle St #530',\r\n            zipCode: '60603',\r\n            image: '/assets/images/332Broadway.jpg',\r\n            category: 'Prime',\r\n            exposureAmount: '15000',\r\n            price: '1200',\r\n            featured: false,\r\n            distance: 1,\r\n            description: 'miles away from',\r\n            details: [\r\n                '10-person capacity',\r\n                '1 floor fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/332Broadway.jpg',\r\n                altText: '',\r\n                caption: '25, La Salle St #530'\r\n            },\r\n            {\r\n                src: '/assets/images/332Broadway2.jpg',\r\n                altText: '',\r\n                caption: '25, La Salle St #530'\r\n            },\r\n            {\r\n                src: '/assets/images/332Broadway3.jpg',\r\n                altText: '',\r\n                caption: '25, La Salle St #530'\r\n            }]\r\n        },\r\n        {\r\n            id: 15,\r\n            name: '126, Clark St',\r\n            zipCode: '60603',\r\n            image: '/assets/images/92Broad.jpg',\r\n            category: 'Basic',\r\n            exposureAmount: '10000',\r\n            price: '950',\r\n            featured: true,\r\n            distance: 0.5,\r\n            description: 'miles away from',\r\n            details: [\r\n                '30-person capacity',\r\n                '3 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/92Broad.jpg',\r\n                altText: '',\r\n                caption: '126, Clark St'\r\n            },\r\n            {\r\n                src: '/assets/images/92Broad2.jpg',\r\n                altText: '',\r\n                caption: '126, Clark St'\r\n            },\r\n            {\r\n                src: '/assets/images/92Broad3.jpg',\r\n                altText: '',\r\n                caption: '126, Clark St'\r\n            }]\r\n        },\r\n    ];","import React from 'react'\r\nimport { Route, Redirect } from 'react-router';\r\n\r\nexport const authentication = {\r\n    isLoggedIn: false,\r\n    onAuthentication() {\r\n        this.isLoggedIn = true\r\n    },\r\n    getLoginStatus() {\r\n        return this.isLoggedIn;\r\n    }\r\n}\r\nconst SecuredRoute = ({ component: Component, ...rest }) => {\r\n\r\n    return (\r\n        <Route {...rest} render={\r\n            props => authentication.getLoginStatus() ? (\r\n                <Component {...props} {...rest} />) :\r\n                <Redirect to={{ pathname: '/' }}></Redirect>}></Route>\r\n    )\r\n}\r\n\r\nexport default SecuredRoute\r\n","import React, { useState } from 'react';\r\nimport { UncontrolledCarousel, Progress, Card, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst WorkspaceDetails = (props) => {\r\n    const [popState, setPopState] = useState(false);\r\n    let togglePopUp = () => setPopState(!popState);\r\n\r\n\r\n\r\n    const selectedWorkspace = props.workspace.workImages\r\n    let details = props.workspace.details\r\n    let fac = props.workspace.facilities\r\n    console.log(\"Details ---> \" + details)\r\n    let showDetails = []\r\n    let showFac = []\r\n    for (let i = 0; i < details.length; i++) {\r\n        showDetails.push(\r\n\r\n            <>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item list-group-item-action\">{details[i]}\r\n                    </li>\r\n                </ul>\r\n            </>\r\n\r\n        )\r\n    }\r\n    for (let i = 0; i < fac.length; i++) {\r\n        showFac.push(\r\n            <>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item list-group-item-action\">{fac[i]}\r\n                    </li>\r\n                </ul>\r\n            </>\r\n\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"text-center\"></div>\r\n                        <Progress animated={true} striped color=\"primary\" value=\"25\">25%</Progress>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container mt-2 mb-2\">\r\n                {/* <div className=\"row\">\r\n                    <h1 class=\"col-sm-12 col-12\">{props.workspace.name}</h1>\r\n                </div> */}\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"carousel slide\">\r\n                            <div class=\"carousel-inner\">\r\n                                <UncontrolledCarousel items={selectedWorkspace} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-12\">\r\n                        <p id=\"tour\" className=\"lead mt-1\" style={{ textAlign: 'center' }}>Take a virtual tour <a href=\"#tour\">here</a> </p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"jumbotron\">\r\n                <div className=\"container\">\r\n\r\n                    <Card body>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-5 col-12\">\r\n                                <h4>Office details:</h4>\r\n\r\n                                <div>\r\n\r\n                                    {showDetails}\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"offset-sm-1 col-sm-6 col-12\">\r\n                                <h4>Nearby Facilities:</h4>\r\n                                <div>\r\n\r\n                                    {showFac}\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12\">\r\n\r\n                                <p style={{ textAlign: 'center' }}><mark><em>Compliant with <strong>COVID</strong> safety norms</em></mark></p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12 col-12\">\r\n                                <p id=\"special\"><em>Contact us <a href='#contactJohnDoe' id='contactJohn' onClick={togglePopUp}>here</a> to enquire about special facilities</em></p>\r\n                                <Link style={{ textDecoration: \"none\" }} to=\"/personalinfo\"><button onClick={props.getSelectedWorkspaceId} className=\"btn btn-block btn-primary mt-2\">Lease This Workspace</button></Link>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n\r\n                    <Popover placement=\"top-start\" isOpen={popState} toggle={togglePopUp} target=\"contactJohn\">\r\n                        <PopoverHeader className=\"bg-dark text-white\">John Doe</PopoverHeader>\r\n                        <PopoverBody className=\"bg-light\"><a href=\"tel:+91987654321\">987654321</a></PopoverBody>\r\n                    </Popover>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(WorkspaceDetails);","import React from 'react'\r\nimport { CardHeader, CardBody, Form, FormGroup, Input, Label, Progress, Card, CardTitle, FormFeedback } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// function uploadFile() {\r\n//     document.getElementById('scanBtn').addEventListener(\"click\", function() {\r\n//         document.getElementById('scanFile').click();\r\n//     });\r\n\r\n// }\r\n\r\n// const PopulateDetails = (updatePersonDetails, deletePersonDetails) => {\r\n//     updatePersonDetails();\r\n//     let business = document.getElementById('businessName')\r\n//     let personEmail = document.getElementById('personEmail')\r\n//     let personZip = document.getElementById('personZipCode')\r\n//     let scan = document.getElementById('scan')\r\n//     let or = document.getElementById('or')\r\n//     let edit = document.getElementById('edit');\r\n//     let clear = document.getElementById('clear');\r\n//     business.disabled = true;\r\n//     console.log(business.disabled)\r\n//     personEmail.disabled = true;\r\n//     personZip.disabled = true;\r\n//     scan.style.display = 'none';\r\n//     or.style.display = 'none';\r\n//     edit.style.display = 'block';\r\n//     clear.style.display = 'block';\r\n\r\n//     edit.addEventListener('click', () => {\r\n//         business.disabled = false;\r\n//         personEmail.disabled = false;\r\n//         personZip.disabled = false;\r\n\r\n//     })\r\n\r\n//     clear.addEventListener('click', () => {\r\n//         deletePersonDetails();\r\n//         edit.style.display = 'none';\r\n//         clear.style.display = 'none';\r\n//         scan.style.display = 'block';\r\n//         or.style.display = 'block';\r\n//         business.disabled = false;\r\n//         personEmail.disabled = false;\r\n//         personZip.disabled = false;\r\n//     })\r\n\r\n\r\n\r\n// }\r\n\r\nconst Validate = (businessName, personEmail, personZipCode, touchedPersonEmail, businessNameTouched, personZipCodeTouched, personLocation) => {\r\n\r\n    const errors = {\r\n        businessName: '',\r\n        personEmail: '',\r\n        personZipCode: '',\r\n        personLocation: ''\r\n    }\r\n    if (businessName.length < 3) {\r\n        errors.businessName = \"Business name length should be more than 3\"\r\n    }\r\n    const reg = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/\r\n    if(personEmail === ''){\r\n        errors.personEmail = \"Please enter the email\"\r\n    }\r\n    else if (!reg.test(personEmail)) {\r\n        errors.personEmail = \"Please enter email in valid format\"\r\n    }\r\n    const regZip = /^([0-9]{5})(?:[-\\s]*([0-9]{4}))?$/;\r\n    if (!regZip.test(personZipCode)) {\r\n        errors.personZipCode = \"Please enter the zip code in the US zip code format\"\r\n    }\r\n    else if (personZipCode === '') {\r\n        errors.personZipCode = \"Please enter the zip code\"\r\n    }\r\n    if (personLocation === '') {\r\n        errors.personLocation = 'Enter the zipCode to get the location'\r\n    }\r\n    if (personZipCode.length >= 5 && personLocation === '') {\r\n        errors.personLocation = 'Incorrect ZipCode or This ZipCode does not exists in our database'\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nlet handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n}\r\nconst PersonalInfo = (props) => {\r\n    //     let fileName = '';\r\n    //    if(props.selectedFile.name!=null){\r\n    //         fileName = props.selectedFile.name\r\n    //    }\r\n    //    else{\r\n    //        fileName = ''\r\n    //    }\r\n\r\n    const errors = Validate(props.businessName, props.personEmail, props.personZipCode, props.personEmailTouched, props.businessNameTouched, props.personZipCodeTouched, props.personLocation);\r\n    let isDisabled\r\n    isDisabled = true;\r\n    isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    // console.log(\"is disabled ---> \"+isDisabled)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"text-center\"></div>\r\n                        <Progress animated={true} striped color=\"primary\" value=\"38\">38%</Progress>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"jumbotron py-3 mt-2\">\r\n                <div className=\"container personalDetails py-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"mx-auto col-sm-6 col-12\">\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    <CardTitle className=\"lead\">Let us get to know you...</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form onSubmit={handleSubmit} key={'ankuu'}>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"businessName\" className=\"col-sm-4 col-form-label form-control-label required\">Business Name</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input key=\"business\" type=\"text\" name=\"businessName\" id=\"businessName\"\r\n                                                    valid={errors.businessName === ''}\r\n                                                    invalid={errors.businessName !== ''}\r\n                                                    onBlur={props.handleBlur('businessName')}\r\n                                                    onChange={props.handInputChange}\r\n                                                    value={props.businessName}\r\n                                                />\r\n                                                <FormFeedback>{errors.businessName}</FormFeedback>\r\n                                            </div>\r\n\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personEmail\" className=\"col-sm-4 col-form-label form-control-label required\">Email</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input key=\"personEmail\" type=\"email\" name=\"personEmail\" id=\"personEmail\"\r\n                                                    valid={errors.personEmail === ''}\r\n                                                    invalid={errors.personEmail !== ''}\r\n                                                    onChange={props.handInputChange}\r\n                                                    onBlur={props.handleBlur('personEmail')}\r\n                                                    value={props.personEmail} />\r\n                                                <FormFeedback>{errors.personEmail}</FormFeedback>\r\n                                            </div>\r\n\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personZipCode\" className=\"col-sm-4 col-form-label form-control-label required\">Zip Code</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input id=\"personZipCode\" type=\"text\" name=\"personZipCode\"\r\n                                                    valid={errors.personZipCode === ''}\r\n                                                    invalid={errors.personZipCode !== ''}\r\n                                                    onBlur={props.handleBlur('personZipCode')}\r\n                                                    onChange={props.handInputChange}\r\n                                                    value={props.personZipCode} />\r\n                                                <FormFeedback>{errors.personZipCode}</FormFeedback>\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personLocation\" className=\"col-sm-4 col-form-label form-control-label required\">Location</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input disabled={true} id=\"personLocation\" type=\"text\" name=\"personLocation\"\r\n                                                    valid={errors.personLocation === ''}\r\n                                                    invalid={errors.personLocation !== ''}\r\n                                                    value={props.personLocation} />\r\n                                                <FormFeedback>{errors.personLocation}</FormFeedback>\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n                                            <div className=\"col-sm-4 mt-2\" id=\"edit\" style={{ display: 'none' }}>\r\n                                                <button className=\"btn btn-dark\">Edit Scanned Details</button>\r\n                                            </div>\r\n                                            <div className=\"offset-sm-3 col-sm-4 mt-2\" id=\"clear\" style={{ display: 'none' }}>\r\n                                                <button className=\"btn btn-secondary\">Delete Scanned Card</button>\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        <h3 id=\"or\" style={{ textAlign: 'center' }} className=\"mt-4\">OR</h3>\r\n                                        {/* <div id=\"scan\" className=\"card mt-4  bg-dark\">\r\n                                        <div className=\"card-body text-center\">\r\n                                            <input id=\"scanFile\" type=\"file\" style = {{display : 'none'}} />\r\n                                                <button onClick = {uploadFile} className = \"btn btn-dark\" id=\"scanBtn\">Scan a business card</button>\r\n                                                </div>\r\n                                        </div> */}\r\n\r\n                                        <div id=\"scan\" className=\"card mt-4  bg-warning\">\r\n                                            <div className=\"card-body text-center\">\r\n\r\n                                                <input type=\"file\" id=\"files\" style={{ display: 'none' }} onChange={props.onFileChange} />\r\n                                                <label htmlFor=\"files\" style={{ cursor: 'pointer', fontWeight: 'bold' }}>Scan a business card</label>\r\n                                                {/* <button className = \"btn btn-dark\" onClick={props.onFileUpload}>\r\n                                                Upload!\r\n                                            </button> */}\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        {/* <div>\r\n                                            {fileName}\r\n                                        </div> */}\r\n                                        {/* <div id=\"scan\" style={{ cursor: 'pointer' }} className=\"card bg-warning mt-4\">\r\n                                        <div className=\"card-body text-center\">\r\n                                            <div className=\"card-text\">\r\n                                                <input type = \"file\" onChange={props.onFileChange}/>\r\n                                                Scan a business card</div>\r\n                                        </div>\r\n                                    </div> */}\r\n                                        <FormGroup row>\r\n                                            <div className=\"col-sm-12 col-12 mt-3\">\r\n                                                <Link style={{ textDecoration: 'none' }} to={isDisabled?'#':'confirmperson'}><button className=\"btn btn-block btn-primary\" disabled={isDisabled}>Next <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></button></Link>\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                    </Form>\r\n\r\n\r\n\r\n\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(PersonalInfo); \r\n","import React from 'react'\r\nimport { CardHeader, CardBody, Form, FormGroup, Input, Label, Progress, Card, CardTitle, FormFeedback } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nlet handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n}\r\n\r\nconst Validate = (personName, personAddress, personPhone, businessName) => {\r\n\r\n    const errors = {\r\n        personName: '',\r\n        personAddress: '',\r\n        personPhone: '',\r\n        businessName: ''\r\n    }\r\n    if (personName.length < 3) {\r\n        errors.personName = \"Person name length should be more than 3\"\r\n    }\r\n\r\n    if (personAddress.length < 5) {\r\n        errors.personAddress = \"Address length should be more than 5\"\r\n    }\r\n    if (personPhone.length === 0) {\r\n        errors.personPhone = \"Please enter your phone number\"\r\n    }\r\n\r\n    if (businessName.length < 3) {\r\n        errors.businessName = \"Business name length should be more than 3\"\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n\r\nfunction ConfirmPerson(props) {\r\n    const errors = Validate(props.personName, props.personAddress, props.personPhone, props.businessName);\r\n    let isDisabled\r\n    isDisabled = true;\r\n    isDisabled = Object.keys(errors).some(x => errors[x]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"text-center\"></div>\r\n                        <Progress animated={true} striped color=\"primary\" value=\"50\">50%</Progress>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"jumbotron py-3 mt-2\">\r\n                <div className=\"container personalDetails py-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"mx-auto col-sm-6 col-12\">\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    <CardTitle className=\"lead\">Is this you?</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form onSubmit={handleSubmit}>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"businessName\" className=\"col-sm-4 col-form-label form-control-label required\">Business Name</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input type=\"text\" name=\"businessName\" id=\"businessName\"\r\n                                                    valid={errors.businessName === ''}\r\n                                                    invalid={errors.businessName !== ''}\r\n                                                    onBlur={props.handleBlur('businessName')}\r\n                                                    onChange={props.handInputChange}\r\n                                                    value={props.businessName}\r\n\r\n                                                />\r\n                                                 <FormFeedback>{errors.businessName}</FormFeedback>\r\n                                            </div>\r\n                                           \r\n\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personName\" className=\"col-sm-4 col-form-label form-control-label required\">Owner's Name</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input type=\"text\" name=\"personName\" id=\"personName\"\r\n                                                    valid={errors.personName === ''}\r\n                                                    invalid={errors.personName !== ''}\r\n                                                    value={props.personName}\r\n                                                    onChange={props.handInputChange}\r\n                                                    onBlur={props.handleBlur('personName')}\r\n                                                />\r\n                                                <FormFeedback>{errors.personName}</FormFeedback>\r\n                                            </div>\r\n\r\n\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personAddress\" className=\"col-sm-4 col-form-label form-control-label required\">Address</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input type=\"text\" name=\"personAddress\" id=\"personAddress\"\r\n                                                    valid={errors.personAddress === ''}\r\n                                                    invalid={errors.personAddress !== ''}\r\n                                                    value={props.personAddress}\r\n                                                    onChange={props.handInputChange}\r\n                                                    onBlur={props.handleBlur('personAddress')}\r\n                                                />\r\n                                                <FormFeedback>{errors.personAddress}</FormFeedback>\r\n                                            </div>\r\n\r\n\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personCity\" className=\"col-sm-4 col-form-label form-control-label required\">City</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input type=\"text\" name=\"personCity\" id=\"personCity\"\r\n                                                    value={props.personCity}\r\n                                                    onChange={props.handInputChange}\r\n                                                    onBlur={props.handleBlur('personCity')} />\r\n                                            </div>\r\n                                            {/* <FormFeedback>{errors.zipCode}</FormFeedback> */}\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personState\" className=\"col-sm-4 col-form-label form-control-label required\">State</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input type=\"text\" name=\"personState\" id=\"personState\"\r\n                                                    value={props.personState}\r\n                                                    onChange={props.handInputChange}\r\n                                                    onBlur={props.handleBlur('personState')} />\r\n                                            </div>\r\n                                            {/* <FormFeedback>{errors.zipCode}</FormFeedback> */}\r\n\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personEmail\" className=\"col-sm-4 col-form-label form-control-label required\">Email</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input key=\"personEmail\" type=\"email\" name=\"personEmail\" id=\"personEmail\"\r\n                                                    value={props.personEmail}\r\n                                                    onChange={props.handInputChange}\r\n                                                    onBlur={props.handleBlur('personEmail')} />\r\n                                            </div>\r\n                                            {/* <FormFeedback>{errors.zipCode}</FormFeedback> */}\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personPhone\" className=\"col-sm-4 col-form-label form-control-label required\">Phone Number</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input id=\"personPhone\" type=\"text\" name=\"personPhone\"\r\n                                                    valid={errors.personPhone === ''}\r\n                                                    invalid={errors.personPhone !== ''}\r\n                                                    value={props.personPhone}\r\n                                                    onChange={props.handInputChange}\r\n                                                    onBlur={props.handleBlur('personPhone')}\r\n                                                />\r\n                                                <FormFeedback>{errors.personPhone}</FormFeedback>\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"industry\" className=\"col-sm-4 col-form-label form-control-label required\">Industry</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <select className=\"form-control\" name=\"industry\" id=\"industry\">\r\n                                                    <option value=\"7311\">Advertising agencies</option>\r\n                                                    <option value=\"7372\">Prepackaged Software</option>\r\n                                                    <option value=\"8742\">Management Consulting Services</option>\r\n                                                    <option value=\"8743\">Public Relations Services</option>\r\n                                                    <option value=\"7363\">Help Supply Services</option>\r\n                                                </select>\r\n                                            </div>\r\n\r\n                                            {/* <FormFeedback>{errors.zipCode}</FormFeedback> */}\r\n\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup row>\r\n                                            <div className=\"col-sm-12 col-12 mt-3\">\r\n                                                <Link style={{ textDecoration: 'none' }} to={isDisabled ? '#' : 'leaseDuration'}><button className=\"btn btn-block btn-primary\" disabled={isDisabled}>Next <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></button></Link>\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default React.memo(ConfirmPerson)","import React, { useEffect } from 'react';\r\nimport { CardHeader, CardBody, CardDeck, Progress, Card, CardTitle, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nlet handleSubmit = (event) => {\r\n    event.stopPropagation();\r\n\r\n}\r\n\r\n\r\n\r\nlet AskInsurance = (duration, updateLeaseDuration, price, updateClickCount) => {\r\n\r\n    let insurancePart\r\n    insurancePart = document.getElementById('insurance');\r\n    insurancePart.style.display = 'block'\r\n    insurancePart.scrollIntoView();\r\n    updateLeaseDuration(duration, price)\r\n    let monthly = document.getElementById('monthly');\r\n    let sixMonths = document.getElementById('sixMonths');\r\n    let twelveMonths = document.getElementById('twelveMonths');\r\n    let yesValue = document.getElementById('yes');\r\n    let noValue = document.getElementById('no');\r\n    let oneMonth = document.getElementById('oneButton')\r\n    let sixMonth = document.getElementById('sixButton')\r\n    let twelveMonth = document.getElementById('twelveButton')\r\n    if (duration === '1') {\r\n        oneMonth.innerText = 'CURRENT'\r\n        sixMonth.innerText = 'SELECT'\r\n        twelveMonth.innerText = 'SELECT'\r\n        oneMonth.disabled = true;\r\n        sixMonth.disabled = false;\r\n        twelveMonth.disabled = false\r\n        sixMonth.removeAttribute(\"style\");\r\n        twelveMonth.removeAttribute(\"style\")\r\n        if (oneMonth.disabled) {\r\n            oneMonth.style.fontWeight = '600'\r\n            oneMonth.style.color = 'black'\r\n            oneMonth.style.borderColor = '#aaa'\r\n            oneMonth.style.background = 'transparent'\r\n        }\r\n\r\n        monthly.style.webkitTransition = '0.3s'\r\n        monthly.style.transition = '0.3s'\r\n        monthly.style.boxShadow = '0 16px 24px 0 rgba(0,0,0,0.2)'\r\n        sixMonths.style.boxShadow = 'none'\r\n        twelveMonths.style.boxShadow = 'none'\r\n        if (yesValue.checked || noValue.checked) {\r\n            yesValue.checked = false;\r\n            noValue.checked = false;\r\n            updateClickCount();\r\n        }\r\n\r\n\r\n    }\r\n    else if (duration === '6') {\r\n        oneMonth.innerText = 'SELECT'\r\n        sixMonth.innerText = 'CURRENT'\r\n        twelveMonth.innerText = 'SELECT'\r\n        oneMonth.disabled = false;\r\n        sixMonth.disabled = true;\r\n        twelveMonth.disabled = false;\r\n        oneMonth.removeAttribute(\"style\");\r\n        twelveMonth.removeAttribute(\"style\")\r\n        if (sixMonth.disabled) {\r\n            sixMonth.style.fontWeight = '600'\r\n            sixMonth.style.color = 'black'\r\n            sixMonth.style.borderColor = '#aaa'\r\n            sixMonth.style.background = 'transparent'\r\n        }\r\n\r\n\r\n        sixMonths.style.webkitTransition = '0.3s'\r\n        sixMonths.style.transition = '0.3s'\r\n        sixMonths.style.boxShadow = '0 16px 24px 0 rgba(0,0,0,0.2)'\r\n        twelveMonths.style.boxShadow = 'none'\r\n        monthly.style.boxShadow = 'none'\r\n        if (yesValue.checked || noValue.checked) {\r\n            yesValue.checked = false;\r\n            noValue.checked = false\r\n            updateClickCount()\r\n        }\r\n    }\r\n    else if (duration === '12') {\r\n        oneMonth.innerHTML = 'SELECT'\r\n        sixMonth.innerHTML = 'SELECT'\r\n        twelveMonth.innerHTML = 'CURRENT'\r\n        oneMonth.disabled = false;\r\n        sixMonth.disabled = false;\r\n        twelveMonth.disabled = true;\r\n        oneMonth.removeAttribute(\"style\");\r\n        sixMonth.removeAttribute(\"style\")\r\n        if (twelveMonth.disabled) {\r\n            twelveMonth.style.fontWeight = '600'\r\n            twelveMonth.style.color = 'black'\r\n            twelveMonth.style.borderColor = '#aaa'\r\n            twelveMonth.style.background = 'transparent'\r\n        }\r\n        twelveMonths.style.webkitTransition = '0.3s'\r\n        twelveMonths.style.transition = '0.3s'\r\n        twelveMonths.style.boxShadow = '0px 16px 24px 0 rgba(0,0,0,0.2)'\r\n        sixMonths.style.boxShadow = 'none'\r\n        monthly.style.boxShadow = 'none'\r\n        if (yesValue.checked || noValue.checked) {\r\n            yesValue.checked = false;\r\n            noValue.checked = false\r\n            updateClickCount()\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst LeaseTimePeriod = (props) => {\r\n    // const [radioValue, setValue] = useState(0);\r\n    useEffect(() => {\r\n        if (props.selectedLeaseDuration === 0 ||props.selectedLeaseDuration === '') {\r\n            let insurancePart = document.getElementById('insurance');\r\n            insurancePart.style.display = 'none'\r\n            let jumbo = document.getElementById('jumbo');\r\n            jumbo.style.marginBottom = '7%'\r\n        }\r\n\r\n        window.onpopstate = e => {\r\n            \r\n            props.updateClickCount();\r\n            let insurancePart = document.getElementById('insurance');\r\n            if(insurancePart!==null){\r\n            insurancePart.style.display = 'none'\r\n            }\r\n            let jumbo = document.getElementById('jumbo');\r\n            if(jumbo!==null){\r\n            jumbo.style.marginBottom = '7%'\r\n            }\r\n        }\r\n        \r\n\r\n    });\r\n\r\n    let onChange = (e) => {\r\n        props.updateRadioState(e)\r\n        console.log(e)\r\n    }\r\n\r\n    let workspacePrice\r\n    let workspaceFac\r\n    let facilities = []\r\n    for (let i = 0; i < props.workspace.length; i++) {\r\n        if (props.workspace[i].id === parseInt(props.selectedWorkspaceId)) {\r\n            // alert(\"Got it\")\r\n            workspacePrice = props.workspace[i].price\r\n            workspaceFac = props.workspace[i].details\r\n        }\r\n    }\r\n    for (let i = 0; i < workspaceFac.length; i++) {\r\n        facilities.push(\r\n            <>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item list-group-item-action\">{workspaceFac[i]}\r\n                    </li>\r\n\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n    console.log(\"workspacePrice ---->\" + workspacePrice)\r\n    // console.log(\"workspaceFac ---->\" + workspaceFacAvail)\r\n    let halfYearlyPrice = parseInt(workspacePrice) - 10;\r\n    let AnnualPrice = parseInt(workspacePrice) - 30;\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"text-center\"></div>\r\n                        <Progress animated={true} striped color=\"primary\" value=\"63\">63%</Progress>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"container py-3\" id=\"jumbo\">\r\n                <div className=\"row\">\r\n                    <p className=\"lead\"><b>Hello, {props.businessName}</b></p>\r\n                </div>\r\n                <div className=\"row py-3\">\r\n                    <p className=\"lead ml-3\">For how long would you like to lease the workspace?</p>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"mx-auto col-sm-12 col-12\">\r\n                        <CardDeck>\r\n                            <Card className=\"price\" id=\"monthly\">\r\n\r\n                                <CardHeader className=\"bg-dark text-white\">\r\n                                    <CardTitle className=\"text-center\">\r\n                                        Monthly\r\n                                  </CardTitle>\r\n                                </CardHeader>\r\n\r\n                                <CardBody className=\"text-center jumbotron\">\r\n\r\n                                    <h2 className=\"font-weight-normal\"><sup>$</sup>{workspacePrice}<sub><small className=\"text-muted\">/30 days</small></sub></h2>\r\n                                    <h4 className=\"mt-5 lead\">Office Facilities:</h4>\r\n                                    <div className=\"mt-3\">\r\n                                        {facilities}\r\n                                    </div>\r\n                                    <button id=\"oneButton\" className=\"btn btn-dark btn-block mt-5\" onClick={() => AskInsurance('1', props.updateLeaseDuration, workspacePrice, props.updateClickCount)}>SELECT</button>\r\n\r\n                                </CardBody>\r\n\r\n                            </Card>\r\n\r\n                            <Card className=\"price\" id=\"sixMonths\">\r\n                                <CardHeader className=\"bg-dark text-white\">\r\n                                    <CardTitle className=\"text-center\">\r\n                                        Half-Yearly (6-Months)\r\n                                  </CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody className=\"text-center jumbotron\">\r\n                                    <h2 className=\"font-weight-normal\"><sup>$</sup>{halfYearlyPrice}<sub><small className=\"text-muted\">/30 days</small></sub></h2>\r\n                                    <h4 className=\"mt-5 lead\">Office Facilities:</h4>\r\n                                    <div className=\"mt-3\">\r\n                                        {facilities}\r\n                                    </div>\r\n                                    <button id=\"sixButton\" className=\"btn btn-dark btn-block mt-5\" onClick={() => AskInsurance('6', props.updateLeaseDuration, halfYearlyPrice, props.updateClickCount)}>SELECT</button>\r\n                                </CardBody>\r\n                            </Card>\r\n                            <Card className=\"price\" id=\"twelveMonths\">\r\n                                <CardHeader className=\"bg-dark text-white\">\r\n                                    <CardTitle className=\"text-center\">\r\n                                        Annually (12-Months)\r\n                                  </CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody className=\"text-center jumbotron\">\r\n                                    <h2 className=\"font-weight-normal\"><sup>$</sup>{AnnualPrice}<sub><small className=\"text-muted\">/30 days</small></sub></h2>\r\n                                    <h4 className=\"mt-5 lead\">Office Facilities:</h4>\r\n                                    <div className=\"mt-3\">\r\n                                        {facilities}\r\n                                    </div>\r\n                                    <button id=\"twelveButton\" className=\"btn btn-dark btn-block mt-5\" onClick={() => AskInsurance('12', props.updateLeaseDuration, AnnualPrice, props.updateClickCount)}>SELECT</button>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </CardDeck>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* <div className=\"jumbotron py-3 mt-2\" id = \"jumbo\"> */}\r\n            <div className=\"container\" id=\"insurance\">\r\n                <p id=\"knowMore\" className=\"lead\">Add general liability insurance for your  business? (<a href='#knowMore'><i>Know more</i></a>)</p>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <FormGroup check>\r\n\r\n                        <div className=\"col-sm-12\">\r\n                            <Label check>\r\n\r\n                                <Input type=\"radio\" name=\"radio1\" id=\"yes\" value=\"10\" onClick={(e) => onChange(e.target.value)} />\r\n                                    Yes, add policy for ${props.setPremiumAmount}<sub>/mo</sub>\r\n\r\n                            </Label>\r\n                        </div>\r\n\r\n\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n\r\n                        <div className=\"col-sm-12\">\r\n                            <Label check>\r\n\r\n                                <Input type=\"radio\" name=\"radio1\" id=\"no\" value=\"0\" onClick={(e) => onChange(e.target.value)} />\r\n                                No\r\n                            </Label>\r\n                        </div>\r\n\r\n\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <div className=\"col-sm-12 col-12 mt-3\">\r\n                            <Link style={{ textDecoration: 'none' }} to='payment'><button className=\"btn btn-dark btn-block mt-5\">Proceed to Payment <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></button></Link>\r\n                        </div>\r\n                    </FormGroup>\r\n                </Form>\r\n            </div>\r\n            {/* </div> */}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(LeaseTimePeriod); ","import React, { useEffect, useState } from 'react'\r\nimport { CardHeader, CardBody, Form, FormGroup, Input, Label, Progress, Card, CardTitle } from 'reactstrap';\r\nimport history from './history';\r\nimport Loader from 'react-promise-loader';\r\n\r\n\r\n\r\nlet handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n}\r\n\r\n\r\n\r\nconst Payment = (props) => {\r\n    const [loaderStatus, setLoaderStatus] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        window.onpopstate = e => {\r\n            props.updateClickCount();\r\n            let insurancePart = document.getElementById('insurance');\r\n            if (insurancePart !== null) {\r\n                insurancePart.style.display = 'none'\r\n            }\r\n            let jumbo = document.getElementById('jumbo');\r\n            if (jumbo !== null) {\r\n                jumbo.style.marginBottom = '7%'\r\n            }\r\n        }\r\n\r\n    })\r\n\r\n    let showLoader = () => {\r\n        setLoaderStatus(true)\r\n        setTimeout(() => {\r\n            setLoaderStatus(false)\r\n            history.push('/congratulations')\r\n        }, 4000);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Loader loading={loaderStatus} color={'#3d5e61'} background={'rgba(255,255,255,.5)'} />\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"text-center\"></div>\r\n                        <Progress animated={true} striped color=\"primary\" value=\"75\">75%</Progress>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"jumbotron py-3 mt-2\">\r\n                <div className=\"container personalDetails py-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"mx-auto col-sm-6 col-12\">\r\n                            <Card>\r\n                                <CardHeader className=\"bg-primary text-white\">\r\n                                    <CardTitle className=\"text-center\">Pay Invoice ({props.businessName})</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form onSubmit={handleSubmit}>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"cardHolder\" className=\"col-sm-4 col-form-label form-control-label required\">Card Holder Name</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input type=\"text\" name=\"cardHolder\" id=\"cardHolder\"\r\n\r\n\r\n\r\n\r\n                                                />\r\n                                            </div>\r\n                                            {/* <FormFeedback>{errors.zipCode}</FormFeedback> */}\r\n\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"cardNumber\" className=\"col-sm-4 col-form-label form-control-label required\">Card Number</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input type=\"number\" name=\"cardNumber\" id=\"cardNumber\" pattern=\"[0-9.]+\"\r\n\r\n\r\n\r\n                                                />\r\n\r\n                                            </div>\r\n                                            {/* <FormFeedback>{errors.zipCode}</FormFeedback> */}\r\n\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"validTill\" className=\"col-sm-4 col-form-label form-control-label required\">Valid till</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input type=\"month\" min=\"2020-09\" max=\"2036-08\" name=\"validTill\" id=\"validTill\"\r\n                                                />\r\n                                            </div>\r\n                                            {/* <FormFeedback>{errors.zipCode}</FormFeedback> */}\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"cvv\" className=\"col-sm-4 col-form-label form-control-label required\">CVV</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input className=\"cvvPass\" type=\"number\" pattern=\"[0-9]*\" inputMode=\"numeric\" name=\"cvv\" id=\"cvv\"\r\n                                                />\r\n                                            </div>\r\n                                            {/* <FormFeedback>{errors.zipCode}</FormFeedback> */}\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n                                            <div className=\"col-sm-8 offset-sm-4 mt-2\">\r\n                                                <b className=\"lead\"><b>Final Price is ${props.yesSelected === true ? props.selectedRadioValueYes : props.selectedLeasePrice}</b><sup>{props.yesSelected === true ? '*' : ''}</sup></b>\r\n                                                {props.yesSelected === true ? <p>* <small className=\"text-muted\">This is inclusive of workspace lease and insurance for a period of {props.selectedLeaseDuration} {props.selectedLeaseDuration === '1' ? 'month' : 'months'}</small></p> : <></>}\r\n\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n                                            <div className=\"col-sm-12 col-12\">\r\n\r\n                                                <button onClick={showLoader} className=\"SubmitButton\">Pay <i className=\"fa fa-lock\" aria-hidden=\"true\"></i></button>\r\n\r\n                                            </div>\r\n                                        </FormGroup>\r\n\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default React.memo(Payment);","import React from 'react'\r\nimport { CardBody, Progress, Card, CardImg, Input, FormGroup } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nconst Congrats = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"text-center\"></div>\r\n                        <Progress animated={true} striped color=\"primary\" value=\"88\">88%</Progress>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row mt-2 jumbotron\">\r\n\r\n                    <div className=\"col-sm-5\">\r\n\r\n                        <CardImg left width=\"100%\" src=\"/assets/images/us-thumbsup.png\" alt=\"US thumbs up\" />\r\n\r\n                    </div>\r\n                    <div className=\"offset-sm-1 col-sm-5 mt-3 d-sm-flex align-items-center\">\r\n                        <Card style={{ width: '100%' }}>\r\n                            <CardBody className=\"text-center\">\r\n                                <p className=\"lead\"><b>Congratulations,</b> {props.businessName}</p>\r\n                                <h2><i>Great! You're all done!</i></h2>\r\n                                <p>Welcome to your new workspace</p>\r\n                                <p>Dowload the lease contract <a href=\"/assets/files/MembershipCertificate.pdf\" download>here</a></p>\r\n                                <p><h3>OR</h3></p>\r\n                                <p>Click <a href=\"/assets/files/MembershipCertificate.pdf\" download>here</a> to receive it on email</p>\r\n\r\n                                <FormGroup row>\r\n\r\n                                    <div className=\"offset-sm-2 col-sm-8\">\r\n                                        <Input placeholder=\"Enter Email ID here\" className=\"text-center\" key=\"personEmail\" type=\"email\" name=\"personEmail\" id=\"personEmail\"\r\n                                            value={props.personEmail}\r\n                                            onChange={props.handInputChange}\r\n                                            onBlur={props.handleBlur('personEmail')} />\r\n                                    </div>\r\n                                </FormGroup>\r\n                                <p className=\"lead\">Please reach out to your workspace manager John Doe at <a href=\"tel:+91987654321\">987654321</a> for any assistance.</p>\r\n                                <FormGroup row>\r\n                                    <div className=\"col-sm-12 col-12\">\r\n                                        <Link to='/feedback' style={{ textDecoration: 'none' }}><button className=\"btn btn-block btn-danger\">Continue <i class=\"fa fa-arrow-right\"></i></button></Link>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Congrats); ","import React from 'react'\r\nimport Rating from 'react-rating'\r\nimport { CardBody, Progress, Card, Input, FormGroup, CardHeader, CardTitle } from 'reactstrap';\r\n\r\nconst FeedbackComp = (props) => {\r\n   let handleValue = (value) =>{\r\n    console.log(value)\r\n    }\r\n    let backToHome = () =>{\r\n        window.location.reload();\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"text-center\"></div>\r\n                        <Progress animated={true} striped color=\"primary\" value=\"100\">Done</Progress>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"jumbotron\">\r\n\r\n                <div className=\"container\">\r\n                    <div className = \"row\">\r\n                        <div className = \"offset-sm-2 col-sm-8\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-center\">\r\n                            <CardTitle className = \"text-white\">Feedback Form</CardTitle>\r\n                        </CardHeader>\r\n                        <CardBody className=\"text-center\">\r\n                            <h3>Tell us about your experience !</h3>\r\n                            <p className=\"mt-5 lead\">How would you rate your overall experience?</p>\r\n                            <Rating\r\n                                emptySymbol=\"fa fa-star-o fa-2x\"\r\n                                fullSymbol=\"fa fa-star fa-2x\"\r\n                                fractions={2}\r\n                                onClick = {(value)=>handleValue(value)}\r\n                    \r\n                            />\r\n                            <p className = \"lead mt-3\">Any other comments?</p>\r\n                            <FormGroup className = \"offset-sm-2 col-sm-8\">\r\n                                <Input type = 'textarea' style ={{height : '200px',width : '100%'}} />\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                            <div className=\"offset-sm-4 col-sm-4\">\r\n                                       <button className=\"btn btn-block btn-primary\" onClick = {backToHome}>Submit</button>\r\n                                    </div>\r\n                            </FormGroup>\r\n                        </CardBody>\r\n\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default React.memo(FeedbackComp);","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport '../App.css';\r\nimport Workspace from './Workspaces'\r\nimport Landing from './LandingPage'\r\nimport history from './history';\r\nimport { Switch, Route, Router, Redirect } from 'react-router-dom';\r\nimport { WORKSPACEINFO } from '../shared/WorkspaceInfo'\r\nimport SecuredRoute from './SecuredRoute';\r\nimport { authentication } from './SecuredRoute';\r\nimport axios from 'axios';\r\nimport WorkspaceDetails from './WorkspaceDetails';\r\nimport PersonalInfo from './PersonalInfo'\r\nimport ConfirmPerson from './ConfirmPerson';\r\nimport CRC32 from 'crc-32/crc32.js';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport { usePromiseTracker } from 'react-promise-tracker';\r\nimport Loader from 'react-promise-loader';\r\nimport LeaseTimePeriod from './LeaseTimePeriod';\r\nimport Payment from './PaymentComponent';\r\nimport Congrats from './Congrats';\r\nimport FeedbackComp from './Feedback';\r\n\r\n\r\nclass MainComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isVerified: false,\r\n            zipCode: '',\r\n            setDate: '',\r\n            agree: false,\r\n            people: 0,\r\n            touched: {\r\n                zipCode: false,\r\n                setDate: false,\r\n                people: false,\r\n                businessName: false,\r\n                personEmail: false,\r\n                personZipCode: false\r\n\r\n            },\r\n            workspaceinfo: WORKSPACEINFO,\r\n            location: '',\r\n            businessName: '',\r\n            personEmail: '',\r\n            personZipCode: '',\r\n            personLocation: '',\r\n            personCity: '',\r\n            personState: '',\r\n            selectedFile: '',\r\n            businessCard: false,\r\n            imageChkSum: '',\r\n            personName: '',\r\n            personPhone: '',\r\n            personAddress: '',\r\n            selectedWorkspaceId: '',\r\n            selectedLeaseDuration: '',\r\n            selectedLeasePrice: '',\r\n            selectedRadioValue: '',\r\n            selectedRadioValueYes: 0,\r\n            selectedRadioValueNo: 0,\r\n            clickCount: 0,\r\n            yesSelected: false,\r\n            setSelectedYear: '',\r\n            officeState: '',\r\n            officeCity: '',\r\n            personFirstName: '',\r\n            personLastName: '',\r\n            selectedOfficeAddress1: '',\r\n            selectedOfficeAddress2: '',\r\n            setExposureAmount: '',\r\n            setPremiumAmount: 20,\r\n            toggleButton : false\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handInputChange = async (event) => {\r\n\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        await this.setState({\r\n            [name]: value\r\n        })\r\n\r\n        if (this.state.personName.length > 3) {\r\n            let fullName = this.state.personName;\r\n            let sepratedName = fullName.split(' ');\r\n            let firstName = sepratedName[0];\r\n            let lastName = sepratedName[1];\r\n            this.setState({\r\n                personFirstName: firstName,\r\n                personLastName: lastName\r\n            })\r\n\r\n        }\r\n\r\n        if (this.state.setDate) {\r\n            let dateEntered = this.state.setDate\r\n            let getYear = dateEntered.substring(0, 4)\r\n            this.setState({\r\n                setSelectedYear: getYear\r\n            })\r\n        }\r\n\r\n        if (this.state.zipCode.length === 5 && this.state.location === '') {\r\n\r\n            let zipCodeUs = this.state.zipCode;\r\n            this.handleFetch(zipCodeUs);\r\n        }\r\n        else if (this.state.zipCode.length < 5) {\r\n            this.setState({\r\n                location: ''\r\n            })\r\n        }\r\n\r\n        if (this.state.personZipCode.length === 5 && this.state.personLocation === '') {\r\n\r\n            let zipCodeUs = this.state.personZipCode;\r\n            this.handleFetch(zipCodeUs);\r\n        }\r\n        else if (this.state.personZipCode.length < 5) {\r\n            this.setState({\r\n                personLocation: ''\r\n            })\r\n        }\r\n    }\r\n    // Zip code to city name API\r\n    handleFetch = async (zipCodeUs) => {\r\n        // const api = 'kZ6ioctBoNgngUK7ex2ZzHtjkQ5Ji8970a5A1soKvOTmB7VUVNl5FJYXut1Gq6h2';\r\n        const api = 'js-o4ad93mChVEuAf7Ctkdsh6WmigzKakC6LfE26TEcJDcoB2Lv96j0l2htRd8TJfzf';\r\n        // const proxyurl = \"https://corsaccess.herokuapp.com/\";\r\n        // const api = 'inHTf3va4QCIsHqaeoFNQuxXIViIWpyjqZd68zeW5K5xmGQhxnbyuQvPagxV9uSA';\r\n        let formatZip = zipCodeUs.slice(0, 5);\r\n        let url = `https://www.zipcodeapi.com/rest/${api}/info.json/${formatZip}/degrees`\r\n        const res = await axios.get(url);\r\n        // const res = await axios.get(`${proxyurl}${url}`);\r\n        let city = res.data.city;\r\n        let locState = res.data.state\r\n        if (city && locState !== undefined && this.state.zipCode >= 5) {\r\n            this.setState({\r\n                location: `${city}, ${locState}, U.S`,\r\n                officeCity: city,\r\n                officeState: locState\r\n            })\r\n        }\r\n        if (city && locState !== undefined && this.state.personZipCode >= 5) {\r\n            this.setState({\r\n                personLocation: `${city}, ${locState}, U.S`,\r\n                personCity: city,\r\n                personState: locState\r\n            })\r\n            // setValue(`${city}, ${state}, U.S`);\r\n            // console.log(JSON.stringify(res.data));\r\n        }\r\n    }\r\n\r\n\r\n    handleBlur = (field) => (evt) => {\r\n\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        })\r\n\r\n    }\r\n\r\n    onChange = (value) => {\r\n\r\n        this.setState({\r\n            isVerified: true\r\n        })\r\n\r\n    }\r\n\r\n\r\n    toggleWorkspace = () => {\r\n        authentication.isLoggedIn = true;\r\n        console.log(authentication.isLoggedIn)\r\n        // alert(`Pincode is ${this.state.zipCode}`)\r\n        history.push('/workspaces');\r\n\r\n    }\r\n    increase = () => {\r\n        this.setState({\r\n            people: parseInt(this.state.people) + 1\r\n        })\r\n        if (this.state.people === '') {\r\n            this.setState({\r\n                people: 0\r\n            })\r\n        }\r\n    }\r\n    decrease = () => {\r\n        if (this.state.people > 0) {\r\n            this.setState({\r\n                people: parseInt(this.state.people) - 1\r\n            })\r\n        }\r\n        if (this.state.people === '') {\r\n            this.setState({\r\n                people: 0\r\n            })\r\n        }\r\n    }\r\n    onFileChange = async (event) => {\r\n\r\n        // Update the state \r\n        if (this.state.businessName !== '' || this.state.personAddress !== '' || this.state.personEmail !== '' || this.state.personPhone !== '') {\r\n            this.setState({\r\n                businessName: '',\r\n                personAddress: '',\r\n                personEmail: '',\r\n                personName: '',\r\n                personPhone: '',\r\n                personZipCode: '',\r\n                personLocation: ''\r\n            })\r\n        }\r\n        await this.setState({ selectedFile: event.target.files[0] });\r\n        console.log(\"Name--->...\" + this.state.selectedFile.name)\r\n        const reader = new FileReader();\r\n        let pattern = /image-*/;\r\n        if (!this.state.selectedFile.type.match(pattern)) {\r\n            await this.setState({\r\n                selectedFile: null,\r\n                imageChkSum: ''\r\n            });\r\n            alert('invalid format');\r\n            return;\r\n        }\r\n        reader.addEventListener('load', (event) => {\r\n            this._handleReaderLoaded(event);\r\n        });\r\n        reader.readAsBinaryString(this.state.selectedFile);\r\n    };\r\n    _handleReaderLoaded(event) {\r\n        this.setState({\r\n            businessCard: true\r\n        })\r\n        // this.pg1Next = true;\r\n        const data = event.target.result;\r\n        this.setState({\r\n            imageChkSum: this.getCheckSumValue(data)\r\n        })\r\n        if (this.state.selectedFile !== '' && this.state.imageChkSum !== null) {\r\n            this.scanCard(this.state.selectedFile, this.state.imageChkSum)\r\n        }\r\n    }\r\n    getCheckSumValue(data) {\r\n        const crcVal = CRC32.bstr(data);\r\n        const hexVal = this.lpad((crcVal >>> 0).toString(16), 8, \"0\");\r\n        return hexVal;\r\n    }\r\n    lpad(s, len, chr) {\r\n        const L = len - s.length;\r\n        const C = chr || \" \";\r\n        if (L <= 0) {\r\n            return s;\r\n        }\r\n        return new Array(L + 1).join(C) + s;\r\n    };\r\n\r\n    setYear = async (year) => {\r\n        await this.setState({\r\n            setSelectedYear: year\r\n        })\r\n    }\r\n    // Guidewire Api call\r\n    guideWireApi = async () => {\r\n        const proxyurl = \"https://corsaccess.herokuapp.com/\";\r\n        const url = 'http://direct-digital-gw.uk-e1.cloudhub.io/GWire';\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Credentials': 'true',\r\n            'userName': 'su',\r\n            'password': 'gw',\r\n            'Access-Control-Allow-Origin': '*',\r\n            \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\r\n            \"Access-Control-Allow-Headers\": \"Content-Type, Authorization, X-Requested-With\",\r\n            \"X-Requested-With\": \"XMLHttpRequest\"\r\n        }\r\n        const reqBody = {\r\n\r\n            \"input\": {\r\n                \"orderKeys\": [\"policy\"],\r\n                \"policy\": {\r\n                    \"yearBusinessStarted\": this.state.setSelectedYear,\r\n                    \"BaseState\": this.state.officeState,\r\n                    \"accountHolderName\": this.state.personName,\r\n                    \"accountHolderEmailAddress\": this.state.personEmail,\r\n                    \"accountHolderContactFirstName\": this.state.personFirstName,\r\n                    \"accountHolderContactLastName\": this.state.personLastName,\r\n                    \"primaryAddressLine1\": this.state.selectedOfficeAddress1,\r\n                    \"primaryAddressLine2\": this.state.selectedOfficeAddress2,\r\n                    \"primaryAddressCity\": this.state.officeCity,\r\n                    \"primaryAddressState\": this.state.officeState,\r\n                    \"primaryAddressCountry\": \"US\",\r\n                    \"primaryAddressPostalCode\": this.state.zipCode,\r\n                    \"primaryAddressType\": \"business\",\r\n                    \"coverageTermValue\": \"2000000\",\r\n                    \"exposureBasisAmount\": this.state.setExposureAmount,\r\n                    \"generalInfoWebsite\": \"aa@aa.com\",\r\n                    \"generalInfoDBANames\": \"DBA\",\r\n                    \"generalInfoLegalStatus\": \"Open\",\r\n                    \"financialRiskAnnualRevenue\": \"5000\",\r\n                    \"financialRiskD_B\": \"1\",\r\n                    \"industryRiskSICDescription\": \"Low Risk\",\r\n                    \"industryRiskNAICSDescription\": \"NAICS\",\r\n                    \"industryRiskIndustryInfo\": \"Low\",\r\n                    \"industryRiskCompanyDesc\": \"Low Risk\",\r\n                    \"industryRiskTypeOfCargo\": \"Low\",\r\n                    \"locationRiskFloodRiskScore\": \"78\",\r\n                    \"locationRiskCrimeScore\": \"34\",\r\n                    \"locationRiskTextCrimeScore\": \"47\",\r\n                    \"locationRiskFireProtectScore\": \"89\",\r\n                    \"locationRiskNearestFireStation\": \"Alberta\",\r\n                    \"locationRiskNearFireStionType\": \"Low\",\r\n                    \"locationRiskFireProtectClass\": \"01\",\r\n                    \"locationRiskDistanceInMiles\": \"23\",\r\n                    \"locationRiskDistanceInMin\": \"12\",\r\n                    \"locationRiskNo_of_Locations\": \"1\",\r\n                    \"locationalRiskFIPSCode\": \"023\",\r\n                    \"locationalRiskLatitude\": \"12\",\r\n                    \"locationalRiskLongitude\": \"26\",\r\n                    \"locationalRiskWildfireRisk\": \"36\",\r\n                    \"locationalRiskEarthquake\": \"Medium\",\r\n                    \"locationalRiskWind\": \"87\",\r\n                    \"locationalRiskHail\": \"High\",\r\n                    \"locationalRiskDistanceToShore\": \"42\",\r\n                    \"locationalRiskTornado\": \"High\",\r\n                    \"locationalRiskLightning\": \"High\",\r\n                    \"locationalRiskToxicRelFltyDis\": \"Low\",\r\n                    \"locationalRiskForcibleRobbery\": \"Low\",\r\n                    \"locationalRiskMtrVehicleTheft\": \"High\",\r\n                    \"locationalRiskMurder\": \"High\",\r\n                    \"mgmtRiskBBBRating\": \"87\",\r\n                    \"mgmtRiskAny_ProductRecalls\": \"6\",\r\n                    \"mgmtRiskSocialMediaScore\": \"45\",\r\n                    \"mgmtRiskAny_CodeViolations\": \"1\",\r\n                    \"mgmtRiskPFR\": \"65\",\r\n                    \"operationRiskIsAllTime\": \"false\",\r\n                    \"propertyRiskOperateFromHome\": \"true\",\r\n                    \"propertyRiskDoPlaceOfBusiness\": \"true\",\r\n                    \"propertyRiskExactSqFootage\": \"2000\",\r\n                    \"propertyRiskNoOfFloors\": \"4\",\r\n                    \"propertyRiskYearBuilt\": \"2000\",\r\n                    \"propertyRiskConstructionType\": \"1A\",\r\n                    \"operationRiskHrsOfOperation\": \"2\",\r\n                    \"operationRiskFPCCodes\": \"112\",\r\n                    \"personnelRiskFullTimeEmployees\": \"3\",\r\n                    \"lineLeveDetailsTranpNumber\": \"1\"\r\n                }\r\n            }\r\n        }\r\n        try {\r\n            let res = await axios.post(proxyurl + url, reqBody, { headers: headers })\r\n            console.log(JSON.stringify(res.data.output.response.premium));\r\n            if (res.data.output.response.premium) {\r\n                let premiumWithUsd = res.data.output.response.premium;\r\n                let separate = premiumWithUsd.split('.');\r\n                let premiumAmount = separate[0];\r\n                console.log(`premium amount is ---> ${premiumAmount}`);\r\n\r\n                this.setState(\r\n                    { setPremiumAmount: premiumAmount }\r\n                )\r\n            }\r\n            console.log(`Response is --> ${res}`)\r\n        }\r\n        catch (e) {\r\n            console.error(\"error in GuideWire---->\" + e)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    scanCard = async (selectedFileState, imageChkSumState) => {\r\n        let res = '';\r\n        let taskId = '';\r\n        const proxyurl = \"https://corsaccess.herokuapp.com/\";\r\n        let url = 'https://cloud-westus.ocrsdk.com/v2/processBusinessCard?exportFormat=xml';\r\n        let username = \"53573204-976c-40f4-a22b-5f6bad540290\"\r\n        let pass = \"W9zhas+CMMYurG3HOmnrqsig\"\r\n        const httpOptions = {\r\n\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Basic ' + btoa(username + \":\" + pass),\r\n            'X-Requested-With': 'XMLHttpRequest',\r\n            'Access-Control-Allow-Origin': '*'\r\n\r\n        }\r\n\r\n        try {\r\n\r\n            res = await trackPromise(axios.post(proxyurl + url, selectedFileState, { headers: httpOptions }))\r\n            console.log(JSON.stringify(res.data))\r\n        } catch (e) {\r\n            console.error(\"error in scanCard---->\" + e)\r\n        }\r\n        if (res.data.taskId !== '') {\r\n            taskId = res.data.taskId\r\n        }\r\n        // alert(taskId);\r\n        this.GetresultUrls(taskId);\r\n    }\r\n\r\n    // xml  response to JSON\r\n    xmlToJson = (xml) => {\r\n        // Create the return object\r\n        let obj = {};\r\n\r\n        if (xml.nodeType === 1) {\r\n            // element\r\n            // do attributes\r\n            if (xml.attributes.length > 0) {\r\n                obj[\"@attributes\"] = {};\r\n                for (let j = 0; j < xml.attributes.length; j++) {\r\n                    let attribute = xml.attributes.item(j);\r\n                    obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n                }\r\n            }\r\n        } else if (xml.nodeType === 3) {\r\n            // text\r\n            obj = xml.nodeValue;\r\n        }\r\n\r\n        // do children\r\n        // If all text nodes inside, get concatenated text from them.\r\n        let textNodes = [].slice.call(xml.childNodes).filter(function (node) {\r\n            return node.nodeType === 3;\r\n        });\r\n        if (xml.hasChildNodes() && xml.childNodes.length === textNodes.length) {\r\n            obj = [].slice.call(xml.childNodes).reduce(function (text, node) {\r\n                return text + node.nodeValue;\r\n            }, \"\");\r\n        } else if (xml.hasChildNodes()) {\r\n            for (let i = 0; i < xml.childNodes.length; i++) {\r\n                let item = xml.childNodes.item(i);\r\n                let nodeName = item.nodeName;\r\n                if (typeof obj[nodeName] === \"undefined\") {\r\n                    obj[nodeName] = this.xmlToJson(item);\r\n                } else {\r\n                    if (typeof obj[nodeName].push === \"undefined\") {\r\n                        let old = obj[nodeName];\r\n                        obj[nodeName] = [];\r\n                        obj[nodeName].push(old);\r\n                    }\r\n                    obj[nodeName].push(this.xmlToJson(item));\r\n                }\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    // scanCard API\r\n    GetresultUrls = async (taskId) => {\r\n        let hitCount = 0;\r\n        let resultUrls = ''\r\n        let getRes = ''\r\n        let jsonResponse = ''\r\n        const proxyurl = \"https://corsaccess.herokuapp.com/\";\r\n        let url2 = 'https://cloud-westus.ocrsdk.com/v2/getTaskStatus';\r\n        let username = \"53573204-976c-40f4-a22b-5f6bad540290\"\r\n        let pass = \"W9zhas+CMMYurG3HOmnrqsig\"\r\n        const httpOptions2 = {\r\n\r\n            'Authorization': 'Basic ' + btoa(username + \":\" + pass),\r\n            'X-Requested-With': 'XMLHttpRequest',\r\n            'Access-Control-Allow-Origin': '*'\r\n        }\r\n        const paramsNew = { 'taskId': taskId }\r\n        try {\r\n\r\n            getRes = await trackPromise(axios.get(proxyurl + url2, { headers: httpOptions2, params: paramsNew }))\r\n            console.log(\"url check --->\" + JSON.stringify(getRes.data))\r\n            // requestUrl will be empty if it is in other status than complete\r\n            while (getRes.data.status !== 'Completed') {\r\n                if (hitCount <= 10) {\r\n                    console.log(\"Inside while\")\r\n                    getRes = ''\r\n                    getRes = await trackPromise(axios.get(proxyurl + url2, { headers: httpOptions2, params: paramsNew }))\r\n                    console.log(\"while---->\" + JSON.stringify(getRes.data) + \" count is \" + hitCount)\r\n                    hitCount++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            resultUrls = await getRes.data.resultUrls[0];\r\n\r\n            // alert(resultUrls)\r\n            const response = await trackPromise(fetch(proxyurl + resultUrls));\r\n\r\n            const xmlString = await trackPromise(response.text());\r\n            let XmlNode = new DOMParser().parseFromString(xmlString, 'text/xml');\r\n            jsonResponse = this.xmlToJson(XmlNode);\r\n            console.log(\"Response of xml \", jsonResponse)\r\n            this.setDataforXmlResponse(jsonResponse)\r\n\r\n        } catch (e) {\r\n            console.error(\"error in taskId---->\" + e)\r\n        }\r\n\r\n    }\r\n    setDataforXmlResponse = (xmltojsonResponse) => {\r\n        const Data = xmltojsonResponse\r\n        //console.log(Data.document.businessCard.field) \r\n        const length = Data.document.businessCard.field\r\n        for (let i of length) {\r\n            // console.log(i);\r\n            if (i[\"@attributes\"].type === \"Company\") {\r\n                this.setState({\r\n                    businessName: i.value\r\n                })\r\n            }\r\n            if (i[\"@attributes\"].type === \"Email\") {\r\n                // this.addressOnCard = i.value\r\n                if (i.value !== '' && i.value !== null && i.value !== 0) {\r\n                    this.setState({\r\n                        personEmail: i.value\r\n                    })\r\n                }\r\n            }\r\n            if (i[\"@attributes\"].type === \"Phone\") {\r\n                // this.addressOnCard = i.value\r\n                if (i.value !== '' && i.value !== null && i.value !== 0) {\r\n                    this.setState({\r\n                        personPhone: i.value\r\n                    })\r\n                }\r\n            }\r\n            if (i[\"@attributes\"].type === \"Name\") {\r\n                // this.addressOnCard = i.value\r\n                if (i.value !== '' && i.value !== null && i.value !== 0) {\r\n                    this.setState({\r\n                        personName: i.value\r\n                    })\r\n                }\r\n            }\r\n            if (i[\"@attributes\"].type === \"Address\") {\r\n                // this.addressOnCard = i.value\r\n                let newArr = []\r\n                let checkZip = []\r\n                newArr = i.value.split(' ')\r\n                for (let j = 0; j < newArr.length; j++) {\r\n                    checkZip[j] = parseInt(newArr[j]);\r\n                    // if(isNaN(checkZip[j])){\r\n                    //     checkZip.splice(j,1)\r\n                    // }\r\n                    // console.log(`${checkZip[j]} ${typeof(checkZip[j])} `)\r\n\r\n                    // if(newArr[j].length>=5 && Number.isInteger(newArr[j])){\r\n                    //     console.log(newArr[j])\r\n                    // }\r\n                }\r\n                for (let j = checkZip.length; j >= 0; j--) {\r\n\r\n                    if (isNaN(checkZip[j])) {\r\n                        checkZip.splice(j, 1)\r\n                    }\r\n                    if (checkZip[j] >= 5) {\r\n                        let locationZip = checkZip[j].toString()\r\n\r\n                        this.setState({\r\n                            personZipCode: checkZip[j]\r\n                        })\r\n                        this.handleFetch(locationZip);\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                console.log(`Check Zip ---> ${[...checkZip]}`)\r\n                console.log(`newArr ---> ${newArr.length}, ${newArr}`)\r\n                if (i.value !== '' && i.value !== null && i.value !== 0) {\r\n                    this.setState({\r\n                        personAddress: i.value\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    deletePersonDetails = () => {\r\n        this.setState({\r\n            businessName: '',\r\n            personZipCode: '',\r\n            personEmail: '',\r\n            personLocation: '',\r\n            personCity: '',\r\n            personState: ''\r\n        })\r\n    }\r\n\r\n    getSelectedWorkspaceId = async () => {\r\n        let url = window.location.href\r\n        console.log(url)\r\n        let findId = url.split('/')\r\n        let id\r\n        id = findId[4]\r\n        console.log(\"ID is --->\" + id)\r\n        await this.setState({\r\n            selectedWorkspaceId: id\r\n        })\r\n        let filteredWorkSpace = this.state.workspaceinfo.filter((work) => work.id === parseInt(id))[0];\r\n        if (filteredWorkSpace.name) {\r\n            let workspaceName = filteredWorkSpace.name;\r\n            let separateAddress = workspaceName.split(',');\r\n            let address1 = separateAddress[0].trim();\r\n            let address2 = separateAddress[1].trim();\r\n            let exposureAmount = filteredWorkSpace.exposureAmount;\r\n            this.setState({\r\n                selectedOfficeAddress1: address1,\r\n                selectedOfficeAddress2: address2,\r\n                setExposureAmount: exposureAmount\r\n            })\r\n        }\r\n        this.guideWireApi();\r\n    }\r\n\r\n    updateLeaseDuration = async (duration, price) => {\r\n        if (duration === '1') {\r\n            this.setState({\r\n                selectedLeaseDuration: duration,\r\n                selectedLeasePrice: price\r\n            })\r\n        }\r\n        else if (duration === '6') {\r\n            price = parseInt(price) * parseInt(duration);\r\n            this.setState({\r\n                selectedLeaseDuration: duration,\r\n                selectedLeasePrice: price\r\n            })\r\n        }\r\n        else if (duration === '12') {\r\n            price = parseInt(price) * parseInt(duration);\r\n            this.setState({\r\n                selectedLeaseDuration: duration,\r\n                selectedLeasePrice: price\r\n            })\r\n        }\r\n    }\r\n\r\n    updateRadioState = async (radioValue) => {\r\n\r\n        let orignalValue = this.state.selectedLeasePrice\r\n        console.log(`type of orignalValue is ${typeof (orignalValue)} and type of previousValue is ${typeof (previousValue)}`)\r\n        this.setState({\r\n            clickCount: this.state.clickCount + 1\r\n        })\r\n\r\n        await this.setState({\r\n            selectedRadioValue: parseInt(radioValue),\r\n\r\n        })\r\n\r\n        if (radioValue === '10') {\r\n            if (this.state.selectedRadioValueYes === 0) {\r\n                if (this.state.selectedLeaseDuration === '1') {\r\n                    let totalAmount = parseInt(this.state.selectedLeasePrice) + parseInt(this.state.setPremiumAmount)\r\n                    await this.setState({\r\n                        selectedRadioValueYes: totalAmount\r\n                    })\r\n                }\r\n                else if (this.state.selectedLeaseDuration === '6') {\r\n                    let totalAmount = parseInt(this.state.selectedLeasePrice) + (parseInt(this.state.setPremiumAmount) * 6)\r\n                    await this.setState({\r\n                        selectedRadioValueYes: totalAmount\r\n                    })\r\n                }\r\n                else if (this.state.selectedLeaseDuration === '12') {\r\n                    let totalAmount = parseInt(this.state.selectedLeasePrice) + (parseInt(this.state.setPremiumAmount) * 12)\r\n                    await this.setState({\r\n                        selectedRadioValueYes: totalAmount\r\n                    })\r\n                }\r\n            }\r\n            await this.setState({\r\n                yesSelected: true\r\n            })\r\n        }\r\n        if (radioValue === '0') {\r\n            await this.setState({\r\n                selectedRadioValueNo: this.state.selectedLeasePrice,\r\n                yesSelected: false\r\n            })\r\n        }\r\n\r\n        //   await this.setState({\r\n        //         selectedLeasePrice: this.state.selectedLeasePrice + this.state.radioValue\r\n        //     })\r\n\r\n    }\r\n\r\n    updateClickCount = () => {\r\n\r\n        this.setState({\r\n            clickCount: 0,\r\n            selectedLeaseDuration: 0,\r\n            selectedLeasePrice: 0,\r\n            yesSelected: false,\r\n            selectedRadioValueNo: 0,\r\n            selectedRadioValueYes: 0\r\n        })\r\n\r\n    }\r\n\r\n\r\n    PersonInformation = () => {\r\n        return (\r\n            <>\r\n                <PersonalInfo key={'personalIn'}\r\n                    handInputChange={this.handInputChange}\r\n                    handleBlur={this.handleBlur}\r\n                    onChange={this.onChange}\r\n                    personZipCode={this.state.personZipCode}\r\n                    businessName={this.state.businessName}\r\n                    personEmail={this.state.personEmail}\r\n                    updatePersonDetails={this.updatePersonDetails}\r\n                    deletePersonDetails={this.deletePersonDetails}\r\n                    personLocation={this.state.personLocation}\r\n                    onFileChange={this.onFileChange}\r\n                    selectedFile={this.state.selectedFile}\r\n                    personEmailTouched={this.state.touched.personEmail}\r\n                    businessNameTouched={this.state.touched.businessName}\r\n                    personZipCodeTouched={this.state.touched.personZipCode} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    WorkspaceWithId = ({ match }) => {\r\n\r\n        return (\r\n            <>\r\n                <WorkspaceDetails workspace={this.state.workspaceinfo.filter((workspace) => workspace.id === parseInt(match.params.workspaceId, 10))[0]}\r\n                    getSelectedWorkspaceId={this.getSelectedWorkspaceId} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    Workspaces = () => {\r\n        return (\r\n            <>\r\n                <Workspace\r\n                    zipCode={this.state.zipCode}\r\n                    workspaceinfo={this.state.workspaceinfo}\r\n                    setDate={this.state.setDate}\r\n                    people={this.state.people}\r\n                    location={this.state.location} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    ConfirmPersonDetails = () => {\r\n        return (\r\n            <>\r\n                <ConfirmPerson\r\n                    handInputChange={this.handInputChange}\r\n                    handleBlur={this.handleBlur}\r\n                    onChange={this.onChange}\r\n                    personCity={this.state.personCity}\r\n                    personState={this.state.personState}\r\n                    personEmail={this.state.personEmail}\r\n                    businessName={this.state.businessName}\r\n                    personAddress={this.state.personAddress}\r\n                    personName={this.state.personName}\r\n                    personPhone={this.state.personPhone} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    LeaseWorkspaceTimeDuration = () => {\r\n        return (\r\n            <>\r\n                <LeaseTimePeriod\r\n                    workspace={this.state.workspaceinfo}\r\n                    selectedWorkspaceId={this.state.selectedWorkspaceId}\r\n                    selectedLeaseDuration={this.state.selectedLeaseDuration}\r\n                    updateLeaseDuration={(duration, price) => this.updateLeaseDuration(duration, price)}\r\n                    updateRadioState={(radioValue) => this.updateRadioState(radioValue)}\r\n                    updateClickCount={this.updateClickCount}\r\n                    businessName={this.state.businessName}\r\n                    setPremiumAmount={this.state.setPremiumAmount}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n\r\n    PaymentComp = () => {\r\n        return (\r\n            <>\r\n                <Payment\r\n                    selectedLeasePrice={this.state.selectedLeasePrice}\r\n                    selectedRadioValueYes={this.state.selectedRadioValueYes}\r\n                    selectedRadioValueNo={this.state.selectedRadioValueNo}\r\n                    updateClickCount={this.updateClickCount}\r\n                    yesSelected={this.state.yesSelected}\r\n                    businessName={this.state.businessName}\r\n                    selectedLeaseDuration={this.state.selectedLeaseDuration}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n\r\n    CongratsComp = () => {\r\n        return (\r\n            <>\r\n                <Congrats\r\n                    handInputChange={this.handInputChange}\r\n                    handleBlur={this.handleBlur}\r\n                    onChange={this.onChange}\r\n                    personEmail={this.state.personEmail}\r\n                    businessName={this.state.businessName} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    FeedbackCompSecured = () => {\r\n        return (\r\n            <>\r\n                <FeedbackComp />\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <>\r\n                <Loader promiseTracker={usePromiseTracker} color={'#3d5e61'} background={'rgba(255,255,255,.5)'} />\r\n                <Router history={history}>\r\n                    <Header toggleButton = {this.state.toggleButton} handInputChange = {(e)=>this.handInputChange(e)} />\r\n                    <Switch>\r\n                        <Route exact path='/' render={() => <Landing key={'landingComp'}\r\n\r\n                            isVerified={this.state.isVerified}\r\n                            zipCode={this.state.zipCode}\r\n                            setDate={this.state.setDate} touched={this.state.touched}\r\n                            handInputChange={this.handInputChange}\r\n                            handleBlur={this.handleBlur}\r\n                            toggleWorkspace={this.toggleWorkspace}\r\n                            onChange={this.onChange}\r\n                            people={this.state.people}\r\n                            increase={this.increase}\r\n                            decrease={this.decrease}\r\n                            location={this.state.location}\r\n                            setYear={(year) => this.setYear(year)} />} />\r\n                        <SecuredRoute exact path='/workspaces' component={this.Workspaces} />\r\n                        <SecuredRoute path=\"/workspaces/:workspaceId\" component={this.WorkspaceWithId} />\r\n                        <SecuredRoute exact path=\"/personalinfo\" component={this.PersonInformation} />\r\n                        <SecuredRoute exact path=\"/confirmPerson\" component={this.ConfirmPersonDetails} />\r\n                        <SecuredRoute exact path=\"/leaseDuration\" component={this.LeaseWorkspaceTimeDuration} />\r\n                        <SecuredRoute exact path=\"/payment\" component={this.PaymentComp} />\r\n                        <SecuredRoute exact path=\"/congratulations\" component={this.CongratsComp} />\r\n                        <SecuredRoute exact path='/feedback' component={this.FeedbackCompSecured} />\r\n                        <Redirect to='/' />\r\n                    </Switch>\r\n\r\n                </Router>\r\n                <Footer />\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default MainComponent","import React from 'react';\r\nimport './App.css';\r\nimport MainComponent from './components/MainComponent';\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"appjs\">\r\n      \r\n        <MainComponent />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n// render={(props) => <Workspace zipCode=\"Hello,\" {...props} />}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}