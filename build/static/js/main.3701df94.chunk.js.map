{"version":3,"sources":["components/Header.js","components/Footer.js","components/Workspaces.js","components/LandingPage.js","components/history.js","shared/WorkspaceInfo.js","components/SecuredRoute.js","components/WorkspaceDetails.js","components/PersonalInfo.js","components/ConfirmPerson.js","components/LeaseTimePeriod.js","components/PaymentComponent.js","components/Congrats.js","components/Feedback.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","toggleModal","setState","isModelOpen","state","toggleNav","isNavOpen","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","key","className","expand","onClick","href","src","height","width","style","borderRadius","alt","isOpen","this","navbar","outline","toggle","onSubmit","htmlFor","type","id","name","innerRef","input","check","color","Component","Footer","year","Date","getFullYear","RenderWorkspace","workObj","zipCode","cityName","textDecoration","to","top","image","price","distance","description","Workspace","useState","slider","setSlider","newFilter","Work","filterWork","filter","setFilter","i","workspaceinfo","length","push","location","animated","striped","fontFamily","textAlign","setDate","people","for","class","aria-hidden","min","max","defaultValue","step","onChange","val","document","getElementById","innerHTML","work","parseInt","console","log","map","newFil","marginBottom","marginTop","Landing","networkError","handleSubmit","validate","yyyy","errors","touched","test","verifyYear","split","setYear","textWrapper","textContent","replace","paraWrapper","anime","timeline","loop","add","targets","opacity","easing","duration","delay","el","today","dd","String","getDate","padStart","mm","getMonth","isDisabled","isVerified","Object","keys","some","x","row","placeholder","valid","invalid","onBlur","handleBlur","handInputChange","disabled","decrease","increase","overflow","sitekey","theme","onErrored","toggleWorkspace","history","WORKSPACEINFO","category","exposureAmount","featured","details","facilities","workImages","altText","caption","authentication","isLoggedIn","onAuthentication","getLoginStatus","SecuredRoute","component","rest","render","pathname","WorkspaceDetails","popState","setPopState","togglePopUp","selectedWorkspace","workspace","fac","showDetails","showFac","items","body","getSelectedWorkspaceId","placement","target","PersonalInfo","businessName","personEmail","personZipCode","touchedPersonEmail","businessNameTouched","personZipCodeTouched","personLocation","Validate","personEmailTouched","display","onFileChange","cursor","fontWeight","ConfirmPerson","personName","personAddress","personPhone","personCity","personState","stopPropagation","AskInsurance","updateLeaseDuration","updateClickCount","insurancePart","scrollIntoView","monthly","sixMonths","twelveMonths","yesValue","noValue","oneMonth","sixMonth","twelveMonth","innerText","removeAttribute","borderColor","background","webkitTransition","transition","boxShadow","LeaseTimePeriod","useEffect","selectedLeaseDuration","window","onpopstate","e","jumbo","workspacePrice","workspaceFac","updateRadioState","selectedWorkspaceId","halfYearlyPrice","AnnualPrice","setPremiumAmount","Payment","loaderStatus","setLoaderStatus","loading","pattern","inputMode","yesSelected","selectedRadioValueYes","selectedLeasePrice","setTimeout","Congrats","left","download","FeedbackComp","emptySymbol","fullSymbol","fractions","handleValue","reload","MainComponent","a","fullName","sepratedName","firstName","lastName","personFirstName","personLastName","dateEntered","getYear","substring","setSelectedYear","zipCodeUs","handleFetch","formatZip","slice","url","axios","get","res","city","data","locState","undefined","officeCity","officeState","field","evt","selectedFile","files","reader","FileReader","match","imageChkSum","addEventListener","_handleReaderLoaded","readAsBinaryString","guideWireApi","headers","reqBody","selectedOfficeAddress1","selectedOfficeAddress2","setExposureAmount","post","proxyurl","JSON","stringify","output","response","premium","premiumWithUsd","separate","premiumAmount","error","scanCard","selectedFileState","imageChkSumState","taskId","httpOptions","btoa","trackPromise","GetresultUrls","xmlToJson","xml","obj","nodeType","attributes","j","attribute","item","nodeName","nodeValue","textNodes","call","childNodes","node","hasChildNodes","reduce","text","old","hitCount","resultUrls","getRes","jsonResponse","url2","httpOptions2","paramsNew","params","status","fetch","xmlString","XmlNode","DOMParser","parseFromString","setDataforXmlResponse","xmltojsonResponse","businessCard","newArr","checkZip","isNaN","splice","locationZip","toString","deletePersonDetails","findId","filteredWorkSpace","workspaceName","separateAddress","address1","trim","address2","radioValue","orignalValue","previousValue","clickCount","selectedRadioValue","totalAmount","selectedRadioValueNo","PersonInformation","updatePersonDetails","WorkspaceWithId","workspaceId","Workspaces","ConfirmPersonDetails","LeaseWorkspaceTimeDuration","PaymentComp","CongratsComp","FeedbackCompSecured","Feedback","agree","result","getCheckSumValue","crcVal","CRC32","bstr","lpad","s","len","chr","L","C","Array","join","promiseTracker","usePromiseTracker","exact","path","App","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3701df94.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label\r\n} from 'reactstrap';\r\n\r\nexport default class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModelOpen: false\r\n        }\r\n    }\r\n    toggleModal = () => {\r\n        this.setState({ isModelOpen: !this.state.isModelOpen })\r\n    }\r\n    toggleNav = () => {\r\n        this.setState({ isNavOpen: !this.state.isNavOpen })\r\n    }\r\n    handleLogin = (event) => {\r\n        this.toggleModal();\r\n        alert(`\r\n        Username : ${this.username.value} \r\n        Password : ${this.password.value} \r\n        Remember : ${this.remember.checked}\r\n        `);\r\n        \r\n        event.preventDefault();\r\n\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar key = {'navbarKey'} className=\"navbar-light bg-light p-0\" expand=\"sm\">\r\n                    <div className=\"container-fluid\">\r\n                        <NavbarToggler onClick={() => this.toggleNav()} />\r\n                        <NavbarBrand className=\"mr-auto ml-sm-0\" href=\"/\">\r\n                            <img src=\"/assets/images/logo.jpg\" height=\"50\" width=\"100\" style = {{borderRadius : \"80px\"}} alt=\"logo\" />\r\n                            <span className=\"navbar-brand mb-0 lead ml-sm-2 ml-2\">Co-Office Space</span>\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span>Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <div>\r\n                <Modal isOpen={this.state.isModelOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>\r\n                        Login\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nexport default function Footer(props){\r\n    let date = new Date();\r\n    let year = date.getFullYear()\r\n\r\nreturn(\r\n    <div className = \"footer\">\r\n        <p>© Capgemini <img src = \"/assets/images/cgLogo.png\" alt = \"Cg logo\" style = {{height : '20px', width : '20px'}}></img> {year}. All rights reserved.</p>\r\n    </div>\r\n)\r\n}","import React, { useState } from 'react'\r\nimport { Progress, CardImg, Card, CardTitle, CardBody, CardText, CardHeader } from 'reactstrap';\r\nimport '../App.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction RenderWorkspace({ workObj, zipCode, cityName }) {\r\n\r\n    return (\r\n        <Card>\r\n            <Link style={{ textDecoration: 'none' }} to={`/workspaces/${workObj.id}`} >\r\n                <CardHeader>\r\n                    <CardTitle>{workObj.name}</CardTitle>\r\n                </CardHeader>\r\n                <CardImg top height=\"375px\" src={workObj.image} alt={workObj.name} />\r\n\r\n\r\n                <CardBody>\r\n                    <CardTitle>from ${workObj.price}/mo</CardTitle>\r\n                    {/* <CardSubtitle>{workObj.distance} {workObj.description} {zipCode}</CardSubtitle> */}\r\n                    <CardText>\r\n                        <small className=\"text-muted\">{workObj.distance} {workObj.description} {zipCode}({cityName})</small>\r\n                    </CardText>\r\n                </CardBody>\r\n            </Link>\r\n        </Card>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nconst Workspace = (props) => {\r\n    // const Work = props.workspaceinfo.map((workObj) => {\r\n    //     return (\r\n    //         <div className=\"col-sm-5 mt-3 mb-2 col-12\" key={workObj.id}>\r\n    //             <RenderWorkspace workObj={workObj} zipCode={props.zipCode} cityName = {props.location} />\r\n    //         </div>\r\n    //     )\r\n    // })\r\n    let [slider, setSlider] = useState(false)\r\n    let newFilter = []\r\n\r\n    let Work = []\r\n    let filterWork = []\r\n    let [filter, setFilter] = useState([])\r\n    for (let i = 0; i < props.workspaceinfo.length; i++) {\r\n        if (props.workspaceinfo[i].zipCode === props.zipCode) {\r\n            filterWork[i] = props.workspaceinfo[i]\r\n            Work.push(\r\n                <div className=\"col-sm-5 mt-3 mb-2 col-12\">\r\n                    <RenderWorkspace workObj={props.workspaceinfo[i]} zipCode={props.zipCode} cityName={props.location} />\r\n                </div>\r\n            )\r\n        }\r\n        if ((props.zipCode !== '10007' && props.zipCode !== '94111' && props.zipCode !== '60603')) {\r\n            if (props.workspaceinfo[i].zipCode === '') {\r\n\r\n                filterWork[i] = props.workspaceinfo[i]\r\n                Work.push(\r\n                    <div className=\"col-sm-5 mt-3 mb-2 col-12\">\r\n                        <RenderWorkspace workObj={props.workspaceinfo[i]} zipCode={props.zipCode} cityName={props.location} />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    let outputValue = () => {\r\n        setSlider(true);\r\n        let val = document.getElementById(\"price\").value;\r\n        document.getElementById(\"ageOutputId\").innerHTML = '$' + val;\r\n\r\n        newFilter = filterWork.filter(work => parseInt(work.price) <= parseInt(val))\r\n        console.log(newFilter)\r\n        setFilter(newFilter.map((newFil) =>\r\n            <div className=\"col-sm-5 mt-3 mb-2 col-12\">\r\n                <RenderWorkspace workObj={newFil} zipCode={props.zipCode} cityName={props.location} />\r\n            </div>\r\n        ))\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"text-center\"></div>\r\n                        <Progress animated={true} striped color=\"primary\" value=\"12\">12%</Progress>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <p className=\"lead\" style={{ fontFamily: \"'Courgette', cursive\", textAlign: \"center\", color: \"#007bff\" }}>Choose a preferred workspace</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-2 d-flex justify-content-center\">\r\n                    <div className=\"col-sm-5 offset-sm-1 col-12\">\r\n                        <p>Showing avalable properties for Date:- <strong>{props.setDate}</strong> and for <strong>{props.people}</strong> peoples</p>\r\n                    </div>\r\n                    <div className=\"col-sm-4 offset-sm-2 col-12\">\r\n                        <label for=\"price\"><strong>Price Range (<i class=\"fa fa-usd\" aria-hidden=\"true\"></i>) :-</strong></label>\r\n                        <output className=\"ml-sm-3 mr-sm-1\">$800</output>\r\n                        <input type=\"range\" id=\"price\" name=\"price\" min=\"800\" max=\"5000\" defaultValue=\"800\" step=\"5\" onChange={outputValue} />\r\n                        <output className=\"ml-1\" name=\"ageOutputName\" id=\"ageOutputId\">$5000</output>\r\n                    </div>\r\n        \r\n            </div>\r\n            <div className=\"row d-flex justify-content-center\">\r\n\r\n\r\n                {slider ? filter : Work}\r\n                <div className=\"col-sm-12 col-12\">\r\n                    {(filter.length === 0 && slider) ? <p style={{ marginBottom: '25%', marginTop: '20%' }} className=\"lead text-center\">There are no properties in this price range, please change the slider range to get the properties</p> : <></>}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Workspace","import React, { Component } from 'react'\r\nimport {\r\n    Button, Form, FormGroup, Input, FormFeedback, Card, CardBody, CardTitle\r\n} from 'reactstrap';\r\nimport anime from 'animejs/lib/anime.es.js';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\n\r\nexport default class Landing extends Component {\r\n\r\n    networkError = () => {\r\n        console.log(\"Network Error:\");\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        // console.log(\"Current state is \" + JSON.stringify(this.state));\r\n        // alert(\"Current state is \" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    validate = (zipCode, setDate, people, location,yyyy) => {\r\n\r\n        const errors = {\r\n            zipCode: '',\r\n            setDate: '',\r\n            people: '',\r\n            location: ''\r\n\r\n        }\r\n        // if (this.props.touched.zipCode && zipCode.length <= 3) {\r\n        //     errors.zipCode = \"Zip Code length should be more than 3\"\r\n        // }\r\n        // else if (this.props.touched.zipCode && zipCode.length > 6) {\r\n        //     errors.zipCode = \"Zip Code length should be less than 6\"\r\n        // }\r\n        const reg = /^([0-9]{5})(?:[-\\s]*([0-9]{4}))?$/;\r\n        if (this.props.touched.zipCode && !reg.test(zipCode)) {\r\n            errors.zipCode = \"Please enter the zip code in the US zip code format\"\r\n        }\r\n        else if (zipCode === '') {\r\n            errors.zipCode = \"Please enter the zip code\"\r\n        }\r\n\r\n        if (setDate === '') {\r\n            errors.setDate = \"Please select the setDate\"\r\n        }\r\n        else if(setDate){\r\n            let verifyYear = setDate.split('-');\r\n            if(verifyYear[0]<yyyy || verifyYear[0]>(yyyy+1)){\r\n                errors.setDate = \"Please check the year entered, it must be the present or next year.\"\r\n            }\r\n        }\r\n\r\n        if (people === '0' || people === 0 || people === '') {\r\n\r\n            errors.people = \"There must be atleast 1 person to find workspace\"\r\n\r\n        }\r\n        if (people > '50' || people > 50) {\r\n\r\n            errors.people = \"Maximum number of people can be 50 only\"\r\n\r\n        }\r\n        if (location === '') {\r\n            errors.location = 'Enter the zipCode to get the location'\r\n        }\r\n        if (zipCode.length >= 5 && location === '') {\r\n            errors.location = 'Incorrect ZipCode or This ZipCode does not exists in our database'\r\n        }\r\n        return errors;\r\n    }\r\n\r\n     setYear = (year)=>{\r\n        this.props.setYear(year);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let textWrapper = document.getElementById('title');\r\n        textWrapper.innerHTML = textWrapper.textContent.replace(/\\S/g, \"<span class='letter'>$&</span>\");\r\n\r\n        // let mobWrapper = document.getElementById('titleMob');\r\n        // mobWrapper.innerHTML = mobWrapper.textContent.replace(/\\S/g, \"<span class='letter'>$&</span>\");\r\n\r\n\r\n        // setTimeout(() => {\r\n        //     anime.timeline({ loop: true })\r\n        //         .add({\r\n        //             targets: '.ml16 .letter',\r\n        //             translateY: [-100, 0],\r\n        //             easing: \"easeOutExpo\",\r\n        //             duration: 1400,\r\n        //             delay: (el, i) => 30 * i\r\n        //         }).add({\r\n        //             targets: '.ml16',\r\n        //             opacity: 0,\r\n        //             duration: 1000,\r\n        //             easing: \"easeOutExpo\",\r\n        //             delay: 10000\r\n        //         });\r\n        // }, 24000);\r\n\r\n        // anime.timeline({ loop: true })\r\n        //     .add({\r\n        //         targets: '.ml16Mob .letter',\r\n        //         translateY: [-100, 0],\r\n        //         easing: \"easeOutExpo\",\r\n        //         duration: 1400,\r\n        //         delay: (el, i) => 30 * i\r\n        //     }).add({\r\n        //         targets: '.ml16Mob',\r\n        //         opacity: 0,\r\n        //         duration: 1000,\r\n        //         easing: \"easeOutExpo\",\r\n        //         delay: 10000\r\n        //     });\r\n\r\n\r\n        let paraWrapper = document.getElementById('para');\r\n        paraWrapper.innerHTML = paraWrapper.textContent.replace(/\\S/g, \"<span class='letter'>$&</span>\");\r\n\r\n        anime.timeline({ loop: true })\r\n            .add({\r\n                targets: '.ml3 .letter',\r\n                opacity: [0, 1],\r\n                easing: \"easeInOutQuad\",\r\n                duration: 1500,\r\n                delay: (el, i) => 150 * (i + 1)\r\n            }).add({\r\n                targets: '.ml3',\r\n                opacity: 0,\r\n                duration: 1000,\r\n                easing: \"easeOutExpo\",\r\n                delay: 20000000000\r\n            });\r\n    }\r\n    render() {\r\n        \r\n    \r\n        let today = new Date();\r\n        let dd = String(today.getDate()).padStart(2, '0');\r\n        let mm = String(today.getMonth() + 1).padStart(2, '0');;; //January is 0!\r\n        let yyyy = today.getFullYear();\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n        const errors = this.validate(this.props.zipCode, this.props.setDate, this.props.people, this.props.location,yyyy);\r\n        let isDisabled\r\n        if (this.props.isVerified === false) {\r\n            isDisabled = true;\r\n\r\n        }\r\n        else {\r\n            isDisabled = Object.keys(errors).some(x => errors[x]);\r\n        }\r\n        return (\r\n            <>\r\n\r\n                <div className=\"container-fluid main p-0\">\r\n                    <div className=\"row row-content mx-0\">\r\n                        <div className=\"col-sm-6 wrappertxt d-none d-sm-block\">\r\n                            <h1 className=\"ml16\" id=\"title\">Co-Working Office Space</h1>\r\n                            <p className=\"ml3\" id=\"para\">With all the buzz around coworking spaces, we decided to provide you with a primer. We cover the coworking basics as well as implications for the traditional office and facility managers.</p>\r\n                        </div>\r\n                        <div className = \"col-12 d-sm-none d-block\">\r\n                        <h2 id=\"titleMob\" className=\"ml16Mob col-12 ml-2 d-sm-none\">Co-Working Space</h2>\r\n                        </div>\r\n                        <div className=\"col-sm-4 offset-sm-1 py-5 mt-4 mr-5 wrapper col-12\">\r\n                            <Card>\r\n\r\n                                <CardBody>\r\n                                    <CardTitle>Where do you want to find workspace?</CardTitle>\r\n                                    <Form onSubmit={this.handleSubmit} key={'landing'}>\r\n                                        <FormGroup row>\r\n\r\n                                            <div className=\"col-sm-5 mt-2\">\r\n                                                <Input type=\"text\" name=\"zipCode\"\r\n                                                    placeholder=\"Zip Code\" value={this.props.zipCode}\r\n                                                    valid={errors.zipCode === ''}\r\n                                                    invalid={errors.zipCode !== ''}\r\n                                                    onBlur={this.props.handleBlur('zipCode')}\r\n                                                    onChange={this.props.handInputChange} />\r\n\r\n                                                <FormFeedback>{errors.zipCode}</FormFeedback>\r\n                                            </div>\r\n                                            <div className=\"col-sm-7 mt-2\">\r\n                                                <Input name=\"location\"\r\n                                                    placeholder=\"Enter 5 or 9-digit Zip Code\"\r\n                                                    valid={errors.location === ''}\r\n                                                    invalid={errors.location !== ''}\r\n                                                    disabled={true}\r\n                                                    value={this.props.location} />\r\n                                                <FormFeedback>{errors.location}</FormFeedback>\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        <CardTitle>When do you want to move in?</CardTitle>\r\n                                        <FormGroup row>\r\n\r\n                                            <div className=\"col-sm-9 col-12 mt-2\">\r\n                                                <Input type=\"date\" id=\"setDate\" name=\"setDate\" min={today} max=\"2021-12-31\"\r\n                                                    value={this.props.setDate}\r\n                                                    valid={errors.setDate === ''}\r\n                                                    invalid={errors.setDate !== ''}\r\n                                                    onBlur={this.props.handleBlur('setDate')}\r\n                                                    onChange={this.props.handInputChange} />\r\n                                                <FormFeedback>{errors.setDate}</FormFeedback>\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        <CardTitle>How many people do you want to accommodate?</CardTitle>\r\n                                        <div className=\"form-inline  d-sm-block d-none\">\r\n                                            <FormGroup row>\r\n                                                <div className=\"col-sm-12 mt-2\">\r\n\r\n                                                    <button style={{ height: '40px', width: '40px', borderRadius: '50px' }} className=\"btn btn-primary\" onClick={this.props.decrease}><i className=\"fa fa-minus\" aria-hidden=\"true\"></i></button>\r\n\r\n\r\n                                                    <Input name=\"people\" id=\"people\" style={{ width: '70px', textAlign: 'center' }}\r\n                                                        className=\"ml-1 mr-1\" type=\"number\"\r\n                                                        value={this.props.people}\r\n                                                        valid={errors.people === ''}\r\n                                                        invalid={errors.people !== ''}\r\n                                                        onChange={this.props.handInputChange}\r\n                                                        onBlur={this.props.handleBlur('people')}\r\n                                                    />\r\n\r\n                                                    <Button style={{ height: '40px', width: '40px', borderRadius: '50px' }} className=\"btn btn-dark\" onClick={this.props.increase}><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></Button>\r\n                                                    <FormFeedback>{errors.people}</FormFeedback>\r\n                                                </div>\r\n\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"row form-inline col-12 mt-2 d-sm-none\">\r\n\r\n                                            <button style={{ height: '40px', width: '40px', borderRadius: '50px' }} className=\"btn btn-danger\" onClick={this.props.decrease}><i className=\"fa fa-minus\" aria-hidden=\"true\"></i></button>\r\n\r\n\r\n                                            <Input name=\"people\" id=\"peopleMob\" style={{ width: '50px', textAlign: 'center' }}\r\n                                                className=\"ml-1 mr-1\" type=\"number\"\r\n                                                value={this.props.people}\r\n                                                valid={errors.people === ''}\r\n                                                invalid={errors.people !== ''}\r\n                                                onChange={this.props.handInputChange}\r\n                                                onBlur={this.props.handleBlur('people')}\r\n                                            />\r\n\r\n                                            <Button style={{ height: '40px', width: '40px', borderRadius: '50px' }} className=\"btn btn-primary\" onClick={this.props.increase}><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></Button>\r\n                                            <FormFeedback>{errors.people}</FormFeedback>\r\n                                        </div>\r\n                                        <FormGroup row>\r\n                                            <div className=\"col-sm-12 col-12 mt-3\">\r\n                                                <ReCAPTCHA style = {{overflow : 'hidden'}}\r\n                                                    sitekey=\"6Lf4QrIZAAAAADu8cXAyrlUNdTlQ4wasosFATzmY\"\r\n                                                    theme=\"dark\"\r\n                                                    onChange={this.props.onChange}\r\n                                                    onErrored={this.networkError}\r\n                                                />\r\n                                            </div>\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup row>\r\n                                            <div className=\"col-sm-12 col-12\">\r\n                                                <Button className=\"btn btn-block\" disabled={isDisabled} type=\"submit\" onClick={this.props.toggleWorkspace} color=\"btn btn-primary\">\r\n                                                    Find Workspace <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></Button>\r\n\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                {/* <div className=\"container mainMob d-block d-sm-none p-0\">\r\n                    <div className=\"row mx-0\">\r\n                        <div className=\"col-12\">\r\n                            <h2 id=\"titleMob\" className=\"ml16Mob ml-2\">Co-Working Space</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mx-0\">\r\n                        <div className=\"col-11 wrapperMob\">\r\n                            <h4>Where do you want to find workspace?</h4>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup row>\r\n                                    \r\n                                    <div className=\"col-12 mt-2\">\r\n                                        <Input type=\"text\" name=\"zipCode\"\r\n                                            placeholder=\"Zip Code\" value={this.props.zipCode}\r\n                                            valid={errors.zipCode === ''}\r\n                                            invalid={errors.zipCode !== ''}\r\n                                            onBlur={this.props.handleBlur('zipCode')}\r\n                                            onChange={this.props.handInputChange} />\r\n                                        <FormFeedback>{errors.zipCode}</FormFeedback>\r\n                                    </div>\r\n                                    <div className=\"col-12 mt-2\">\r\n                                        <Input name=\"location\"\r\n                                            placeholder=\"Enter 5 or 9-digit Zip Code\"\r\n                                            valid={errors.location === ''}\r\n                                            invalid={errors.location !== ''}\r\n                                            disabled={true}\r\n                                            value={this.props.location} />\r\n                                        <FormFeedback>{errors.location}</FormFeedback>\r\n                                    </div>\r\n                                </FormGroup>\r\n                                <h4>When do you want to move in?</h4>\r\n                                <FormGroup row>\r\n                                    \r\n                                    <div className=\"col-12 mt-2\">\r\n                                        <Input type=\"date\" name=\"setDate\" min={today}\r\n                                            placeholder=\"Date\" value={this.props.setDate}\r\n                                            valid={errors.setDate === ''}\r\n                                            invalid={errors.setDate !== ''}\r\n                                            onBlur={this.props.handleBlur('setDate')}\r\n                                            onChange={this.props.handInputChange} />\r\n                                        <FormFeedback>{errors.setDate}</FormFeedback>\r\n                                    </div>\r\n                                </FormGroup>\r\n                                <h4>How many people do you want to accommodate?</h4>\r\n\r\n                                <div className=\"row form-inline col-12 mt-2\">\r\n\r\n                                    <button style={{ height: '40px', width: '40px', borderRadius: '50px' }} className=\"btn btn-danger\" onClick={this.props.decrease}><i className=\"fa fa-minus\" aria-hidden=\"true\"></i></button>\r\n\r\n\r\n                                    <Input name=\"people\" id=\"peopleMob\" style={{ width: '50px', textAlign: 'center' }}\r\n                                        className=\"ml-1 mr-1\" type=\"number\"\r\n                                        value={this.props.people}\r\n                                        valid={errors.people === ''}\r\n                                        invalid={errors.people !== ''}\r\n                                        onChange={this.props.handInputChange}\r\n                                        onBlur={this.props.handleBlur('people')}\r\n                                    />\r\n\r\n                                    <Button style={{ height: '40px', width: '40px', borderRadius: '50px' }} className=\"btn btn-primary\" onClick={this.props.increase}><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></Button>\r\n                                    <FormFeedback>{errors.people}</FormFeedback>\r\n                                </div>\r\n                                <FormGroup row>\r\n                                    <div className=\"col-12 mt-3\">\r\n                                        <ReCAPTCHA\r\n                                            sitekey=\"6Lf4QrIZAAAAADu8cXAyrlUNdTlQ4wasosFATzmY\"\r\n                                            theme=\"dark\"\r\n                                            onChange={this.props.onChange}\r\n                                            onErrored={this.networkError}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <div className=\" col-12\">\r\n                                        <Button className=\"btn btn-block\" disabled={isDisabled} type=\"submit\" onClick={this.props.toggleWorkspace} color=\"btn btn-primary\">\r\n                                            Find Workspace <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></Button>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"push\"></div>\r\n                </div> */}\r\n            </>\r\n        )\r\n    }\r\n}","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","export const WORKSPACEINFO =\r\n    [\r\n        {\r\n            id: 0,\r\n            name: '92, Broad St',\r\n            zipCode: '',\r\n            image: '/assets/images/92Broad.jpg',\r\n            category: 'Basic',\r\n            exposureAmount: '10000',\r\n            price: '1020',\r\n            featured: true,\r\n            distance: 0.5,\r\n            description: 'miles away from',\r\n            details: [\r\n                '15-person capacity',\r\n                '2 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/92Broad.jpg',\r\n                altText: '',\r\n                caption: '92 Broad St'\r\n            },\r\n            {\r\n                src: '/assets/images/92Broad2.jpg',\r\n                altText: '',\r\n                caption: '92 Broad St'\r\n            },\r\n            {\r\n                src: '/assets/images/92Broad3.jpg',\r\n                altText: '',\r\n                caption: '92, Broad St'\r\n            }]\r\n        },\r\n        {\r\n            id: 1,\r\n            name: '332, Broadway',\r\n            zipCode: '',\r\n            image: '/assets/images/332Broadway.jpg',\r\n            category: 'Prime',\r\n            exposureAmount: '15000',\r\n            price: '1030',\r\n            featured: false,\r\n            distance: 1,\r\n            description: 'miles away from',\r\n            details: [\r\n                '20-person capacity',\r\n                '2 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/332Broadway.jpg',\r\n                altText: '',\r\n                caption: '332 Broadway'\r\n            },\r\n            {\r\n                src: '/assets/images/332Broadway2.jpg',\r\n                altText: '',\r\n                caption: '332 Broadway'\r\n            },\r\n            {\r\n                src: '/assets/images/332Broadway3.jpg',\r\n                altText: '',\r\n                caption: '332 Broadway'\r\n            }]\r\n        },\r\n        {\r\n            id: 2,\r\n            name: '54, Montague St',\r\n            zipCode: '',\r\n            image: '/assets/images/54Montague.jpg',\r\n            category: 'Basic',\r\n            exposureAmount: '20000',\r\n            price: '1050',\r\n            featured: false,\r\n            distance: 3,\r\n            description: 'miles away from',\r\n            details: [\r\n                '12-person capacity',\r\n                '1 floor fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/54Montague.jpg',\r\n                altText: '',\r\n                caption: '54 Montague St'\r\n            },\r\n            {\r\n                src: '/assets/images/54Montague2.jpg',\r\n                altText: '',\r\n                caption: '54 Montague St'\r\n            },\r\n            {\r\n                src: '/assets/images/54Montague3.jpg',\r\n                altText: '',\r\n                caption: '54 Montague St'\r\n            }]\r\n        },\r\n        {\r\n            id: 3,\r\n            name: '145, Liberty Plaza',\r\n            zipCode: '',\r\n            image: '/assets/images/LibertyPlaza.jpg',\r\n            category: 'Prime',\r\n            exposureAmount: '25000',\r\n            price: '1100',\r\n            featured: false,\r\n            distance: 5,\r\n            description: 'miles away from',\r\n            details: [\r\n                '50-person capacity',\r\n                '3 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/LibertyPlaza.jpg',\r\n                altText: '',\r\n                caption: 'Liberty Plaza'\r\n            },\r\n            {\r\n                src: '/assets/images/LibertyPlaza2.jpg',\r\n                altText: '',\r\n                caption: 'Liberty Plaza'\r\n            },\r\n            {\r\n                src: '/assets/images/LibertyPlaza3.jpg',\r\n                altText: '',\r\n                caption: 'Liberty Plaza'\r\n            }]\r\n        },\r\n        {\r\n            id: 4,\r\n            name: '502, Greenwich St',\r\n            zipCode: '10007',\r\n            image: '/assets/images/LibertyPlaza.jpg',\r\n            category: 'Prime',\r\n            exposureAmount: '30000',\r\n            price: '1800',\r\n            featured: false,\r\n            distance: 5,\r\n            description: 'miles away from',\r\n            details: [\r\n                '25-person capacity',\r\n                '1 floor fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/LibertyPlaza.jpg',\r\n                altText: '',\r\n                caption: '502, Greenwich St'\r\n            },\r\n            {\r\n                src: '/assets/images/LibertyPlaza2.jpg',\r\n                altText: '',\r\n                caption: '502, Greenwich St'\r\n            },\r\n            {\r\n                src: '/assets/images/LibertyPlaza3.jpg',\r\n                altText: '',\r\n                caption: '502, Greenwich St'\r\n            }]\r\n        },\r\n        {\r\n            id: 5,\r\n            name: '10, Chambers St',\r\n            zipCode: '10007',\r\n            image: '/assets/images/54Montague.jpg',\r\n            category: 'Basic',\r\n            exposureAmount: '35000',\r\n            price: '2050',\r\n            featured: false,\r\n            distance: 3,\r\n            description: 'miles away from',\r\n            details: [\r\n                '12-person capacity',\r\n                '1 floor fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/54Montague.jpg',\r\n                altText: '',\r\n                caption: '10, Chambers St'\r\n            },\r\n            {\r\n                src: '/assets/images/54Montague2.jpg',\r\n                altText: '',\r\n                caption: '10, Chambers St'\r\n            },\r\n            {\r\n                src: '/assets/images/54Montague3.jpg',\r\n                altText: '',\r\n                caption: '10, Chambers St'\r\n            }]\r\n        },\r\n        {\r\n            id: 6,\r\n            name: '332, Broadway',\r\n            zipCode: '10007',\r\n            image: '/assets/images/332Broadway.jpg',\r\n            category: 'Prime',\r\n            exposureAmount: '40000',\r\n            price: '2200',\r\n            featured: false,\r\n            distance: 1,\r\n            description: 'miles away from',\r\n            details: [\r\n                '50-person capacity',\r\n                '2 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/332Broadway.jpg',\r\n                altText: '',\r\n                caption: '332, Broadway'\r\n            },\r\n            {\r\n                src: '/assets/images/332Broadway2.jpg',\r\n                altText: '',\r\n                caption: '332, Broadway'\r\n            },\r\n            {\r\n                src: '/assets/images/332Broadway3.jpg',\r\n                altText: '',\r\n                caption: '332, Broadway'\r\n            }]\r\n        },\r\n        {\r\n            id: 7,\r\n            name: '79, Church St',\r\n            zipCode: '10007',\r\n            image: '/assets/images/92Broad.jpg',\r\n            category: 'Basic',\r\n            exposureAmount: '35000',\r\n            price: '2000',\r\n            featured: true,\r\n            distance: 0.5,\r\n            description: 'miles away from',\r\n            details: [\r\n                '35-person capacity',\r\n                '2 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/92Broad.jpg',\r\n                altText: '',\r\n                caption: '79, Church St'\r\n            },\r\n            {\r\n                src: '/assets/images/92Broad2.jpg',\r\n                altText: '',\r\n                caption: '79, Church St'\r\n            },\r\n            {\r\n                src: '/assets/images/92Broad3.jpg',\r\n                altText: '',\r\n                caption: '79, Church St'\r\n            }]\r\n        },\r\n        {\r\n            id: 8,\r\n            name: '253, Sacramento St',\r\n            zipCode: '94111',\r\n            image: '/assets/images/92Broad.jpg',\r\n            category: 'Basic',\r\n            exposureAmount: '40000',\r\n            price: '2150',\r\n            featured: true,\r\n            distance: 0.5,\r\n            description: 'miles away from',\r\n            details: [\r\n                '50-person capacity',\r\n                '4 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/92Broad.jpg',\r\n                altText: '',\r\n                caption: '253, Sacramento St'\r\n            },\r\n            {\r\n                src: '/assets/images/92Broad2.jpg',\r\n                altText: '',\r\n                caption: '253, Sacramento St'\r\n            },\r\n            {\r\n                src: '/assets/images/92Broad3.jpg',\r\n                altText: '',\r\n                caption: '253, Sacramento St'\r\n            }]\r\n        },\r\n        {\r\n            id: 9,\r\n            name: '1600, Montgomery St',\r\n            zipCode: '94111',\r\n            image: '/assets/images/332Broadway.jpg',\r\n            category: 'Prime',\r\n            exposureAmount: '25000',\r\n            price: '1600',\r\n            featured: false,\r\n            distance: 1,\r\n            description: 'miles away from',\r\n            details: [\r\n                '18-person capacity',\r\n                '2 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/332Broadway.jpg',\r\n                altText: '',\r\n                caption: '1600, Montgomery St'\r\n            },\r\n            {\r\n                src: '/assets/images/332Broadway2.jpg',\r\n                altText: '',\r\n                caption: '1600, Montgomery St'\r\n            },\r\n            {\r\n                src: '/assets/images/332Broadway3.jpg',\r\n                altText: '',\r\n                caption: '1600, Montgomery St'\r\n            }]\r\n        },\r\n        {\r\n            id: 10,\r\n            name: '12345, Battery St',\r\n            zipCode: '94111',\r\n            image: '/assets/images/54Montague.jpg',\r\n            category: 'Basic',\r\n            exposureAmount: '20000',\r\n            price: '1500',\r\n            featured: false,\r\n            distance: 3,\r\n            description: 'miles away from',\r\n            details: [\r\n                '35-person capacity',\r\n                '2 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/54Montague.jpg',\r\n                altText: '',\r\n                caption: '12345, Battery St'\r\n            },\r\n            {\r\n                src: '/assets/images/54Montague2.jpg',\r\n                altText: '',\r\n                caption: '12345, Battery St'\r\n            },\r\n            {\r\n                src: '/assets/images/54Montague3.jpg',\r\n                altText: '',\r\n                caption: '12345, Battery St'\r\n            }]\r\n        },\r\n        {\r\n            id: 11,\r\n            name: '630, Sacramento St',\r\n            zipCode: '94111',\r\n            image: '/assets/images/LibertyPlaza.jpg',\r\n            category: 'Prime',\r\n            exposureAmount: '30000',\r\n            price: '2000',\r\n            featured: false,\r\n            distance: 5,\r\n            description: 'miles away from',\r\n            details: [\r\n                '12-person capacity',\r\n                '1 floor fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/LibertyPlaza.jpg',\r\n                altText: '',\r\n                caption: '630, Sacramento St'\r\n            },\r\n            {\r\n                src: '/assets/images/LibertyPlaza2.jpg',\r\n                altText: '',\r\n                caption: '630, Sacramento St'\r\n            },\r\n            {\r\n                src: '/assets/images/LibertyPlaza3.jpg',\r\n                altText: '',\r\n                caption: '630, Sacramento St'\r\n            }]\r\n        },\r\n        {\r\n            id: 12,\r\n            name: '75, Monroe St',\r\n            zipCode: '60603',\r\n            image: '/assets/images/LibertyPlaza.jpg',\r\n            category: 'Prime',\r\n            exposureAmount: '15000',\r\n            price: '1100',\r\n            featured: false,\r\n            distance: 5,\r\n            description: 'miles away from',\r\n            details: [\r\n                '12-person capacity',\r\n                '1 floor fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/LibertyPlaza.jpg',\r\n                altText: '',\r\n                caption: '75, Monroe St'\r\n            },\r\n            {\r\n                src: '/assets/images/LibertyPlaza2.jpg',\r\n                altText: '',\r\n                caption: '75, Monroe St'\r\n            },\r\n            {\r\n                src: '/assets/images/LibertyPlaza3.jpg',\r\n                altText: '',\r\n                caption: '75, Monroe St'\r\n            }]\r\n        },\r\n        {\r\n            id: 13,\r\n            name: '190, Adams St #700',\r\n            zipCode: '60603',\r\n            image: '/assets/images/54Montague.jpg',\r\n            category: 'Basic',\r\n            exposureAmount: '10000',\r\n            price: '1000',\r\n            featured: false,\r\n            distance: 3,\r\n            description: 'miles away from',\r\n            details: [\r\n                '30-person capacity',\r\n                '3 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/54Montague.jpg',\r\n                altText: '',\r\n                caption: '190, Adams St #700'\r\n            },\r\n            {\r\n                src: '/assets/images/54Montague2.jpg',\r\n                altText: '',\r\n                caption: '190, Adams St #700'\r\n            },\r\n            {\r\n                src: '/assets/images/54Montague3.jpg',\r\n                altText: '',\r\n                caption: '190, Adams St #700'\r\n            }]\r\n        },\r\n        {\r\n            id: 14,\r\n            name: '25, La Salle St #530',\r\n            zipCode: '60603',\r\n            image: '/assets/images/332Broadway.jpg',\r\n            category: 'Prime',\r\n            exposureAmount: '15000',\r\n            price: '1200',\r\n            featured: false,\r\n            distance: 1,\r\n            description: 'miles away from',\r\n            details: [\r\n                '10-person capacity',\r\n                '1 floor fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/332Broadway.jpg',\r\n                altText: '',\r\n                caption: '25, La Salle St #530'\r\n            },\r\n            {\r\n                src: '/assets/images/332Broadway2.jpg',\r\n                altText: '',\r\n                caption: '25, La Salle St #530'\r\n            },\r\n            {\r\n                src: '/assets/images/332Broadway3.jpg',\r\n                altText: '',\r\n                caption: '25, La Salle St #530'\r\n            }]\r\n        },\r\n        {\r\n            id: 15,\r\n            name: '126, Clark St',\r\n            zipCode: '60603',\r\n            image: '/assets/images/92Broad.jpg',\r\n            category: 'Basic',\r\n            exposureAmount: '10000',\r\n            price: '950',\r\n            featured: true,\r\n            distance: 0.5,\r\n            description: 'miles away from',\r\n            details: [\r\n                '30-person capacity',\r\n                '3 floors fully-furnished',\r\n                'Package handling',\r\n                'Printing Facilities'\r\n            ],\r\n            facilities: [\r\n                \"Postal Office\",\r\n                \"Fire Station\",\r\n                '24- hours access'\r\n            ],\r\n            workImages: [{\r\n                src: '/assets/images/92Broad.jpg',\r\n                altText: '',\r\n                caption: '126, Clark St'\r\n            },\r\n            {\r\n                src: '/assets/images/92Broad2.jpg',\r\n                altText: '',\r\n                caption: '126, Clark St'\r\n            },\r\n            {\r\n                src: '/assets/images/92Broad3.jpg',\r\n                altText: '',\r\n                caption: '126, Clark St'\r\n            }]\r\n        },\r\n    ];","import React from 'react'\r\nimport { Route, Redirect } from 'react-router';\r\n\r\nexport const authentication = {\r\n    isLoggedIn: false,\r\n    onAuthentication() {\r\n        this.isLoggedIn = true\r\n    },\r\n    getLoginStatus() {\r\n        return this.isLoggedIn;\r\n    }\r\n}\r\nconst SecuredRoute = ({ component: Component, ...rest }) => {\r\n\r\n    return (\r\n        <Route {...rest} render={\r\n            props => authentication.getLoginStatus() ? (\r\n                <Component {...props} {...rest} />) :\r\n                <Redirect to={{ pathname: '/' }}></Redirect>}></Route>\r\n    )\r\n}\r\n\r\nexport default SecuredRoute\r\n","import React, { useState } from 'react';\r\nimport { UncontrolledCarousel, Progress, Card, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst WorkspaceDetails = (props) => {\r\n    const [popState, setPopState] = useState(false);\r\n    let togglePopUp = () => setPopState(!popState);\r\n\r\n\r\n\r\n    const selectedWorkspace = props.workspace.workImages\r\n    let details = props.workspace.details\r\n    let fac = props.workspace.facilities\r\n    console.log(\"Details ---> \" + details)\r\n    let showDetails = []\r\n    let showFac = []\r\n    for (let i = 0; i < details.length; i++) {\r\n        showDetails.push(\r\n\r\n            <>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item list-group-item-action\">{details[i]}\r\n                    </li>\r\n                </ul>\r\n            </>\r\n\r\n        )\r\n    }\r\n    for (let i = 0; i < fac.length; i++) {\r\n        showFac.push(\r\n            <>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item list-group-item-action\">{fac[i]}\r\n                    </li>\r\n                </ul>\r\n            </>\r\n\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"text-center\"></div>\r\n                        <Progress animated={true} striped color=\"primary\" value=\"25\">25%</Progress>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container mt-2 mb-2\">\r\n                {/* <div className=\"row\">\r\n                    <h1 class=\"col-sm-12 col-12\">{props.workspace.name}</h1>\r\n                </div> */}\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"carousel slide\">\r\n                            <div class=\"carousel-inner\">\r\n                                <UncontrolledCarousel items={selectedWorkspace} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-12\">\r\n                        <p id=\"tour\" className=\"lead mt-1\" style={{ textAlign: 'center' }}>Take a virtual tour <a href=\"#tour\">here</a> </p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"jumbotron\">\r\n                <div className=\"container\">\r\n\r\n                    <Card body>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-5 col-12\">\r\n                                <h4>Office details:</h4>\r\n\r\n                                <div>\r\n\r\n                                    {showDetails}\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"offset-sm-1 col-sm-6 col-12\">\r\n                                <h4>Nearby Facilities:</h4>\r\n                                <div>\r\n\r\n                                    {showFac}\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12\">\r\n\r\n                                <p style={{ textAlign: 'center' }}><mark><em>Compliant with <strong>COVID</strong> safety norms</em></mark></p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12 col-12\">\r\n                                <p id=\"special\"><em>Contact us <a href='#contactJohnDoe' id='contactJohn' onClick={togglePopUp}>here</a> to enquire about special facilities</em></p>\r\n                                <Link style={{ textDecoration: \"none\" }} to=\"/personalinfo\"><button onClick={props.getSelectedWorkspaceId} className=\"btn btn-block btn-primary mt-2\">Lease This Workspace</button></Link>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n\r\n                    <Popover placement=\"top-start\" isOpen={popState} toggle={togglePopUp} target=\"contactJohn\">\r\n                        <PopoverHeader className = \"bg-dark text-white\">John Doe</PopoverHeader>\r\n                        <PopoverBody className = \"bg-light\"><a href=\"tel:+91987654321\">987654321</a></PopoverBody>\r\n                    </Popover>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default WorkspaceDetails;","import React from 'react'\r\nimport { CardHeader, CardBody, Form, FormGroup, Input, Label, Progress, Card, CardTitle, FormFeedback } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// function uploadFile() {\r\n//     document.getElementById('scanBtn').addEventListener(\"click\", function() {\r\n//         document.getElementById('scanFile').click();\r\n//     });\r\n\r\n// }\r\n\r\n// const PopulateDetails = (updatePersonDetails, deletePersonDetails) => {\r\n//     updatePersonDetails();\r\n//     let business = document.getElementById('businessName')\r\n//     let personEmail = document.getElementById('personEmail')\r\n//     let personZip = document.getElementById('personZipCode')\r\n//     let scan = document.getElementById('scan')\r\n//     let or = document.getElementById('or')\r\n//     let edit = document.getElementById('edit');\r\n//     let clear = document.getElementById('clear');\r\n//     business.disabled = true;\r\n//     console.log(business.disabled)\r\n//     personEmail.disabled = true;\r\n//     personZip.disabled = true;\r\n//     scan.style.display = 'none';\r\n//     or.style.display = 'none';\r\n//     edit.style.display = 'block';\r\n//     clear.style.display = 'block';\r\n\r\n//     edit.addEventListener('click', () => {\r\n//         business.disabled = false;\r\n//         personEmail.disabled = false;\r\n//         personZip.disabled = false;\r\n\r\n//     })\r\n\r\n//     clear.addEventListener('click', () => {\r\n//         deletePersonDetails();\r\n//         edit.style.display = 'none';\r\n//         clear.style.display = 'none';\r\n//         scan.style.display = 'block';\r\n//         or.style.display = 'block';\r\n//         business.disabled = false;\r\n//         personEmail.disabled = false;\r\n//         personZip.disabled = false;\r\n//     })\r\n\r\n\r\n\r\n// }\r\n\r\nconst Validate = (businessName, personEmail, personZipCode, touchedPersonEmail, businessNameTouched, personZipCodeTouched, personLocation) => {\r\n\r\n    const errors = {\r\n        businessName: '',\r\n        personEmail: '',\r\n        personZipCode: '',\r\n        personLocation: ''\r\n    }\r\n    if (businessName.length < 3) {\r\n        errors.businessName = \"Business name length should be more than 3\"\r\n    }\r\n    const reg = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/\r\n    if(personEmail === ''){\r\n        errors.personEmail = \"Please enter the email\"\r\n    }\r\n    else if (!reg.test(personEmail)) {\r\n        errors.personEmail = \"Please enter email in valid format\"\r\n    }\r\n    const regZip = /^([0-9]{5})(?:[-\\s]*([0-9]{4}))?$/;\r\n    if (!regZip.test(personZipCode)) {\r\n        errors.personZipCode = \"Please enter the zip code in the US zip code format\"\r\n    }\r\n    else if (personZipCode === '') {\r\n        errors.personZipCode = \"Please enter the zip code\"\r\n    }\r\n    if (personLocation === '') {\r\n        errors.personLocation = 'Enter the zipCode to get the location'\r\n    }\r\n    if (personZipCode.length >= 5 && personLocation === '') {\r\n        errors.personLocation = 'Incorrect ZipCode or This ZipCode does not exists in our database'\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nlet handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n}\r\nconst PersonalInfo = (props) => {\r\n    //     let fileName = '';\r\n    //    if(props.selectedFile.name!=null){\r\n    //         fileName = props.selectedFile.name\r\n    //    }\r\n    //    else{\r\n    //        fileName = ''\r\n    //    }\r\n\r\n    const errors = Validate(props.businessName, props.personEmail, props.personZipCode, props.personEmailTouched, props.businessNameTouched, props.personZipCodeTouched, props.personLocation);\r\n    let isDisabled\r\n    isDisabled = true;\r\n    isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    // console.log(\"is disabled ---> \"+isDisabled)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"text-center\"></div>\r\n                        <Progress animated={true} striped color=\"primary\" value=\"38\">38%</Progress>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"jumbotron py-3 mt-2\">\r\n                <div className=\"container personalDetails py-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"mx-auto col-sm-6 col-12\">\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    <CardTitle className=\"lead\">Let us get to know you...</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form onSubmit={handleSubmit} key={'ankuu'}>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"businessName\" className=\"col-sm-4 col-form-label form-control-label required\">Business Name</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input key=\"business\" type=\"text\" name=\"businessName\" id=\"businessName\"\r\n                                                    valid={errors.businessName === ''}\r\n                                                    invalid={errors.businessName !== ''}\r\n                                                    onBlur={props.handleBlur('businessName')}\r\n                                                    onChange={props.handInputChange}\r\n                                                    value={props.businessName}\r\n                                                />\r\n                                                <FormFeedback>{errors.businessName}</FormFeedback>\r\n                                            </div>\r\n\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personEmail\" className=\"col-sm-4 col-form-label form-control-label required\">Email</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input key=\"personEmail\" type=\"email\" name=\"personEmail\" id=\"personEmail\"\r\n                                                    valid={errors.personEmail === ''}\r\n                                                    invalid={errors.personEmail !== ''}\r\n                                                    onChange={props.handInputChange}\r\n                                                    onBlur={props.handleBlur('personEmail')}\r\n                                                    value={props.personEmail} />\r\n                                                <FormFeedback>{errors.personEmail}</FormFeedback>\r\n                                            </div>\r\n\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personZipCode\" className=\"col-sm-4 col-form-label form-control-label required\">Zip Code</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input id=\"personZipCode\" type=\"text\" name=\"personZipCode\"\r\n                                                    valid={errors.personZipCode === ''}\r\n                                                    invalid={errors.personZipCode !== ''}\r\n                                                    onBlur={props.handleBlur('personZipCode')}\r\n                                                    onChange={props.handInputChange}\r\n                                                    value={props.personZipCode} />\r\n                                                <FormFeedback>{errors.personZipCode}</FormFeedback>\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personLocation\" className=\"col-sm-4 col-form-label form-control-label required\">Location</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input disabled={true} id=\"personLocation\" type=\"text\" name=\"personLocation\"\r\n                                                    valid={errors.personLocation === ''}\r\n                                                    invalid={errors.personLocation !== ''}\r\n                                                    value={props.personLocation} />\r\n                                                <FormFeedback>{errors.personLocation}</FormFeedback>\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n                                            <div className=\"col-sm-4 mt-2\" id=\"edit\" style={{ display: 'none' }}>\r\n                                                <button className=\"btn btn-dark\">Edit Scanned Details</button>\r\n                                            </div>\r\n                                            <div className=\"offset-sm-3 col-sm-4 mt-2\" id=\"clear\" style={{ display: 'none' }}>\r\n                                                <button className=\"btn btn-secondary\">Delete Scanned Card</button>\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        <h3 id=\"or\" style={{ textAlign: 'center' }} className=\"mt-4\">OR</h3>\r\n                                        {/* <div id=\"scan\" className=\"card mt-4  bg-dark\">\r\n                                        <div className=\"card-body text-center\">\r\n                                            <input id=\"scanFile\" type=\"file\" style = {{display : 'none'}} />\r\n                                                <button onClick = {uploadFile} className = \"btn btn-dark\" id=\"scanBtn\">Scan a business card</button>\r\n                                                </div>\r\n                                        </div> */}\r\n\r\n                                        <div id=\"scan\" className=\"card mt-4  bg-warning\">\r\n                                            <div className=\"card-body text-center\">\r\n\r\n                                                <input type=\"file\" id=\"files\" style={{ display: 'none' }} onChange={props.onFileChange} />\r\n                                                <label htmlFor=\"files\" style={{ cursor: 'pointer', fontWeight: 'bold' }}>Scan a business card</label>\r\n                                                {/* <button className = \"btn btn-dark\" onClick={props.onFileUpload}>\r\n                                                Upload!\r\n                                            </button> */}\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        {/* <div>\r\n                                            {fileName}\r\n                                        </div> */}\r\n                                        {/* <div id=\"scan\" style={{ cursor: 'pointer' }} className=\"card bg-warning mt-4\">\r\n                                        <div className=\"card-body text-center\">\r\n                                            <div className=\"card-text\">\r\n                                                <input type = \"file\" onChange={props.onFileChange}/>\r\n                                                Scan a business card</div>\r\n                                        </div>\r\n                                    </div> */}\r\n                                        <FormGroup row>\r\n                                            <div className=\"col-sm-12 col-12 mt-3\">\r\n                                                <Link style={{ textDecoration: 'none' }} to={isDisabled?'#':'confirmperson'}><button className=\"btn btn-block btn-primary\" disabled={isDisabled}>Next <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></button></Link>\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                    </Form>\r\n\r\n\r\n\r\n\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonalInfo\r\n","import React from 'react'\r\nimport { CardHeader, CardBody, Form, FormGroup, Input, Label, Progress, Card, CardTitle, FormFeedback } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nlet handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n}\r\n\r\nconst Validate = (personName, personAddress, personPhone, businessName) => {\r\n\r\n    const errors = {\r\n        personName: '',\r\n        personAddress: '',\r\n        personPhone: '',\r\n        businessName: ''\r\n    }\r\n    if (personName.length < 3) {\r\n        errors.personName = \"Person name length should be more than 3\"\r\n    }\r\n\r\n    if (personAddress.length < 5) {\r\n        errors.personAddress = \"Address length should be more than 5\"\r\n    }\r\n    if (personPhone.length === 0) {\r\n        errors.personPhone = \"Please enter your phone number\"\r\n    }\r\n\r\n    if (businessName.length < 3) {\r\n        errors.businessName = \"Business name length should be more than 3\"\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n\r\nexport default function ConfirmPerson(props) {\r\n    const errors = Validate(props.personName, props.personAddress, props.personPhone, props.businessName);\r\n    let isDisabled\r\n    isDisabled = true;\r\n    isDisabled = Object.keys(errors).some(x => errors[x]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"text-center\"></div>\r\n                        <Progress animated={true} striped color=\"primary\" value=\"50\">50%</Progress>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"jumbotron py-3 mt-2\">\r\n                <div className=\"container personalDetails py-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"mx-auto col-sm-6 col-12\">\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    <CardTitle className=\"lead\">Is this you?</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form onSubmit={handleSubmit}>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"businessName\" className=\"col-sm-4 col-form-label form-control-label required\">Business Name</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input type=\"text\" name=\"businessName\" id=\"businessName\"\r\n                                                    valid={errors.businessName === ''}\r\n                                                    invalid={errors.businessName !== ''}\r\n                                                    onBlur={props.handleBlur('businessName')}\r\n                                                    onChange={props.handInputChange}\r\n                                                    value={props.businessName}\r\n\r\n                                                />\r\n                                                 <FormFeedback>{errors.businessName}</FormFeedback>\r\n                                            </div>\r\n                                           \r\n\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personName\" className=\"col-sm-4 col-form-label form-control-label required\">Owner's Name</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input type=\"text\" name=\"personName\" id=\"personName\"\r\n                                                    valid={errors.personName === ''}\r\n                                                    invalid={errors.personName !== ''}\r\n                                                    value={props.personName}\r\n                                                    onChange={props.handInputChange}\r\n                                                    onBlur={props.handleBlur('personName')}\r\n                                                />\r\n                                                <FormFeedback>{errors.personName}</FormFeedback>\r\n                                            </div>\r\n\r\n\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personAddress\" className=\"col-sm-4 col-form-label form-control-label required\">Address</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input type=\"text\" name=\"personAddress\" id=\"personAddress\"\r\n                                                    valid={errors.personAddress === ''}\r\n                                                    invalid={errors.personAddress !== ''}\r\n                                                    value={props.personAddress}\r\n                                                    onChange={props.handInputChange}\r\n                                                    onBlur={props.handleBlur('personAddress')}\r\n                                                />\r\n                                                <FormFeedback>{errors.personAddress}</FormFeedback>\r\n                                            </div>\r\n\r\n\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personCity\" className=\"col-sm-4 col-form-label form-control-label required\">City</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input type=\"text\" name=\"personCity\" id=\"personCity\"\r\n                                                    value={props.personCity}\r\n                                                    onChange={props.handInputChange}\r\n                                                    onBlur={props.handleBlur('personCity')} />\r\n                                            </div>\r\n                                            {/* <FormFeedback>{errors.zipCode}</FormFeedback> */}\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personState\" className=\"col-sm-4 col-form-label form-control-label required\">State</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input type=\"text\" name=\"personState\" id=\"personState\"\r\n                                                    value={props.personState}\r\n                                                    onChange={props.handInputChange}\r\n                                                    onBlur={props.handleBlur('personState')} />\r\n                                            </div>\r\n                                            {/* <FormFeedback>{errors.zipCode}</FormFeedback> */}\r\n\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personEmail\" className=\"col-sm-4 col-form-label form-control-label required\">Email</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input key=\"personEmail\" type=\"email\" name=\"personEmail\" id=\"personEmail\"\r\n                                                    value={props.personEmail}\r\n                                                    onChange={props.handInputChange}\r\n                                                    onBlur={props.handleBlur('personEmail')} />\r\n                                            </div>\r\n                                            {/* <FormFeedback>{errors.zipCode}</FormFeedback> */}\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"personPhone\" className=\"col-sm-4 col-form-label form-control-label required\">Phone Number</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input id=\"personPhone\" type=\"text\" name=\"personPhone\"\r\n                                                    valid={errors.personPhone === ''}\r\n                                                    invalid={errors.personPhone !== ''}\r\n                                                    value={props.personPhone}\r\n                                                    onChange={props.handInputChange}\r\n                                                    onBlur={props.handleBlur('personPhone')}\r\n                                                />\r\n                                                <FormFeedback>{errors.personPhone}</FormFeedback>\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"industry\" className=\"col-sm-4 col-form-label form-control-label required\">Industry</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <select className=\"form-control\" name=\"industry\" id=\"industry\">\r\n                                                    <option value=\"7311\">Advertising agencies</option>\r\n                                                    <option value=\"7372\">Prepackaged Software</option>\r\n                                                    <option value=\"8742\">Management Consulting Services</option>\r\n                                                    <option value=\"8743\">Public Relations Services</option>\r\n                                                    <option value=\"7363\">Help Supply Services</option>\r\n                                                </select>\r\n                                            </div>\r\n\r\n                                            {/* <FormFeedback>{errors.zipCode}</FormFeedback> */}\r\n\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup row>\r\n                                            <div className=\"col-sm-12 col-12 mt-3\">\r\n                                                <Link style={{ textDecoration: 'none' }} to={isDisabled ? '#' : 'leaseDuration'}><button className=\"btn btn-block btn-primary\" disabled={isDisabled}>Next <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></button></Link>\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { CardHeader, CardBody, CardDeck, Progress, Card, CardTitle, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nlet handleSubmit = (event) => {\r\n    event.stopPropagation();\r\n\r\n}\r\n\r\n\r\n\r\nlet AskInsurance = (duration, updateLeaseDuration, price, updateClickCount) => {\r\n\r\n    let insurancePart\r\n    insurancePart = document.getElementById('insurance');\r\n    insurancePart.style.display = 'block'\r\n    insurancePart.scrollIntoView();\r\n    updateLeaseDuration(duration, price)\r\n    let monthly = document.getElementById('monthly');\r\n    let sixMonths = document.getElementById('sixMonths');\r\n    let twelveMonths = document.getElementById('twelveMonths');\r\n    let yesValue = document.getElementById('yes');\r\n    let noValue = document.getElementById('no');\r\n    let oneMonth = document.getElementById('oneButton')\r\n    let sixMonth = document.getElementById('sixButton')\r\n    let twelveMonth = document.getElementById('twelveButton')\r\n    if (duration === '1') {\r\n        oneMonth.innerText = 'CURRENT'\r\n        sixMonth.innerText = 'SELECT'\r\n        twelveMonth.innerText = 'SELECT'\r\n        oneMonth.disabled = true;\r\n        sixMonth.disabled = false;\r\n        twelveMonth.disabled = false\r\n        sixMonth.removeAttribute(\"style\");\r\n        twelveMonth.removeAttribute(\"style\")\r\n        if (oneMonth.disabled) {\r\n            oneMonth.style.fontWeight = '600'\r\n            oneMonth.style.color = 'black'\r\n            oneMonth.style.borderColor = '#aaa'\r\n            oneMonth.style.background = 'transparent'\r\n        }\r\n\r\n        monthly.style.webkitTransition = '0.3s'\r\n        monthly.style.transition = '0.3s'\r\n        monthly.style.boxShadow = '0 16px 24px 0 rgba(0,0,0,0.2)'\r\n        sixMonths.style.boxShadow = 'none'\r\n        twelveMonths.style.boxShadow = 'none'\r\n        if (yesValue.checked || noValue.checked) {\r\n            yesValue.checked = false;\r\n            noValue.checked = false;\r\n            updateClickCount();\r\n        }\r\n\r\n\r\n    }\r\n    else if (duration === '6') {\r\n        oneMonth.innerText = 'SELECT'\r\n        sixMonth.innerText = 'CURRENT'\r\n        twelveMonth.innerText = 'SELECT'\r\n        oneMonth.disabled = false;\r\n        sixMonth.disabled = true;\r\n        twelveMonth.disabled = false;\r\n        oneMonth.removeAttribute(\"style\");\r\n        twelveMonth.removeAttribute(\"style\")\r\n        if (sixMonth.disabled) {\r\n            sixMonth.style.fontWeight = '600'\r\n            sixMonth.style.color = 'black'\r\n            sixMonth.style.borderColor = '#aaa'\r\n            sixMonth.style.background = 'transparent'\r\n        }\r\n\r\n\r\n        sixMonths.style.webkitTransition = '0.3s'\r\n        sixMonths.style.transition = '0.3s'\r\n        sixMonths.style.boxShadow = '0 16px 24px 0 rgba(0,0,0,0.2)'\r\n        twelveMonths.style.boxShadow = 'none'\r\n        monthly.style.boxShadow = 'none'\r\n        if (yesValue.checked || noValue.checked) {\r\n            yesValue.checked = false;\r\n            noValue.checked = false\r\n            updateClickCount()\r\n        }\r\n    }\r\n    else if (duration === '12') {\r\n        oneMonth.innerHTML = 'SELECT'\r\n        sixMonth.innerHTML = 'SELECT'\r\n        twelveMonth.innerHTML = 'CURRENT'\r\n        oneMonth.disabled = false;\r\n        sixMonth.disabled = false;\r\n        twelveMonth.disabled = true;\r\n        oneMonth.removeAttribute(\"style\");\r\n        sixMonth.removeAttribute(\"style\")\r\n        if (twelveMonth.disabled) {\r\n            twelveMonth.style.fontWeight = '600'\r\n            twelveMonth.style.color = 'black'\r\n            twelveMonth.style.borderColor = '#aaa'\r\n            twelveMonth.style.background = 'transparent'\r\n        }\r\n        twelveMonths.style.webkitTransition = '0.3s'\r\n        twelveMonths.style.transition = '0.3s'\r\n        twelveMonths.style.boxShadow = '0px 16px 24px 0 rgba(0,0,0,0.2)'\r\n        sixMonths.style.boxShadow = 'none'\r\n        monthly.style.boxShadow = 'none'\r\n        if (yesValue.checked || noValue.checked) {\r\n            yesValue.checked = false;\r\n            noValue.checked = false\r\n            updateClickCount()\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst LeaseTimePeriod = (props) => {\r\n    // const [radioValue, setValue] = useState(0);\r\n    useEffect(() => {\r\n        if (props.selectedLeaseDuration === 0 ||props.selectedLeaseDuration === '') {\r\n            let insurancePart = document.getElementById('insurance');\r\n            insurancePart.style.display = 'none'\r\n            let jumbo = document.getElementById('jumbo');\r\n            jumbo.style.marginBottom = '7%'\r\n        }\r\n\r\n        window.onpopstate = e => {\r\n            \r\n            props.updateClickCount();\r\n            let insurancePart = document.getElementById('insurance');\r\n            if(insurancePart!==null){\r\n            insurancePart.style.display = 'none'\r\n            }\r\n            let jumbo = document.getElementById('jumbo');\r\n            if(jumbo!==null){\r\n            jumbo.style.marginBottom = '7%'\r\n            }\r\n        }\r\n        \r\n\r\n    });\r\n\r\n    let onChange = (e) => {\r\n        props.updateRadioState(e)\r\n        console.log(e)\r\n    }\r\n\r\n    let workspacePrice\r\n    let workspaceFac\r\n    let facilities = []\r\n    for (let i = 0; i < props.workspace.length; i++) {\r\n        if (props.workspace[i].id === parseInt(props.selectedWorkspaceId)) {\r\n            // alert(\"Got it\")\r\n            workspacePrice = props.workspace[i].price\r\n            workspaceFac = props.workspace[i].details\r\n        }\r\n    }\r\n    for (let i = 0; i < workspaceFac.length; i++) {\r\n        facilities.push(\r\n            <>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item list-group-item-action\">{workspaceFac[i]}\r\n                    </li>\r\n\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n    console.log(\"workspacePrice ---->\" + workspacePrice)\r\n    // console.log(\"workspaceFac ---->\" + workspaceFacAvail)\r\n    let halfYearlyPrice = parseInt(workspacePrice) - 10;\r\n    let AnnualPrice = parseInt(workspacePrice) - 30;\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"text-center\"></div>\r\n                        <Progress animated={true} striped color=\"primary\" value=\"63\">63%</Progress>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"container py-3\" id=\"jumbo\">\r\n                <div className=\"row\">\r\n                    <p className=\"lead\"><b>Hello, {props.businessName}</b></p>\r\n                </div>\r\n                <div className=\"row py-3\">\r\n                    <p className=\"lead ml-3\">For how long would you like to lease the workspace?</p>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"mx-auto col-sm-12 col-12\">\r\n                        <CardDeck>\r\n                            <Card className=\"price\" id=\"monthly\">\r\n\r\n                                <CardHeader className=\"bg-dark text-white\">\r\n                                    <CardTitle className=\"text-center\">\r\n                                        Monthly\r\n                                  </CardTitle>\r\n                                </CardHeader>\r\n\r\n                                <CardBody className=\"text-center jumbotron\">\r\n\r\n                                    <h2 className=\"font-weight-normal\"><sup>$</sup>{workspacePrice}<sub><small className=\"text-muted\">/30 days</small></sub></h2>\r\n                                    <h4 className=\"mt-5 lead\">Office Facilities:</h4>\r\n                                    <div className=\"mt-3\">\r\n                                        {facilities}\r\n                                    </div>\r\n                                    <button id=\"oneButton\" className=\"btn btn-dark btn-block mt-5\" onClick={() => AskInsurance('1', props.updateLeaseDuration, workspacePrice, props.updateClickCount)}>SELECT</button>\r\n\r\n                                </CardBody>\r\n\r\n                            </Card>\r\n\r\n                            <Card className=\"price\" id=\"sixMonths\">\r\n                                <CardHeader className=\"bg-dark text-white\">\r\n                                    <CardTitle className=\"text-center\">\r\n                                        Half-Yearly (6-Months)\r\n                                  </CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody className=\"text-center jumbotron\">\r\n                                    <h2 className=\"font-weight-normal\"><sup>$</sup>{halfYearlyPrice}<sub><small className=\"text-muted\">/30 days</small></sub></h2>\r\n                                    <h4 className=\"mt-5 lead\">Office Facilities:</h4>\r\n                                    <div className=\"mt-3\">\r\n                                        {facilities}\r\n                                    </div>\r\n                                    <button id=\"sixButton\" className=\"btn btn-dark btn-block mt-5\" onClick={() => AskInsurance('6', props.updateLeaseDuration, halfYearlyPrice, props.updateClickCount)}>SELECT</button>\r\n                                </CardBody>\r\n                            </Card>\r\n                            <Card className=\"price\" id=\"twelveMonths\">\r\n                                <CardHeader className=\"bg-dark text-white\">\r\n                                    <CardTitle className=\"text-center\">\r\n                                        Annually (12-Months)\r\n                                  </CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody className=\"text-center jumbotron\">\r\n                                    <h2 className=\"font-weight-normal\"><sup>$</sup>{AnnualPrice}<sub><small className=\"text-muted\">/30 days</small></sub></h2>\r\n                                    <h4 className=\"mt-5 lead\">Office Facilities:</h4>\r\n                                    <div className=\"mt-3\">\r\n                                        {facilities}\r\n                                    </div>\r\n                                    <button id=\"twelveButton\" className=\"btn btn-dark btn-block mt-5\" onClick={() => AskInsurance('12', props.updateLeaseDuration, AnnualPrice, props.updateClickCount)}>SELECT</button>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </CardDeck>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* <div className=\"jumbotron py-3 mt-2\" id = \"jumbo\"> */}\r\n            <div className=\"container\" id=\"insurance\">\r\n                <p id=\"knowMore\" className=\"lead\">Add general liability insurance for your  business? (<a href='#knowMore'><i>Know more</i></a>)</p>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <FormGroup check>\r\n\r\n                        <div className=\"col-sm-12\">\r\n                            <Label check>\r\n\r\n                                <Input type=\"radio\" name=\"radio1\" id=\"yes\" value=\"10\" onClick={(e) => onChange(e.target.value)} />\r\n                                    Yes, add policy for ${props.setPremiumAmount}<sub>/mo</sub>\r\n\r\n                            </Label>\r\n                        </div>\r\n\r\n\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n\r\n                        <div className=\"col-sm-12\">\r\n                            <Label check>\r\n\r\n                                <Input type=\"radio\" name=\"radio1\" id=\"no\" value=\"0\" onClick={(e) => onChange(e.target.value)} />\r\n                                No\r\n                            </Label>\r\n                        </div>\r\n\r\n\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <div className=\"col-sm-12 col-12 mt-3\">\r\n                            <Link style={{ textDecoration: 'none' }} to='payment'><button className=\"btn btn-dark btn-block mt-5\">Proceed to Payment <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></button></Link>\r\n                        </div>\r\n                    </FormGroup>\r\n                </Form>\r\n            </div>\r\n            {/* </div> */}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LeaseTimePeriod","import React, { useEffect, useState } from 'react'\r\nimport { CardHeader, CardBody, Form, FormGroup, Input, Label, Progress, Card, CardTitle } from 'reactstrap';\r\nimport history from './history';\r\nimport Loader from 'react-promise-loader';\r\n\r\n\r\n\r\nlet handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n}\r\n\r\n\r\n\r\nconst Payment = (props) => {\r\n    const [loaderStatus, setLoaderStatus] = useState(false);\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        window.onpopstate = e => {\r\n            props.updateClickCount();\r\n            let insurancePart = document.getElementById('insurance');\r\n            if(insurancePart!==null){\r\n            insurancePart.style.display = 'none'\r\n            }\r\n            let jumbo = document.getElementById('jumbo');\r\n            if(jumbo!==null){\r\n            jumbo.style.marginBottom = '7%'\r\n            }\r\n        }\r\n\r\n    })\r\n\r\n    let showLoader = () => {\r\n        setLoaderStatus(true)\r\n        setTimeout(() => {\r\n            setLoaderStatus(false)\r\n            history.push('/congratulations')\r\n        }, 4000);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Loader loading={loaderStatus} color={'#3d5e61'} background={'rgba(255,255,255,.5)'} />\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"text-center\"></div>\r\n                        <Progress animated={true} striped color=\"primary\" value=\"75\">75%</Progress>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"jumbotron py-3 mt-2\">\r\n                <div className=\"container personalDetails py-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"mx-auto col-sm-6 col-12\">\r\n                            <Card>\r\n                                <CardHeader className=\"bg-primary text-white\">\r\n                                    <CardTitle className=\"text-center\">Pay Invoice ({props.businessName})</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form onSubmit={handleSubmit}>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"cardHolder\" className=\"col-sm-4 col-form-label form-control-label required\">Card Holder Name</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input type=\"text\" name=\"cardHolder\" id=\"cardHolder\"\r\n\r\n\r\n\r\n\r\n                                                />\r\n                                            </div>\r\n                                            {/* <FormFeedback>{errors.zipCode}</FormFeedback> */}\r\n\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"cardNumber\" className=\"col-sm-4 col-form-label form-control-label required\">Card Number</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input type=\"number\" name=\"cardNumber\" id=\"cardNumber\" pattern=\"[0-9.]+\"\r\n\r\n\r\n\r\n                                                />\r\n\r\n                                            </div>\r\n                                            {/* <FormFeedback>{errors.zipCode}</FormFeedback> */}\r\n\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"validTill\" className=\"col-sm-4 col-form-label form-control-label required\">Valid till</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input type=\"month\" min=\"2020-09\" max=\"2036-08\" name=\"validTill\" id=\"validTill\"\r\n                                                />\r\n                                            </div>\r\n                                            {/* <FormFeedback>{errors.zipCode}</FormFeedback> */}\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n\r\n\r\n                                            <Label htmlFor=\"cvv\" className=\"col-sm-4 col-form-label form-control-label required\">CVV</Label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Input className=\"cvvPass\" type=\"number\" pattern=\"[0-9]*\" inputMode=\"numeric\" name=\"cvv\" id=\"cvv\"\r\n                                                />\r\n                                            </div>\r\n                                            {/* <FormFeedback>{errors.zipCode}</FormFeedback> */}\r\n\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n                                            <div className=\"col-sm-8 offset-sm-4 mt-2\">\r\n                                                <b className=\"lead\"><b>Final Price is ${props.yesSelected === true ? props.selectedRadioValueYes : props.selectedLeasePrice}</b><sup>{props.yesSelected === true ?'*':''}</sup></b>\r\n                                               {props.yesSelected === true?<p>* <small className=\"text-muted\">This is inclusive of workspace lease and insurance for a period of {props.selectedLeaseDuration} {props.selectedLeaseDuration==='1'?'month':'months'}</small></p> : <></> } \r\n\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n                                            <div className=\"col-sm-12 col-12\">\r\n\r\n                                                <button onClick={showLoader} className=\"SubmitButton\">Pay <i className=\"fa fa-lock\" aria-hidden=\"true\"></i></button>\r\n\r\n                                            </div>\r\n                                        </FormGroup>\r\n\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Payment;","import React from 'react'\r\nimport { CardBody, Progress, Card, CardImg, Input, FormGroup } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nconst Congrats = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"text-center\"></div>\r\n                        <Progress animated={true} striped color=\"primary\" value=\"88\">88%</Progress>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row mt-2 jumbotron\">\r\n\r\n                    <div className=\"col-sm-5\">\r\n\r\n                        <CardImg left width=\"100%\" src=\"/assets/images/us-thumbsup.png\" alt=\"US thumbs up\" />\r\n\r\n                    </div>\r\n                    <div className=\"offset-sm-1 col-sm-5 mt-3 d-sm-flex align-items-center\">\r\n                        <Card style={{ width: '100%' }}>\r\n                            <CardBody className=\"text-center\">\r\n                                <p className=\"lead\"><b>Congratulations,</b> {props.businessName}</p>\r\n                                <h2><i>Great! You're all done!</i></h2>\r\n                                <p>Welcome to your new workspace</p>\r\n                                <p>Dowload the lease contract <a href=\"/assets/files/MembershipCertificate.pdf\" download>here</a></p>\r\n                                <p><h3>OR</h3></p>\r\n                                <p>Click <a href=\"/assets/files/MembershipCertificate.pdf\" download>here</a> to receive it on email</p>\r\n\r\n                                <FormGroup row>\r\n\r\n                                    <div className=\"offset-sm-2 col-sm-8\">\r\n                                        <Input placeholder=\"Enter Email ID here\" className=\"text-center\" key=\"personEmail\" type=\"email\" name=\"personEmail\" id=\"personEmail\"\r\n                                            value={props.personEmail}\r\n                                            onChange={props.handInputChange}\r\n                                            onBlur={props.handleBlur('personEmail')} />\r\n                                    </div>\r\n                                </FormGroup>\r\n                                <p className=\"lead\">Please reach out to your workspace manager John Doe at <a href=\"tel:+91987654321\">987654321</a> for any assistance.</p>\r\n                                <FormGroup row>\r\n                                    <div className=\"col-sm-12 col-12\">\r\n                                        <Link to='/feedback' style={{ textDecoration: 'none' }}><button className=\"btn btn-block btn-danger\">Continue <i class=\"fa fa-arrow-right\"></i></button></Link>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Congrats","import React from 'react'\r\nimport Rating from 'react-rating'\r\nimport { CardBody, Progress, Card, Input, FormGroup, CardHeader, CardTitle } from 'reactstrap';\r\n\r\nconst FeedbackComp = (props) => {\r\n   let handleValue = (value) =>{\r\n    console.log(value)\r\n    }\r\n    let backToHome = () =>{\r\n        window.location.reload();\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"text-center\"></div>\r\n                        <Progress animated={true} striped color=\"primary\" value=\"100\">Done</Progress>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"jumbotron\">\r\n\r\n                <div className=\"container\">\r\n                    <div className = \"row\">\r\n                        <div className = \"offset-sm-2 col-sm-8\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-center\">\r\n                            <CardTitle className = \"text-white\">Feedback Form</CardTitle>\r\n                        </CardHeader>\r\n                        <CardBody className=\"text-center\">\r\n                            <h3>Tell us about your experience !</h3>\r\n                            <p className=\"mt-5 lead\">How would you rate your overall experience?</p>\r\n                            <Rating\r\n                                emptySymbol=\"fa fa-star-o fa-2x\"\r\n                                fullSymbol=\"fa fa-star fa-2x\"\r\n                                fractions={2}\r\n                                onClick = {(value)=>handleValue(value)}\r\n                    \r\n                            />\r\n                            <p className = \"lead mt-3\">Any other comments?</p>\r\n                            <FormGroup className = \"offset-sm-2 col-sm-8\">\r\n                                <Input type = 'textarea' style ={{height : '200px',width : '100%'}} />\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                            <div className=\"offset-sm-4 col-sm-4\">\r\n                                       <button className=\"btn btn-block btn-primary\" onClick = {backToHome}>Submit</button>\r\n                                    </div>\r\n                            </FormGroup>\r\n                        </CardBody>\r\n\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default FeedbackComp;","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport '../App.css';\r\nimport Workspace from './Workspaces'\r\nimport Landing from './LandingPage'\r\nimport history from './history';\r\nimport { Switch, Route, Router, Redirect } from 'react-router-dom';\r\nimport { WORKSPACEINFO } from '../shared/WorkspaceInfo'\r\nimport SecuredRoute from './SecuredRoute';\r\nimport { authentication } from './SecuredRoute';\r\nimport axios from 'axios';\r\nimport WorkspaceDetails from './WorkspaceDetails';\r\nimport PersonalInfo from './PersonalInfo'\r\nimport ConfirmPerson from './ConfirmPerson';\r\nimport CRC32 from 'crc-32/crc32.js';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport { usePromiseTracker } from 'react-promise-tracker';\r\nimport Loader from 'react-promise-loader';\r\nimport LeaseTimePeriod from './LeaseTimePeriod';\r\nimport Payment from './PaymentComponent';\r\nimport Congrats from './Congrats';\r\nimport FeedbackComp from './Feedback';\r\n\r\n\r\nclass MainComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isVerified: false,\r\n            zipCode: '',\r\n            setDate: '',\r\n            agree: false,\r\n            people: 0,\r\n            touched: {\r\n                zipCode: false,\r\n                setDate: false,\r\n                people: false,\r\n                businessName: false,\r\n                personEmail: false,\r\n                personZipCode: false\r\n\r\n            },\r\n            workspaceinfo: WORKSPACEINFO,\r\n            location: '',\r\n            businessName: '',\r\n            personEmail: '',\r\n            personZipCode: '',\r\n            personLocation: '',\r\n            personCity: '',\r\n            personState: '',\r\n            selectedFile: '',\r\n            businessCard: false,\r\n            imageChkSum: '',\r\n            personName: '',\r\n            personPhone: '',\r\n            personAddress: '',\r\n            selectedWorkspaceId: '',\r\n            selectedLeaseDuration: '',\r\n            selectedLeasePrice: '',\r\n            selectedRadioValue: '',\r\n            selectedRadioValueYes: 0,\r\n            selectedRadioValueNo: 0,\r\n            clickCount: 0,\r\n            yesSelected: false,\r\n            setSelectedYear: '',\r\n            officeState: '',\r\n            officeCity: '',\r\n            personFirstName: '',\r\n            personLastName: '',\r\n            selectedOfficeAddress1: '',\r\n            selectedOfficeAddress2: '',\r\n            setExposureAmount: '',\r\n            setPremiumAmount: 20\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handInputChange = async (event) => {\r\n\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        await this.setState({\r\n            [name]: value\r\n        })\r\n\r\n        if (this.state.personName.length > 3) {\r\n            let fullName = this.state.personName;\r\n            let sepratedName = fullName.split(' ');\r\n            let firstName = sepratedName[0];\r\n            let lastName = sepratedName[1];\r\n            this.setState({\r\n                personFirstName: firstName,\r\n                personLastName: lastName\r\n            })\r\n\r\n        }\r\n\r\n        if (this.state.setDate) {\r\n            let dateEntered = this.state.setDate\r\n            let getYear = dateEntered.substring(0, 4)\r\n            this.setState({\r\n                setSelectedYear: getYear\r\n            })\r\n        }\r\n\r\n        if (this.state.zipCode.length === 5 && this.state.location === '') {\r\n\r\n            let zipCodeUs = this.state.zipCode;\r\n            this.handleFetch(zipCodeUs);\r\n        }\r\n        else if (this.state.zipCode.length < 5) {\r\n            this.setState({\r\n                location: ''\r\n            })\r\n        }\r\n\r\n        if (this.state.personZipCode.length === 5 && this.state.personLocation === '') {\r\n\r\n            let zipCodeUs = this.state.personZipCode;\r\n            this.handleFetch(zipCodeUs);\r\n        }\r\n        else if (this.state.personZipCode.length < 5) {\r\n            this.setState({\r\n                personLocation: ''\r\n            })\r\n        }\r\n    }\r\n    // Zip code to city name API\r\n    handleFetch = async (zipCodeUs) => {\r\n        // const api = 'js-tBUE5ohdSBKXX9aeg6K9RYpb0uRCDB8TODbJSrHdwz6XNbAAtZuvnoByS6OfaElq';\r\n        const api = 'SmmXWcALEZhiih3ciuQeSbk6sZCxRXP62BvdDdmJmEjVsIOR05KDg9mnUtGSWDnX';\r\n        // const proxyurl = \"https://corsaccess.herokuapp.com/\";\r\n        // const api = 'inHTf3va4QCIsHqaeoFNQuxXIViIWpyjqZd68zeW5K5xmGQhxnbyuQvPagxV9uSA';\r\n        let formatZip = zipCodeUs.slice(0, 5);\r\n        let url = `https://www.zipcodeapi.com/rest/${api}/info.json/${formatZip}/degrees`\r\n        const res = await axios.get(url);\r\n        // const res = await axios.get(`${proxyurl}${url}`);\r\n        let city = res.data.city;\r\n        let locState = res.data.state\r\n        if (city && locState !== undefined && this.state.zipCode >= 5) {\r\n            this.setState({\r\n                location: `${city}, ${locState}, U.S`,\r\n                officeCity: city,\r\n                officeState: locState\r\n            })\r\n        }\r\n        if (city && locState !== undefined && this.state.personZipCode >= 5) {\r\n            this.setState({\r\n                personLocation: `${city}, ${locState}, U.S`,\r\n                personCity: city,\r\n                personState: locState\r\n            })\r\n            // setValue(`${city}, ${state}, U.S`);\r\n            // console.log(JSON.stringify(res.data));\r\n        }\r\n    }\r\n\r\n\r\n    handleBlur = (field) => (evt) => {\r\n\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        })\r\n\r\n    }\r\n\r\n    onChange = (value) => {\r\n\r\n        this.setState({\r\n            isVerified: true\r\n        })\r\n\r\n    }\r\n\r\n\r\n    toggleWorkspace = () => {\r\n        authentication.isLoggedIn = true;\r\n        console.log(authentication.isLoggedIn)\r\n        // alert(`Pincode is ${this.state.zipCode}`)\r\n        history.push('/workspaces');\r\n\r\n    }\r\n    increase = () => {\r\n        this.setState({\r\n            people: parseInt(this.state.people) + 1\r\n        })\r\n        if (this.state.people === '') {\r\n            this.setState({\r\n                people: 0\r\n            })\r\n        }\r\n    }\r\n    decrease = () => {\r\n        if (this.state.people > 0) {\r\n            this.setState({\r\n                people: parseInt(this.state.people) - 1\r\n            })\r\n        }\r\n        if (this.state.people === '') {\r\n            this.setState({\r\n                people: 0\r\n            })\r\n        }\r\n    }\r\n    onFileChange = async (event) => {\r\n\r\n        // Update the state \r\n        if (this.state.businessName !== '' || this.state.personAddress !== '' || this.state.personEmail !== '' || this.state.personPhone !== '') {\r\n            this.setState({\r\n                businessName: '',\r\n                personAddress: '',\r\n                personEmail: '',\r\n                personName: '',\r\n                personPhone: '',\r\n                personZipCode: '',\r\n                personLocation: ''\r\n            })\r\n        }\r\n        await this.setState({ selectedFile: event.target.files[0] });\r\n        console.log(\"Name--->...\" + this.state.selectedFile.name)\r\n        const reader = new FileReader();\r\n        let pattern = /image-*/;\r\n        if (!this.state.selectedFile.type.match(pattern)) {\r\n            await this.setState({\r\n                selectedFile: null,\r\n                imageChkSum: ''\r\n            });\r\n            alert('invalid format');\r\n            return;\r\n        }\r\n        reader.addEventListener('load', (event) => {\r\n            this._handleReaderLoaded(event);\r\n        });\r\n        reader.readAsBinaryString(this.state.selectedFile);\r\n    };\r\n    _handleReaderLoaded(event) {\r\n        this.setState({\r\n            businessCard: true\r\n        })\r\n        // this.pg1Next = true;\r\n        const data = event.target.result;\r\n        this.setState({\r\n            imageChkSum: this.getCheckSumValue(data)\r\n        })\r\n        if (this.state.selectedFile !== '' && this.state.imageChkSum !== null) {\r\n            this.scanCard(this.state.selectedFile, this.state.imageChkSum)\r\n        }\r\n    }\r\n    getCheckSumValue(data) {\r\n        const crcVal = CRC32.bstr(data);\r\n        const hexVal = this.lpad((crcVal >>> 0).toString(16), 8, \"0\");\r\n        return hexVal;\r\n    }\r\n    lpad(s, len, chr) {\r\n        const L = len - s.length;\r\n        const C = chr || \" \";\r\n        if (L <= 0) {\r\n            return s;\r\n        }\r\n        return new Array(L + 1).join(C) + s;\r\n    };\r\n\r\n    setYear = async (year) => {\r\n        await this.setState({\r\n            setSelectedYear: year\r\n        })\r\n    }\r\n    // Guidewire Api call\r\n    guideWireApi = async () => {\r\n        const proxyurl = \"https://corsaccess.herokuapp.com/\";\r\n        const url = 'http://direct-digital-gw.uk-e1.cloudhub.io/GWire';\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Credentials': 'true',\r\n            'userName': 'su',\r\n            'password': 'gw',\r\n            'Access-Control-Allow-Origin': '*',\r\n            \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\r\n            \"Access-Control-Allow-Headers\": \"Content-Type, Authorization, X-Requested-With\",\r\n            \"X-Requested-With\": \"XMLHttpRequest\"\r\n        }\r\n        const reqBody = {\r\n\r\n            \"input\": {\r\n                \"orderKeys\": [\"policy\"],\r\n                \"policy\": {\r\n                    \"yearBusinessStarted\": this.state.setSelectedYear,\r\n                    \"BaseState\": this.state.officeState,\r\n                    \"accountHolderName\": this.state.personName,\r\n                    \"accountHolderEmailAddress\": this.state.personEmail,\r\n                    \"accountHolderContactFirstName\": this.state.personFirstName,\r\n                    \"accountHolderContactLastName\": this.state.personLastName,\r\n                    \"primaryAddressLine1\": this.state.selectedOfficeAddress1,\r\n                    \"primaryAddressLine2\": this.state.selectedOfficeAddress2,\r\n                    \"primaryAddressCity\": this.state.officeCity,\r\n                    \"primaryAddressState\": this.state.officeState,\r\n                    \"primaryAddressCountry\": \"US\",\r\n                    \"primaryAddressPostalCode\": this.state.zipCode,\r\n                    \"primaryAddressType\": \"business\",\r\n                    \"coverageTermValue\": \"2000000\",\r\n                    \"exposureBasisAmount\": this.state.setExposureAmount,\r\n                    \"generalInfoWebsite\": \"aa@aa.com\",\r\n                    \"generalInfoDBANames\": \"DBA\",\r\n                    \"generalInfoLegalStatus\": \"Open\",\r\n                    \"financialRiskAnnualRevenue\": \"5000\",\r\n                    \"financialRiskD_B\": \"1\",\r\n                    \"industryRiskSICDescription\": \"Low Risk\",\r\n                    \"industryRiskNAICSDescription\": \"NAICS\",\r\n                    \"industryRiskIndustryInfo\": \"Low\",\r\n                    \"industryRiskCompanyDesc\": \"Low Risk\",\r\n                    \"industryRiskTypeOfCargo\": \"Low\",\r\n                    \"locationRiskFloodRiskScore\": \"78\",\r\n                    \"locationRiskCrimeScore\": \"34\",\r\n                    \"locationRiskTextCrimeScore\": \"47\",\r\n                    \"locationRiskFireProtectScore\": \"89\",\r\n                    \"locationRiskNearestFireStation\": \"Alberta\",\r\n                    \"locationRiskNearFireStionType\": \"Low\",\r\n                    \"locationRiskFireProtectClass\": \"01\",\r\n                    \"locationRiskDistanceInMiles\": \"23\",\r\n                    \"locationRiskDistanceInMin\": \"12\",\r\n                    \"locationRiskNo_of_Locations\": \"1\",\r\n                    \"locationalRiskFIPSCode\": \"023\",\r\n                    \"locationalRiskLatitude\": \"12\",\r\n                    \"locationalRiskLongitude\": \"26\",\r\n                    \"locationalRiskWildfireRisk\": \"36\",\r\n                    \"locationalRiskEarthquake\": \"Medium\",\r\n                    \"locationalRiskWind\": \"87\",\r\n                    \"locationalRiskHail\": \"High\",\r\n                    \"locationalRiskDistanceToShore\": \"42\",\r\n                    \"locationalRiskTornado\": \"High\",\r\n                    \"locationalRiskLightning\": \"High\",\r\n                    \"locationalRiskToxicRelFltyDis\": \"Low\",\r\n                    \"locationalRiskForcibleRobbery\": \"Low\",\r\n                    \"locationalRiskMtrVehicleTheft\": \"High\",\r\n                    \"locationalRiskMurder\": \"High\",\r\n                    \"mgmtRiskBBBRating\": \"87\",\r\n                    \"mgmtRiskAny_ProductRecalls\": \"6\",\r\n                    \"mgmtRiskSocialMediaScore\": \"45\",\r\n                    \"mgmtRiskAny_CodeViolations\": \"1\",\r\n                    \"mgmtRiskPFR\": \"65\",\r\n                    \"operationRiskIsAllTime\": \"false\",\r\n                    \"propertyRiskOperateFromHome\": \"true\",\r\n                    \"propertyRiskDoPlaceOfBusiness\": \"true\",\r\n                    \"propertyRiskExactSqFootage\": \"2000\",\r\n                    \"propertyRiskNoOfFloors\": \"4\",\r\n                    \"propertyRiskYearBuilt\": \"2000\",\r\n                    \"propertyRiskConstructionType\": \"1A\",\r\n                    \"operationRiskHrsOfOperation\": \"2\",\r\n                    \"operationRiskFPCCodes\": \"112\",\r\n                    \"personnelRiskFullTimeEmployees\": \"3\",\r\n                    \"lineLeveDetailsTranpNumber\": \"1\"\r\n                }\r\n            }\r\n        }\r\n        try {\r\n            let res = await axios.post(proxyurl + url, reqBody, { headers: headers })\r\n            console.log(JSON.stringify(res.data.output.response.premium));\r\n            if (res.data.output.response.premium) {\r\n                let premiumWithUsd = res.data.output.response.premium;\r\n                let separate = premiumWithUsd.split('.');\r\n                let premiumAmount = separate[0];\r\n                console.log(`premium amount is ---> ${premiumAmount}`);\r\n\r\n                this.setState(\r\n                    { setPremiumAmount: premiumAmount }\r\n                )\r\n            }\r\n            console.log(`Response is --> ${res}`)\r\n        }\r\n        catch (e) {\r\n            console.error(\"error in GuideWire---->\" + e)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    scanCard = async (selectedFileState, imageChkSumState) => {\r\n        let res = '';\r\n        let taskId = '';\r\n        const proxyurl = \"https://corsaccess.herokuapp.com/\";\r\n        let url = 'https://cloud-westus.ocrsdk.com/v2/processBusinessCard?exportFormat=xml';\r\n        let username = \"53573204-976c-40f4-a22b-5f6bad540290\"\r\n        let pass = \"W9zhas+CMMYurG3HOmnrqsig\"\r\n        const httpOptions = {\r\n\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Basic ' + btoa(username + \":\" + pass),\r\n            'X-Requested-With': 'XMLHttpRequest',\r\n            'Access-Control-Allow-Origin': '*'\r\n\r\n        }\r\n\r\n        try {\r\n\r\n            res = await trackPromise(axios.post(proxyurl + url, selectedFileState, { headers: httpOptions }))\r\n            console.log(JSON.stringify(res.data))\r\n        } catch (e) {\r\n            console.error(\"error in scanCard---->\" + e)\r\n        }\r\n        if (res.data.taskId !== '') {\r\n            taskId = res.data.taskId\r\n        }\r\n        // alert(taskId);\r\n        this.GetresultUrls(taskId);\r\n    }\r\n\r\n    // xml  response to JSON\r\n    xmlToJson = (xml) => {\r\n        // Create the return object\r\n        let obj = {};\r\n\r\n        if (xml.nodeType === 1) {\r\n            // element\r\n            // do attributes\r\n            if (xml.attributes.length > 0) {\r\n                obj[\"@attributes\"] = {};\r\n                for (let j = 0; j < xml.attributes.length; j++) {\r\n                    let attribute = xml.attributes.item(j);\r\n                    obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n                }\r\n            }\r\n        } else if (xml.nodeType === 3) {\r\n            // text\r\n            obj = xml.nodeValue;\r\n        }\r\n\r\n        // do children\r\n        // If all text nodes inside, get concatenated text from them.\r\n        let textNodes = [].slice.call(xml.childNodes).filter(function (node) {\r\n            return node.nodeType === 3;\r\n        });\r\n        if (xml.hasChildNodes() && xml.childNodes.length === textNodes.length) {\r\n            obj = [].slice.call(xml.childNodes).reduce(function (text, node) {\r\n                return text + node.nodeValue;\r\n            }, \"\");\r\n        } else if (xml.hasChildNodes()) {\r\n            for (let i = 0; i < xml.childNodes.length; i++) {\r\n                let item = xml.childNodes.item(i);\r\n                let nodeName = item.nodeName;\r\n                if (typeof obj[nodeName] === \"undefined\") {\r\n                    obj[nodeName] = this.xmlToJson(item);\r\n                } else {\r\n                    if (typeof obj[nodeName].push === \"undefined\") {\r\n                        let old = obj[nodeName];\r\n                        obj[nodeName] = [];\r\n                        obj[nodeName].push(old);\r\n                    }\r\n                    obj[nodeName].push(this.xmlToJson(item));\r\n                }\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    // scanCard API\r\n    GetresultUrls = async (taskId) => {\r\n        let hitCount = 0;\r\n        let resultUrls = ''\r\n        let getRes = ''\r\n        let jsonResponse = ''\r\n        const proxyurl = \"https://corsaccess.herokuapp.com/\";\r\n        let url2 = 'https://cloud-westus.ocrsdk.com/v2/getTaskStatus';\r\n        let username = \"53573204-976c-40f4-a22b-5f6bad540290\"\r\n        let pass = \"W9zhas+CMMYurG3HOmnrqsig\"\r\n        const httpOptions2 = {\r\n\r\n            'Authorization': 'Basic ' + btoa(username + \":\" + pass),\r\n            'X-Requested-With': 'XMLHttpRequest',\r\n            'Access-Control-Allow-Origin': '*'\r\n        }\r\n        const paramsNew = { 'taskId': taskId }\r\n        try {\r\n\r\n            getRes = await trackPromise(axios.get(proxyurl + url2, { headers: httpOptions2, params: paramsNew }))\r\n            console.log(\"url check --->\" + JSON.stringify(getRes.data))\r\n            // requestUrl will be empty if it is in other status than complete\r\n            while (getRes.data.status !== 'Completed') {\r\n                if (hitCount <= 10) {\r\n                    console.log(\"Inside while\")\r\n                    getRes = ''\r\n                    getRes = await trackPromise(axios.get(proxyurl + url2, { headers: httpOptions2, params: paramsNew }))\r\n                    console.log(\"while---->\" + JSON.stringify(getRes.data) + \" count is \" + hitCount)\r\n                    hitCount++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            resultUrls = await getRes.data.resultUrls[0];\r\n\r\n            // alert(resultUrls)\r\n            const response = await trackPromise(fetch(proxyurl + resultUrls));\r\n\r\n            const xmlString = await trackPromise(response.text());\r\n            let XmlNode = new DOMParser().parseFromString(xmlString, 'text/xml');\r\n            jsonResponse = this.xmlToJson(XmlNode);\r\n            console.log(\"Response of xml \", jsonResponse)\r\n            this.setDataforXmlResponse(jsonResponse)\r\n\r\n        } catch (e) {\r\n            console.error(\"error in taskId---->\" + e)\r\n        }\r\n\r\n    }\r\n    setDataforXmlResponse = (xmltojsonResponse) => {\r\n        const Data = xmltojsonResponse\r\n        //console.log(Data.document.businessCard.field) \r\n        const length = Data.document.businessCard.field\r\n        for (let i of length) {\r\n            // console.log(i);\r\n            if (i[\"@attributes\"].type === \"Company\") {\r\n                this.setState({\r\n                    businessName: i.value\r\n                })\r\n            }\r\n            if (i[\"@attributes\"].type === \"Email\") {\r\n                // this.addressOnCard = i.value\r\n                if (i.value !== '' && i.value !== null && i.value !== 0) {\r\n                    this.setState({\r\n                        personEmail: i.value\r\n                    })\r\n                }\r\n            }\r\n            if (i[\"@attributes\"].type === \"Phone\") {\r\n                // this.addressOnCard = i.value\r\n                if (i.value !== '' && i.value !== null && i.value !== 0) {\r\n                    this.setState({\r\n                        personPhone: i.value\r\n                    })\r\n                }\r\n            }\r\n            if (i[\"@attributes\"].type === \"Name\") {\r\n                // this.addressOnCard = i.value\r\n                if (i.value !== '' && i.value !== null && i.value !== 0) {\r\n                    this.setState({\r\n                        personName: i.value\r\n                    })\r\n                }\r\n            }\r\n            if (i[\"@attributes\"].type === \"Address\") {\r\n                // this.addressOnCard = i.value\r\n                let newArr = []\r\n                let checkZip = []\r\n                newArr = i.value.split(' ')\r\n                for (let j = 0; j < newArr.length; j++) {\r\n                    checkZip[j] = parseInt(newArr[j]);\r\n                    // if(isNaN(checkZip[j])){\r\n                    //     checkZip.splice(j,1)\r\n                    // }\r\n                    // console.log(`${checkZip[j]} ${typeof(checkZip[j])} `)\r\n\r\n                    // if(newArr[j].length>=5 && Number.isInteger(newArr[j])){\r\n                    //     console.log(newArr[j])\r\n                    // }\r\n                }\r\n                for (let j = checkZip.length; j >= 0; j--) {\r\n\r\n                    if (isNaN(checkZip[j])) {\r\n                        checkZip.splice(j, 1)\r\n                    }\r\n                    if (checkZip[j] >= 5) {\r\n                        let locationZip = checkZip[j].toString()\r\n\r\n                        this.setState({\r\n                            personZipCode: checkZip[j]\r\n                        })\r\n                        this.handleFetch(locationZip);\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                console.log(`Check Zip ---> ${[...checkZip]}`)\r\n                console.log(`newArr ---> ${newArr.length}, ${newArr}`)\r\n                if (i.value !== '' && i.value !== null && i.value !== 0) {\r\n                    this.setState({\r\n                        personAddress: i.value\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    deletePersonDetails = () => {\r\n        this.setState({\r\n            businessName: '',\r\n            personZipCode: '',\r\n            personEmail: '',\r\n            personLocation: '',\r\n            personCity: '',\r\n            personState: ''\r\n        })\r\n    }\r\n\r\n    getSelectedWorkspaceId = async () => {\r\n        let url = window.location.href\r\n        console.log(url)\r\n        let findId = url.split('/')\r\n        let id\r\n        id = findId[4]\r\n        console.log(\"ID is --->\" + id)\r\n        await this.setState({\r\n            selectedWorkspaceId: id\r\n        })\r\n        let filteredWorkSpace = this.state.workspaceinfo.filter((work) => work.id === parseInt(id))[0];\r\n        if (filteredWorkSpace.name) {\r\n            let workspaceName = filteredWorkSpace.name;\r\n            let separateAddress = workspaceName.split(',');\r\n            let address1 = separateAddress[0].trim();\r\n            let address2 = separateAddress[1].trim();\r\n            let exposureAmount = filteredWorkSpace.exposureAmount;\r\n            this.setState({\r\n                selectedOfficeAddress1: address1,\r\n                selectedOfficeAddress2: address2,\r\n                setExposureAmount: exposureAmount\r\n            })\r\n        }\r\n        this.guideWireApi();\r\n    }\r\n\r\n    updateLeaseDuration = async (duration, price) => {\r\n        if (duration === '1') {\r\n            this.setState({\r\n                selectedLeaseDuration: duration,\r\n                selectedLeasePrice: price\r\n            })\r\n        }\r\n        else if (duration === '6') {\r\n            price = parseInt(price) * parseInt(duration);\r\n            this.setState({\r\n                selectedLeaseDuration: duration,\r\n                selectedLeasePrice: price\r\n            })\r\n        }\r\n        else if (duration === '12') {\r\n            price = parseInt(price) * parseInt(duration);\r\n            this.setState({\r\n                selectedLeaseDuration: duration,\r\n                selectedLeasePrice: price\r\n            })\r\n        }\r\n    }\r\n\r\n    updateRadioState = async (radioValue) => {\r\n\r\n        let orignalValue = this.state.selectedLeasePrice\r\n        console.log(`type of orignalValue is ${typeof (orignalValue)} and type of previousValue is ${typeof (previousValue)}`)\r\n        this.setState({\r\n            clickCount: this.state.clickCount + 1\r\n        })\r\n\r\n        await this.setState({\r\n            selectedRadioValue: parseInt(radioValue),\r\n\r\n        })\r\n\r\n        if (radioValue === '10') {\r\n            if (this.state.selectedRadioValueYes === 0) {\r\n                if (this.state.selectedLeaseDuration === '1') {\r\n                    let totalAmount = parseInt(this.state.selectedLeasePrice) + parseInt(this.state.setPremiumAmount)\r\n                    await this.setState({\r\n                        selectedRadioValueYes: totalAmount\r\n                    })\r\n                }\r\n                else if (this.state.selectedLeaseDuration === '6') {\r\n                    let totalAmount = parseInt(this.state.selectedLeasePrice) + (parseInt(this.state.setPremiumAmount) * 6)\r\n                    await this.setState({\r\n                        selectedRadioValueYes: totalAmount\r\n                    })\r\n                }\r\n                else if (this.state.selectedLeaseDuration === '12') {\r\n                    let totalAmount = parseInt(this.state.selectedLeasePrice) + (parseInt(this.state.setPremiumAmount) * 12)\r\n                    await this.setState({\r\n                        selectedRadioValueYes: totalAmount\r\n                    })\r\n                }\r\n            }\r\n            await this.setState({\r\n                yesSelected: true\r\n            })\r\n        }\r\n        if (radioValue === '0') {\r\n            await this.setState({\r\n                selectedRadioValueNo: this.state.selectedLeasePrice,\r\n                yesSelected: false\r\n            })\r\n        }\r\n\r\n        //   await this.setState({\r\n        //         selectedLeasePrice: this.state.selectedLeasePrice + this.state.radioValue\r\n        //     })\r\n\r\n    }\r\n\r\n    updateClickCount = () => {\r\n\r\n        this.setState({\r\n            clickCount: 0,\r\n            selectedLeaseDuration: 0,\r\n            selectedLeasePrice: 0,\r\n            yesSelected: false,\r\n            selectedRadioValueNo: 0,\r\n            selectedRadioValueYes: 0\r\n        })\r\n\r\n    }\r\n\r\n\r\n    PersonInformation = () => {\r\n        return (\r\n            <>\r\n                <PersonalInfo key={'personalIn'}\r\n                    handInputChange={this.handInputChange}\r\n                    handleBlur={this.handleBlur}\r\n                    onChange={this.onChange}\r\n                    personZipCode={this.state.personZipCode}\r\n                    businessName={this.state.businessName}\r\n                    personEmail={this.state.personEmail}\r\n                    updatePersonDetails={this.updatePersonDetails}\r\n                    deletePersonDetails={this.deletePersonDetails}\r\n                    personLocation={this.state.personLocation}\r\n                    onFileChange={this.onFileChange}\r\n                    selectedFile={this.state.selectedFile}\r\n                    personEmailTouched={this.state.touched.personEmail}\r\n                    businessNameTouched={this.state.touched.businessName}\r\n                    personZipCodeTouched={this.state.touched.personZipCode} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    WorkspaceWithId = ({ match }) => {\r\n\r\n        return (\r\n            <>\r\n                <WorkspaceDetails workspace={this.state.workspaceinfo.filter((workspace) => workspace.id === parseInt(match.params.workspaceId, 10))[0]}\r\n                    getSelectedWorkspaceId={this.getSelectedWorkspaceId} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    Workspaces = () => {\r\n        return (\r\n            <>\r\n                <Workspace\r\n                    zipCode={this.state.zipCode}\r\n                    workspaceinfo={this.state.workspaceinfo}\r\n                    setDate={this.state.setDate}\r\n                    people={this.state.people}\r\n                    location={this.state.location} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    ConfirmPersonDetails = () => {\r\n        return (\r\n            <>\r\n                <ConfirmPerson\r\n                    handInputChange={this.handInputChange}\r\n                    handleBlur={this.handleBlur}\r\n                    onChange={this.onChange}\r\n                    personCity={this.state.personCity}\r\n                    personState={this.state.personState}\r\n                    personEmail={this.state.personEmail}\r\n                    businessName={this.state.businessName}\r\n                    personAddress={this.state.personAddress}\r\n                    personName={this.state.personName}\r\n                    personPhone={this.state.personPhone} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    LeaseWorkspaceTimeDuration = () => {\r\n        return (\r\n            <>\r\n                <LeaseTimePeriod\r\n                    workspace={this.state.workspaceinfo}\r\n                    selectedWorkspaceId={this.state.selectedWorkspaceId}\r\n                    selectedLeaseDuration={this.state.selectedLeaseDuration}\r\n                    updateLeaseDuration={(duration, price) => this.updateLeaseDuration(duration, price)}\r\n                    updateRadioState={(radioValue) => this.updateRadioState(radioValue)}\r\n                    updateClickCount={this.updateClickCount}\r\n                    businessName={this.state.businessName}\r\n                    setPremiumAmount={this.state.setPremiumAmount}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n\r\n    PaymentComp = () => {\r\n        return (\r\n            <>\r\n                <Payment\r\n                    selectedLeasePrice={this.state.selectedLeasePrice}\r\n                    selectedRadioValueYes={this.state.selectedRadioValueYes}\r\n                    selectedRadioValueNo={this.state.selectedRadioValueNo}\r\n                    updateClickCount={this.updateClickCount}\r\n                    yesSelected={this.state.yesSelected}\r\n                    businessName={this.state.businessName}\r\n                    selectedLeaseDuration={this.state.selectedLeaseDuration}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n\r\n    CongratsComp = () => {\r\n        return (\r\n            <>\r\n                <Congrats\r\n                    handInputChange={this.handInputChange}\r\n                    handleBlur={this.handleBlur}\r\n                    onChange={this.onChange}\r\n                    personEmail={this.state.personEmail}\r\n                    businessName={this.state.businessName} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    FeedbackCompSecured = () => {\r\n        return (\r\n            <>\r\n                <FeedbackComp />\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <>\r\n                <Loader promiseTracker={usePromiseTracker} color={'#3d5e61'} background={'rgba(255,255,255,.5)'} />\r\n                <Router history={history}>\r\n                    <Header />\r\n                    <Switch>\r\n                        <Route exact path='/' render={() => <Landing key={'landingComp'}\r\n\r\n                            isVerified={this.state.isVerified}\r\n                            zipCode={this.state.zipCode}\r\n                            setDate={this.state.setDate} touched={this.state.touched}\r\n                            handInputChange={this.handInputChange}\r\n                            handleBlur={this.handleBlur}\r\n                            toggleWorkspace={this.toggleWorkspace}\r\n                            onChange={this.onChange}\r\n                            people={this.state.people}\r\n                            increase={this.increase}\r\n                            decrease={this.decrease}\r\n                            location={this.state.location}\r\n                            setYear={(year) => this.setYear(year)} />} />\r\n                        <SecuredRoute exact path='/workspaces' component={this.Workspaces} />\r\n                        <SecuredRoute path=\"/workspaces/:workspaceId\" component={this.WorkspaceWithId} />\r\n                        <SecuredRoute exact path=\"/personalinfo\" component={this.PersonInformation} />\r\n                        <SecuredRoute exact path=\"/confirmPerson\" component={this.ConfirmPersonDetails} />\r\n                        <SecuredRoute exact path=\"/leaseDuration\" component={this.LeaseWorkspaceTimeDuration} />\r\n                        <SecuredRoute exact path=\"/payment\" component={this.PaymentComp} />\r\n                        <SecuredRoute exact path=\"/congratulations\" component={this.CongratsComp} />\r\n                        <SecuredRoute exact path='/feedback' component={this.FeedbackCompSecured} />\r\n                        <Redirect to='/' />\r\n                    </Switch>\r\n\r\n                </Router>\r\n                <Footer />\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default MainComponent","import React from 'react';\r\nimport './App.css';\r\nimport MainComponent from './components/MainComponent';\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"appjs\">\r\n      \r\n        <MainComponent />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n// render={(props) => <Workspace zipCode=\"Hello,\" {...props} />}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}